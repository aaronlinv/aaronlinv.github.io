<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Aaron Lin</title>
    <link>https://aaronlinv.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sat, 22 Feb 2020 14:19:22 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Web服务器笔记-通用Servlet</title>
      <link>https://aaronlinv.github.io/2020/02/22/web-server-note-14/</link>
      <guid>https://aaronlinv.github.io/2020/02/22/web-server-note-14/</guid>
      <pubDate>Sat, 22 Feb 2020 11:07:33 GMT</pubDate>
      <description>
      
        
        
          &lt;h4 id=&quot;通用Servlet&quot;&gt;&lt;a href=&quot;#通用Servlet&quot; class=&quot;headerlink&quot; title=&quot;通用Servlet&quot;&gt;&lt;/a&gt;通用Servlet&lt;/h4&gt;&lt;p&gt;定义个请求都要去写一个Servlet，一个商品模块就写了6个Servlet&lt;br&gt;一
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h4 id="通用Servlet"><a href="#通用Servlet" class="headerlink" title="通用Servlet"></a>通用Servlet</h4><p>定义个请求都要去写一个Servlet，一个商品模块就写了6个Servlet<br>一个工程当中会有很多的Servlet</p><h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><p>在一个模块当中只写一个Servlet，在跳转到Servlet时，根据不同的操作，传入一个特定的参数<br>在Servlet当中接收特定的参数，根据参数的值不同，跳转到不同的Servlet中</p><p>实现步骤</p><ol><li>假设有一个页面里面有四个请求<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath &#125;/TestServlet?action=add"&gt;添加&lt;/a&gt;</span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath &#125;/TestServlet?action=del"&gt;删除&lt;/a&gt;</span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath &#125;/TestServlet?action=update"&gt;更新&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>定义一个TestServlet接收请求</li><li>定义各自的业务方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/TestServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"TestServlet"</span>);</span><br><span class="line">String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"add"</span>.equals(action)) &#123;</span><br><span class="line"></span><br><span class="line">add(request, response);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"del"</span>.equals(action)) &#123;</span><br><span class="line"></span><br><span class="line">del(request, response);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"update"</span>.equals(action)) &#123;</span><br><span class="line"></span><br><span class="line">update(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"add"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"del"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"update"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="string">"add"</span>.equals(action)) </span><br><span class="line"><span class="comment">// 这样可以避免action为空，空指针异常，通常用常量调用equals</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h4><p>每一个业务中都有一个转发，只是转发的路径不同<br>把转发拿到service中处理，调用各自方法时，返回跳转的路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/TestServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"TestServlet"</span>);</span><br><span class="line">String desPath = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"add"</span>.equals(action)) &#123;</span><br><span class="line"></span><br><span class="line">desPath = add(request, response);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"del"</span>.equals(action)) &#123;</span><br><span class="line"></span><br><span class="line">desPath = del(request, response);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"update"</span>.equals(action)) &#123;</span><br><span class="line"></span><br><span class="line">desPath = update(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (desPath != <span class="keyword">null</span>) &#123;</span><br><span class="line">request.getRequestDispatcher(desPath).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> String <span class="title">add</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"add"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"add.jsp"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> String <span class="title">del</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"del"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"del.jsp"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> String <span class="title">update</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"update"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"update.jsp"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="改进2"><a href="#改进2" class="headerlink" title="改进2"></a>改进2</h4><p>service当中if判断比较多，使用反射<br>接收参数之后，查看当前字节码当中有没有和参数相同的方法<br>如果有，就动态的来去调用<br>注意反射直接invoke的方法必须是public的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/TestServlet2"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServlet2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"TestServlet"</span>);</span><br><span class="line">String desPath = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.获取字节码</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Class clazz = <span class="keyword">this</span>.getClass();</span><br><span class="line">Method method = clazz.getMethod(action, HttpServletRequest.class, HttpServletResponse.class);</span><br><span class="line"><span class="comment">// 判断有没有传入的方法</span></span><br><span class="line"><span class="keyword">if</span>(method != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// 使用当前对象调用</span></span><br><span class="line">desPath = (String) method.invoke(<span class="keyword">this</span>, request,response);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 转发</span></span><br><span class="line"><span class="keyword">if</span> (desPath != <span class="keyword">null</span>) &#123;</span><br><span class="line">request.getRequestDispatcher(desPath).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"add"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"add.jsp"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">del</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"del"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"del.jsp"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"update"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"update.jsp"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="抽取基类"><a href="#抽取基类" class="headerlink" title="抽取基类"></a>抽取基类</h4><p>把service方法单独存放到一个类当中<br>以后别人在使用的时候，只需要提供对应的方法</p><p>BaseServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/BaseServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"TestServlet"</span>);</span><br><span class="line">String desPath = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.获取字节码</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Class clazz = <span class="keyword">this</span>.getClass();</span><br><span class="line">Method method = clazz.getMethod(action, HttpServletRequest.class, HttpServletResponse.class);</span><br><span class="line"><span class="comment">// 判断有没有传入的方法</span></span><br><span class="line"><span class="keyword">if</span> (method != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// 使用当前对象调用</span></span><br><span class="line">desPath = (String) method.invoke(<span class="keyword">this</span>, request, response);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 转发</span></span><br><span class="line"><span class="keyword">if</span> (desPath != <span class="keyword">null</span>) &#123;</span><br><span class="line">request.getRequestDispatcher(desPath).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestServlet2继承BaseServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/TestServlet2"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServlet2</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 进入方法，找service方法，没找到，到父类中查找</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"add"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"add.jsp"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">del</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"del"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"del.jsp"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"update"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"update.jsp"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="通用Servlet改进项目"><a href="#通用Servlet改进项目" class="headerlink" title="通用Servlet改进项目"></a>通用Servlet改进项目</h2><p>创建GoodsServlet 继承 BaseServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改jsp中的Servlet指向，链接到GoodsServlet，加上指定的action<br>在GoodsServlet中添加对应的public方法，返回转发的页面String，如果需要处理异常，则在最后return null</p><p>GoodsServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getListGoods</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"GoodsListServlet"</span>);</span><br><span class="line"><span class="comment">// 调用服务层</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">List&lt;Goods&gt; allGoods = goodsService.getAllGoods();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反转</span></span><br><span class="line">Collections.reverse(allGoods);</span><br><span class="line"></span><br><span class="line"><span class="comment">// System.out.println(allGoods);</span></span><br><span class="line"><span class="comment">// 把数据写到request域</span></span><br><span class="line">request.setAttribute(<span class="string">"allGoods"</span>, allGoods);</span><br><span class="line"><span class="comment">// 转发</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"admin/main.jsp"</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">delGoods</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 1. 接收参数</span></span><br><span class="line">String id = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line"><span class="comment">// System.out.println(id);</span></span><br><span class="line"><span class="comment">// 2. 调用服务层</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">goodsService.deleteGoods(id);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"GoodsServlet?action=getListGoods"</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">editGoodsUI</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">String id = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line"><span class="comment">// System.out.println("GoodsEditUIServlet"+id);</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 1.获取当前商品</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line">Goods goods = goodsService.getGoodsWithId(id);</span><br><span class="line">System.out.println(goods);</span><br><span class="line"><span class="comment">// 把商品写入request域中</span></span><br><span class="line">request.setAttribute(<span class="string">"goods"</span>, goods);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.获取所有分类</span></span><br><span class="line">CategoryService categoryService = <span class="keyword">new</span> CategoryService();</span><br><span class="line">List&lt;Category&gt; allCategory = categoryService.findCategory();</span><br><span class="line">request.setAttribute(<span class="string">"allCategory"</span>, allCategory);</span><br><span class="line"><span class="comment">// 3.转发到JSP页面</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"/admin/edit.jsp"</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">editGoods</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 设置字符集 post</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"><span class="comment">// System.out.println("GoodsEditServlet");</span></span><br><span class="line"><span class="comment">// 1.获取所有参数</span></span><br><span class="line">Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line"><span class="comment">// 2.封装成Goods对象</span></span><br><span class="line">Goods goods = <span class="keyword">new</span> Goods();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">BeanUtils.populate(goods, parameterMap);</span><br><span class="line">System.out.println(goods);</span><br><span class="line"><span class="comment">// 3.根据id更新数据</span></span><br><span class="line"><span class="comment">// 4.调用服务层 更新数据</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line">goods.setImage(<span class="string">"goods_10.png"</span>);</span><br><span class="line">goodsService.updateGoods(goods);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5.跳转mian.jsp</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"GoodsServlet?action=getListGoods"</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">addGoodsUI</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 1.取出所有分类</span></span><br><span class="line">List&lt;Category&gt; allCategory = <span class="keyword">null</span>;</span><br><span class="line">CategoryService categoryService = <span class="keyword">new</span> CategoryService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">allCategory = categoryService.findCategory();</span><br><span class="line">System.out.println(allCategory);</span><br><span class="line"><span class="comment">// 2.把分类存到域中</span></span><br><span class="line">request.setAttribute(<span class="string">"allCategory"</span>, allCategory);</span><br><span class="line"><span class="comment">// 3.转发edit.jsp</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"admin/add.jsp"</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">addGoods</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// System.out.println("GoodsAddServlet");</span></span><br><span class="line"><span class="comment">// 1.获取所有参数</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">Map&lt;String, String[]&gt; map = request.getParameterMap();</span><br><span class="line"><span class="comment">// System.out.println(map);</span></span><br><span class="line">Goods goods = <span class="keyword">new</span> Goods();</span><br><span class="line">BeanUtils beanUtils = <span class="keyword">new</span> BeanUtils();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">BeanUtils.populate(goods, map);</span><br><span class="line">goods.setImage(<span class="string">"goods_11.png"</span>);</span><br><span class="line">System.out.println(request.getParameter(<span class="string">"name"</span>));</span><br><span class="line">System.out.println(goods);</span><br><span class="line"><span class="comment">// 调用服务层</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line">goodsService.addGoods(goods);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 跳转列表 取最新数据</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"GoodsServlet?action=getListGoods"</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出现了一个问题：在子类中添加编码，post表单接收到的还是乱码，可以把设置编码写到BaseServlet中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/22/web-server-note-14/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-三层架构实践</title>
      <link>https://aaronlinv.github.io/2020/02/16/web-server-note-13/</link>
      <guid>https://aaronlinv.github.io/2020/02/16/web-server-note-13/</guid>
      <pubDate>Sun, 16 Feb 2020 11:40:11 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;后台管理系统登录&quot;&gt;&lt;a href=&quot;#后台管理系统登录&quot; class=&quot;headerlink&quot; title=&quot;后台管理系统登录&quot;&gt;&lt;/a&gt;后台管理系统登录&lt;/h2&gt;&lt;p&gt;JSP凡是action src href都要写绝对路径，需要加上工程名称&lt;br&gt;获取当前项目
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="后台管理系统登录"><a href="#后台管理系统登录" class="headerlink" title="后台管理系统登录"></a>后台管理系统登录</h2><p>JSP凡是action src href都要写绝对路径，需要加上工程名称<br>获取当前项目名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;pageContext.request.contextPath &#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/02/16/web-server-note-13/1.png" alt="三层架构实践"></p><p>Web层 AdminServlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AdminServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">String name = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">String pwd = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">System.out.println(<span class="string">"name:"</span>+name+<span class="string">" pwd:"</span>+pwd);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建一个Service层 AdminService类<br>在AdminServlet中调用登录业务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用 登录业务</span></span><br><span class="line">AdminService adminService = <span class="keyword">new</span> AdminService();</span><br><span class="line">adminService.login(name,pwd);</span><br></pre></td></tr></table></figure><p>自动创建login方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminService</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(String name, String pwd)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 调用Dao层到数据库查询</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建一个DAO层 AdminService类<br>在AdminService中调用Dao层到数据库查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用Dao层到数据库查询</span></span><br><span class="line">AdminDao adminDao = <span class="keyword">new</span> AdminDao();</span><br><span class="line">adminDao.checkAdmin(name,pwd);</span><br></pre></td></tr></table></figure><p>自动创建checkAdmin方法<br>导入数据库相关Jar包，创建util包，写JdbcUtil，创建db.properties</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Admin <span class="title">checkAdmin</span><span class="params">(String name, String pwd)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 到数据库中查询 返回查询结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.连接数据库</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line">String sql = <span class="string">"select * from admin where username= ?and password = ?"</span>;</span><br><span class="line"><span class="comment">// 2.获取数据</span></span><br><span class="line">Admin admin = <span class="keyword">null</span>;</span><br><span class="line">admin = qr.query(sql, <span class="keyword">new</span> BeanHandler&lt;Admin&gt;(Admin.class), name, pwd);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> admin;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">抛出异常</span><br><span class="line"></span><br><span class="line">修改AdminService，继续抛出SQLException</span><br><span class="line">```java</span><br><span class="line"><span class="keyword">package</span> com.myxq.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Admin <span class="title">login</span><span class="params">(String name, String pwd)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 调用Dao层到数据库查询</span></span><br><span class="line">AdminDao adminDao = <span class="keyword">new</span> AdminDao();</span><br><span class="line">Admin admin = adminDao.checkAdmin(name,pwd);</span><br><span class="line"><span class="keyword">if</span> (admin != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> admin;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"用户名或密码错误"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改AdminServlet，最终调用者，必须处理异常<br>如果项目修改了重启服务器还是报错，可以尝试Project-Clean 清除缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AdminServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">String name = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">String pwd = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">System.out.println(<span class="string">"name:"</span>+name+<span class="string">" pwd:"</span>+pwd);</span><br><span class="line"><span class="comment">// 调用 登录业务</span></span><br><span class="line">AdminService adminService = <span class="keyword">new</span> AdminService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">adminService.login(name,pwd);</span><br><span class="line">System.out.println(<span class="string">"登录成功"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(<span class="string">"登录失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务器跳转时，路径相对的是服务器WebContent<br>浏览器请求跳转时，路径相对的当前的JSP<br>这两个是冲突的，所以JSP凡是action src href都要写绝对路径</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/admin/css/style.css"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>对网页进行测试</p><p>登录成功重定向后台首页</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">String name = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">String pwd = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">System.out.println(<span class="string">"name:"</span>+name+<span class="string">" pwd:"</span>+pwd);</span><br><span class="line"><span class="comment">// 调用 登录业务</span></span><br><span class="line">AdminService adminService = <span class="keyword">new</span> AdminService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Admin admin = adminService.login(name,pwd);</span><br><span class="line">System.out.println(<span class="string">"登录成功"</span>);</span><br><span class="line"><span class="comment">// 把用户保存到Session</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">session.setAttribute(<span class="string">"admin"</span>, admin);</span><br><span class="line"><span class="comment">// 跳转到后台首页</span></span><br><span class="line"><span class="comment">// 使用重定向，地址栏需要变化</span></span><br><span class="line">response.sendRedirect(request.getContextPath()+<span class="string">"/admin/admin_index.jsp"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="keyword">if</span> (e.getMessage().equals(<span class="string">"用户名或密码错误"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"登录失败"</span>);</span><br><span class="line"><span class="comment">// 跳转回登录页面，回显错误信息</span></span><br><span class="line">request.setAttribute(<span class="string">"err"</span>, e.getMessage());</span><br><span class="line"><span class="comment">// 转发</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"admin/admin_login.jsp"</span>).forward(request,response);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为是重定向，所以需要修改admin_index的src为绝对路径<br>重定向：浏览器的跳转，相对JSP路径</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">"70,*"</span> <span class="attr">frameborder</span>=<span class="string">0</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">framespacing</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/admin/top.jsp"</span> <span class="attr">name</span>=<span class="string">"topFrame"</span> <span class="attr">scrolling</span>=<span class="string">"NO"</span> <span class="attr">noresize</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"250,*"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">border</span>=<span class="string">"0"</span>  <span class="attr">framespacing</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/admin/left.jsp"</span> <span class="attr">name</span>=<span class="string">"leftFrame"</span>  <span class="attr">scrolling</span>=<span class="string">"NO"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath &#125;/admin/main.jsp"</span> <span class="attr">name</span>=<span class="string">"mainFrame"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改后天显示的用户名</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"admin_top"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top_left"</span>&gt;</span></span><br><span class="line">        码蚁商城</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"h_top_right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/user_icon.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 从Session域中取数据 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>$&#123;admin.username &#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="商品管理业务"><a href="#商品管理业务" class="headerlink" title="商品管理业务"></a>商品管理业务</h2><p><img src="/2020/02/16/web-server-note-13/2.png" alt="商品管理业务"></p><h4 id="商品显示"><a href="#商品显示" class="headerlink" title="商品显示"></a>商品显示</h4><p>DAO层 GoodsDao类<br>暂时不用面向接口，面向接口编程，需求变更，用其他数据库，就只需要变更实现类<br>新建domain</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.domain;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Setter</span><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Goods</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Double price;</span><br><span class="line"><span class="keyword">private</span> String image;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Goods [id="</span> + id + <span class="string">", name="</span> + name + <span class="string">", price="</span> + price + <span class="string">", image="</span> + image + <span class="string">", getClass()="</span></span><br><span class="line">+ getClass() + <span class="string">", hashCode()="</span> + hashCode() + <span class="string">", toString()="</span> + <span class="keyword">super</span>.toString() + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jar包，db.properties,Util包JdbcUtil<br>单元测试initialization Error，无代码无关，单元测试初始化错误，Clean工程就好了<br>写一个方法，就马上测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDao</span> </span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增删改查</span></span><br><span class="line"><span class="comment">// 1.从数据库中获取所有商品</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Goods&gt; <span class="title">getAllGoods</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">String sql = <span class="string">"select * from goods"</span>;</span><br><span class="line">List&lt;Goods&gt; allGoods = qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Goods&gt;(Goods.class));</span><br><span class="line"><span class="keyword">return</span> allGoods;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.添加商品到数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addGoods</span><span class="params">(Goods goods)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">String sql = <span class="string">"insert into goods (name,price,image)value(?,?,?)"</span>;</span><br><span class="line">qr.update(sql, goods.getName(), goods.getPrice(), goods.getImage());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.根据id删除商品</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delGoods</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">String sql = <span class="string">"delete from goods where id = ?"</span>;</span><br><span class="line">qr.update(sql, id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 4.修改指定商品</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateGoods</span><span class="params">(Goods goods)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">String sql = <span class="string">"update goods set name=?,price=?,image=? where id = ?"</span>;</span><br><span class="line">qr.update(sql,goods.getName(),goods.getPrice(),goods.getImage(),goods.getId());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDaoTest</span> </span>&#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetAllGoods</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">GoodsDao goodsDao = <span class="keyword">new</span> GoodsDao();</span><br><span class="line">List&lt;Goods&gt; allGoods = goodsDao.getAllGoods();</span><br><span class="line">System.out.println(allGoods);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAddGoods</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">GoodsDao goodsDao = <span class="keyword">new</span> GoodsDao();</span><br><span class="line">Goods goods = <span class="keyword">new</span> Goods();</span><br><span class="line">goods.setName(<span class="string">"测试"</span>);</span><br><span class="line">goods.setPrice(<span class="number">200.0</span>);</span><br><span class="line">goods.setImage(<span class="string">"goods_10.png"</span>);</span><br><span class="line">goodsDao.addGoods(goods);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelGoods</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">GoodsDao goodsDao = <span class="keyword">new</span> GoodsDao();</span><br><span class="line">goodsDao.delGoods(<span class="number">17</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateGoods</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">Goods goods = <span class="keyword">new</span> Goods();</span><br><span class="line">goods.setId(<span class="number">17</span>);</span><br><span class="line">goods.setName(<span class="string">"update"</span>);</span><br><span class="line">goods.setPrice(<span class="number">17.0</span>);</span><br><span class="line">goods.setImage(<span class="string">"goods_11.png"</span>);</span><br><span class="line"></span><br><span class="line">GoodsDao goodsDao = <span class="keyword">new</span> GoodsDao();</span><br><span class="line">goodsDao.updateGoods(goods);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Web层 GoodsListServlet类</p><p>创建GoodsListServlet类，写一句输出语句<br>修改admin_index.jsp的mainFrame</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;frame src=<span class="string">"$&#123;pageContext.request.contextPath &#125;/GoodsListServlet"</span> name=<span class="string">"mainFrame"</span> &gt;</span><br></pre></td></tr></table></figure><p>测试是否跳转到Servlet</p><p>创建Service层 GoodsService类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsService</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在GoodsListServlet中调用服务层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"GoodsListServlet"</span>);</span><br><span class="line"><span class="comment">// 调用服务层</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line">goodsService.getAllGoods();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自动生成getAllGoods方法，抛出异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsService</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Goods&gt; <span class="title">getAllGoods</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">GoodsDao goodsDao = <span class="keyword">new</span> GoodsDao();</span><br><span class="line">List&lt;Goods&gt; allGoods = goodsDao.getAllGoods();</span><br><span class="line"><span class="keyword">return</span> allGoods;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续写Servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"GoodsListServlet"</span>);</span><br><span class="line"><span class="comment">// 调用服务层</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">List&lt;Goods&gt; allGoods = goodsService.getAllGoods();</span><br><span class="line"><span class="comment">// System.out.println(allGoods);</span></span><br><span class="line"><span class="comment">// 把数据写到request域</span></span><br><span class="line">request.setAttribute(<span class="string">"allGoods"</span>, allGoods);</span><br><span class="line"><span class="comment">// 转发</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"admin/main.jsp"</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改main.jsp的css路径</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">String ctx = request.getContextPath();</span><br><span class="line">pageContext.setAttribute(<span class="string">"ctx"</span>, ctx);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;ctx&#125;/admin/css/style.css"</span> type=<span class="string">"text/css"</span> /&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;ctx&#125;/admin/css/amazeui.min.css"</span> /&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;ctx&#125;/admin/css/pageStyle.css"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><p>测试网页</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:forEach items=<span class="string">"$&#123;allGoods &#125;"</span> <span class="keyword">var</span>=<span class="string">"goods"</span> varStatus=<span class="string">"status"</span>&gt;</span><br><span class="line">&lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"list_goods_ul"</span>&gt;</span><br><span class="line">&lt;!-- status是一个对象<span class="keyword">for</span>循环状态 index就是取当前<span class="keyword">for</span>循环角标 --&gt;</span><br><span class="line">&lt;li&gt;$&#123;status.index+1 &#125;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;img src="$&#123;ctx &#125;/admin/images/pimages/$&#123;goods.image&#125;"&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;$&#123;goods.name &#125;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;$&#123;goods.price &#125;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"#"</span>&gt;&lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">"img_icon"</span></span><br><span class="line">src="$&#123;ctx &#125;/admin/images/edit_icon.png" alt=""&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"#"</span>&gt;&lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">"img_icon"</span></span><br><span class="line">src="$&#123;ctx &#125;/admin/images/delete_icon.png" alt=""&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script src="$&#123;ctx &#125;/admin/js/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type="text/javascript" src="$&#123;ctx &#125;/admin/js/paging.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2020/02/16/web-server-note-13/3.png" alt></p><h2 id="删除商品"><a href="#删除商品" class="headerlink" title="删除商品"></a>删除商品</h2><p>步骤同上</p><p>创建GoodsDelServlet类，测试连通<br>修改jsp的删除按钮的href，修改后可以用Chrome浏览器鼠标悬停，查看连接地址是否正确<br>在Servlet中接受参数，调用服务，服务中调用DAO，删除数据<br>Servlet中转发</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:forEach items=<span class="string">"$&#123;allGoods &#125;"</span> <span class="keyword">var</span>=<span class="string">"goods"</span> varStatus=<span class="string">"status"</span>&gt;</span><br><span class="line">&lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"list_goods_ul"</span>&gt;</span><br><span class="line">&lt;!-- status是一个对象<span class="keyword">for</span>循环状态 index就是取当前<span class="keyword">for</span>循环角标 --&gt;</span><br><span class="line">&lt;li&gt;$&#123;status.index+1 &#125;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;img src="$&#123;ctx &#125;/admin/images/pimages/$&#123;goods.image&#125;"&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;$&#123;goods.name &#125;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;$&#123;goods.price &#125;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">""</span>&gt;&lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">"img_icon"</span></span><br><span class="line">src="$&#123;ctx &#125;/admin/images/edit_icon.png" alt=""&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"$&#123;ctx &#125;/GoodsDelServlet?id=$&#123;goods.id&#125;"</span>&gt;&lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">"img_icon"</span></span><br><span class="line">src="$&#123;ctx &#125;/admin/images/delete_icon.png" alt=""&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><p>GoodsDelServlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsDelServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDelServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// System.out.println("GoodsDelServlet");</span></span><br><span class="line"><span class="comment">// 1. 接收参数</span></span><br><span class="line">String id = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line"><span class="comment">// System.out.println(id);</span></span><br><span class="line"><span class="comment">// 2. 调用服务层</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">goodsService.deleteGoods(id);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">request.getRequestDispatcher(<span class="string">"GoodsListServlet"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GoodsService类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">GoodsDao goodsDao = <span class="keyword">new</span> GoodsDao();</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Goods&gt; <span class="title">getAllGoods</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">List&lt;Goods&gt; allGoods = goodsDao.getAllGoods();</span><br><span class="line"><span class="keyword">return</span> allGoods;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteGoods</span><span class="params">(String id)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">goodsDao.delGoods(Integer.parseInt(id));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加商品"><a href="#添加商品" class="headerlink" title="添加商品"></a>添加商品</h2><p>修改goods表，增加描述、是否热门、cid<br><img src="/2020/02/16/web-server-note-13/4.png" alt="数据库"><br>增加分类表catogory<br><img src="/2020/02/16/web-server-note-13/5.png" alt="数据库"><br>添加数据<br>为goods表的cid做外键约束<br><strong>修改了表JavaBean也要修改</strong>，数据库需要对应<br><strong>对应的插入数据库操作也要更新</strong></p><p><img src="/2020/02/16/web-server-note-13/5.png" alt="添加商品"></p><p>创建GoodsAddUIServlet类<br>创建CategoryService类<br>GoodsAddUIServlet调用CategoryService中的findCategory方法<br>创建CategoryDao类 </p><p>GoodsAddUIServlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsAddUIServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsAddUIServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 1.取出所有分类</span></span><br><span class="line">List&lt;Category&gt; allCategory = <span class="keyword">null</span>;</span><br><span class="line">CategoryService categoryService = <span class="keyword">new</span> CategoryService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">allCategory = categoryService.findCategory();</span><br><span class="line">System.out.println(allCategory);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2.把分类存到域中</span></span><br><span class="line">request.setAttribute(<span class="string">"allCategory"</span>, allCategory);</span><br><span class="line"><span class="comment">// 3.转发edit.jsp</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"admin/add.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CategoryService类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Category&gt; <span class="title">findCategory</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">CategoryDao categoryDao = <span class="keyword">new</span> CategoryDao();</span><br><span class="line">List&lt;Category&gt; allCategory = categoryDao.getAllCategory();</span><br><span class="line"><span class="keyword">return</span> allCategory;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CategoryDao类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Category&gt; <span class="title">getAllCategory</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line">String sql = <span class="string">"select * from category"</span>;</span><br><span class="line">List&lt;Category&gt; allCategory  = qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Category&gt;(Category.class));</span><br><span class="line"><span class="keyword">return</span> allCategory;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改add.jsp<br>添加foreach，转发所以需要修改一些路径为绝对路径</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String ctx = request.getContextPath();</span><br><span class="line">pageContext.setAttribute(<span class="string">"ctx"</span>, ctx);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;ctx &#125;/admin/css/style.css"</span> type=<span class="string">"text/css"</span> /&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;ctx &#125;/admin/css/amazeui.min.css"</span> /&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item1"</span>&gt;</span><br><span class="line">                &lt;span&gt;所属分类：&lt;/span&gt;</span><br><span class="line">                 &lt;select id=<span class="string">"category_select"</span>&gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                 </span><br><span class="line">                 &lt;c:forEach items=<span class="string">"$&#123;allCategory &#125;"</span> <span class="keyword">var</span>=<span class="string">"category"</span>&gt;</span><br><span class="line">                 &lt;option value="$&#123;category.cid &#125;"&gt;$&#123;category.cname &#125;&lt;/option&gt;</span><br><span class="line">                 &lt;/c:forEach&gt;</span><br><span class="line">                    </span><br><span class="line">                     </span><br><span class="line">                 &lt;/select&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">&lt;script src="$&#123;ctx &#125;/admin/js/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">"#add"</span>).click(function () &#123;</span><br><span class="line">        $(window).attr(<span class="string">'location'</span>,<span class="string">'main.jsp'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">"#reset"</span>).click(function () &#123;</span><br><span class="line">       $(window).attr(<span class="string">'location'</span>,<span class="string">'add.jsp'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>修改main.jsp链接为GoodsAddUIServlet</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script src="$&#123;ctx &#125;/admin/js/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type="text/javascript" src="$&#123;ctx &#125;/admin/js/paging.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">//分页</span></span><br><span class="line">$(<span class="string">"#page"</span>).paging(&#123;</span><br><span class="line">pageNo : <span class="number">5</span>,</span><br><span class="line">totalPage : <span class="number">10</span>,</span><br><span class="line">totalSize : <span class="number">300</span>,</span><br><span class="line">callback : function(num) &#123;</span><br><span class="line">alert(num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#add"</span>).click(function() &#123;</span><br><span class="line">$(window).attr(<span class="string">'location'</span>, <span class="string">'$&#123;ctx&#125;/GoodsAddUIServlet'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>添加商品接收参数<br>创建GoodsAddServlet类<br>修改add.jsp的form表达的各个name属性和表单地址等<br>测试在Servlet获取所有参数的Map，使用BeanUtils封装，测试封装结果<br>调用服务层方法<br>服务处调用DAO<br><strong>字段介绍用desc，desc是数据库关键字，所以开发一般是gdesc</strong><br>修改类名为gdesc修改对应映射</p><p>GoodsAddServlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsAddServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsAddServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// System.out.println("GoodsAddServlet");</span></span><br><span class="line"><span class="comment">// 1.获取所有参数</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">Map&lt;String, String[]&gt; map = request.getParameterMap();</span><br><span class="line"><span class="comment">// System.out.println(map);</span></span><br><span class="line">Goods goods = <span class="keyword">new</span> Goods();</span><br><span class="line">BeanUtils beanUtils = <span class="keyword">new</span> BeanUtils();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">BeanUtils.populate(goods, map);</span><br><span class="line">goods.setImage(<span class="string">"goods_11.png"</span>);</span><br><span class="line">System.out.println(goods);</span><br><span class="line"><span class="comment">// 调用服务层</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line">goodsService.addGoods(goods);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 跳转列表 取最新数据</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"GoodsListServlet"</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GoodsService类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsService</span> </span>&#123;</span><br><span class="line"><span class="comment">// 保护DAO</span></span><br><span class="line"><span class="keyword">private</span> GoodsDao goodsDao = <span class="keyword">new</span> GoodsDao();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Goods&gt; <span class="title">getAllGoods</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">List&lt;Goods&gt; allGoods = goodsDao.getAllGoods();</span><br><span class="line"><span class="keyword">return</span> allGoods;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteGoods</span><span class="params">(String id)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">goodsDao.delGoods(Integer.parseInt(id));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addGoods</span><span class="params">(Goods goods)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"><span class="comment">// 调用DAO</span></span><br><span class="line">goodsDao.addGoods(goods);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GoodsDao类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDao</span> </span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增删改查</span></span><br><span class="line"><span class="comment">// 1.从数据库中获取所有商品</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Goods&gt; <span class="title">getAllGoods</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">String sql = <span class="string">"select * from goods"</span>;</span><br><span class="line">List&lt;Goods&gt; allGoods = qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Goods&gt;(Goods.class));</span><br><span class="line"><span class="keyword">return</span> allGoods;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.添加商品到数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addGoods</span><span class="params">(Goods goods)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">String sql = <span class="string">"insert into goods (name,price,image,gdesc,is_hot,cid) value (?,?,?,?,?,?)"</span>;</span><br><span class="line">qr.update(sql, goods.getName(), goods.getPrice(), goods.getImage(),goods.getGdesc(),goods.getIs_hot(),goods.getCid());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.根据id删除商品</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delGoods</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">String sql = <span class="string">"delete from goods where id = ?"</span>;</span><br><span class="line">qr.update(sql, id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 4.修改指定商品</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateGoods</span><span class="params">(Goods goods)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">String sql = <span class="string">"update goods set name=?,price=?,image=? where id = ?"</span>;</span><br><span class="line">qr.update(sql,goods.getName(),goods.getPrice(),goods.getImage(),goods.getId());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>add.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"edit_content"</span>&gt;</span><br><span class="line">&lt;form action=<span class="string">"$&#123;ctx &#125;/GoodsAddServlet"</span> method=<span class="string">"post"</span> id=<span class="string">"add_form"</span></span><br><span class="line">style=<span class="string">"background: none; width: 700px"</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item1"</span>&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;span&gt;商品名称：&lt;/span&gt; &lt;input type="text" class="am-form-field"</span><br><span class="line">name=<span class="string">"name"</span>&gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;span&gt;商品价格：&lt;/span&gt; &lt;input type="text" class="am-form-field" name="price"&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item1"</span>&gt;</span><br><span class="line">&lt;span&gt;所属分类：&lt;/span&gt; &lt;select id="category_select" name="cid"&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:forEach items=<span class="string">"$&#123;allCategory &#125;"</span> <span class="keyword">var</span>=<span class="string">"category"</span>&gt;</span><br><span class="line">&lt;option value="$&#123;category.cid &#125;"&gt;$&#123;category.cname &#125;&lt;/option&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;span&gt;是否热门&lt;/span&gt;</span><br><span class="line">&lt;select id=<span class="string">"category_select"</span> name=<span class="string">"is_hot"</span>&gt;</span><br><span class="line">&lt;option value="0"&gt;否&lt;/option&gt;</span><br><span class="line">&lt;option value="1"&gt;是&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item1"</span>&gt;</span><br><span class="line">&lt;span&gt;商品图片：&lt;/span&gt; &lt;input type="file" name="image" id="upload" /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item1 item_desc"</span> &gt;</span><br><span class="line">&lt;span&gt;商品描述：&lt;/span&gt;</span><br><span class="line">&lt;textarea id="desc" name="gdesc" rows="4" cols="50"&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;button class="am-btn am-btn-default" type="button" id="add"&gt;添加&lt;/button&gt;</span><br><span class="line">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">&lt;button class="am-btn am-btn-default" type="button" id="reset"&gt;重置&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src="$&#123;ctx &#125;/admin/js/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(<span class="string">"#add"</span>).click(function() &#123;</span><br><span class="line">$(<span class="string">"#add_form"</span>).submit();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#reset"</span>).click(function() &#123;</span><br><span class="line">$(window).attr(<span class="string">'location'</span>, <span class="string">'add.jsp'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>解决写入数据库乱码问题，编辑db.properties文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/mystore?useUnicode=true&amp;characterEncoding=utf-8</span></span><br></pre></td></tr></table></figure><p>反转集合（使得最后添加的显示到最开头）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsListServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsListServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"GoodsListServlet"</span>);</span><br><span class="line"><span class="comment">// 调用服务层</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">List&lt;Goods&gt; allGoods = goodsService.getAllGoods();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反转集合</span></span><br><span class="line">Collections.reverse(allGoods);</span><br><span class="line"></span><br><span class="line"><span class="comment">// System.out.println(allGoods);</span></span><br><span class="line"><span class="comment">// 把数据写到request域</span></span><br><span class="line">request.setAttribute(<span class="string">"allGoods"</span>, allGoods);</span><br><span class="line"><span class="comment">// 转发</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"admin/main.jsp"</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编辑商品"><a href="#编辑商品" class="headerlink" title="编辑商品"></a>编辑商品</h2><p><img src="/2020/02/16/web-server-note-13/7.png" alt></p><p>创建GoodsEditUIServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsEditUIServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsEditUIServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"GoodsEditUIServlet"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改main.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;&lt;a href=<span class="string">"$&#123;ctx &#125;/GoodsEditUIServlet?id=$&#123;goods.id&#125;"</span>&gt;&lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">"img_icon"</span></span><br><span class="line">src="$&#123;ctx &#125;/admin/images/edit_icon.png" alt=""&gt;&lt;/a&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure><p>用Chrome查看地址是否包含了id参数</p><p>GoodsEditUIServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsEditUIServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsEditUIServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 接收id</span></span><br><span class="line">String id = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line"><span class="comment">// System.out.println("GoodsEditUIServlet"+id);</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 1.获取当前商品</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line">Goods goods = goodsService.getGoodsWithId(id);</span><br><span class="line">System.out.println(goods);</span><br><span class="line"><span class="comment">// 把商品写入request域中</span></span><br><span class="line">request.setAttribute(<span class="string">"goods"</span>, goods);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.获取所有分类</span></span><br><span class="line">CategoryService categoryService = <span class="keyword">new</span> CategoryService();</span><br><span class="line">List&lt;Category&gt; allCategory = categoryService.findCategory();</span><br><span class="line">request.setAttribute(<span class="string">"allCategory"</span>, allCategory);</span><br><span class="line"><span class="comment">// 3.转发到JSP页面</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"/admin/edit.jsp"</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改edit.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item1"</span>&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">        &lt;span&gt;所属分类：&lt;/span&gt;</span><br><span class="line">                 &lt;select id=<span class="string">"categorySel"</span> name=<span class="string">"cid"</span>&gt;</span><br><span class="line">                 &lt;c:forEach items=<span class="string">"$&#123;allCategory &#125;"</span> <span class="keyword">var</span>=<span class="string">"category"</span>&gt;</span><br><span class="line">                  &lt;option value="$&#123;category.cid &#125;"&gt;$&#123;category.cname &#125;&lt;/option&gt;</span><br><span class="line">                 &lt;/c:forEach&gt;</span><br><span class="line">                 &lt;/select&gt;</span><br><span class="line">                 &amp;nbsp;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;div&gt;</span><br><span class="line">        &lt;span&gt;是否热门：&lt;/span&gt;</span><br><span class="line">                 &lt;select id=<span class="string">"isHotSel"</span> name=<span class="string">"is_hot"</span>&gt;</span><br><span class="line">                    &lt;!-- 让value的值等于商品is_hot的option成为选中状态 --&gt;</span><br><span class="line">                    &lt;option value="0"&gt;否&lt;/option&gt;</span><br><span class="line">                    &lt;option value="1"&gt;是&lt;/option&gt;</span><br><span class="line">                 &lt;/select&gt;</span><br><span class="line">        &lt;/div&gt;        </span><br><span class="line">                 </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item1"</span>&gt;</span><br><span class="line">                &lt;span&gt;商品图片：&lt;/span&gt;</span><br><span class="line">                &lt;input type=<span class="string">"file"</span> name=<span class="string">"image"</span> /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item1 item_desc"</span>&gt;</span><br><span class="line">            &lt;span&gt;商品描述：&lt;/span&gt;</span><br><span class="line">         &lt;textarea  id="desc" name="gdesc" rows="4" cols="50"&gt;$&#123;goods.gdesc &#125;&lt;/textarea&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;button class="am-btn am-btn-default" type="button" id="edit"&gt;更新&lt;/button&gt;</span><br><span class="line">        &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">        &lt;button class="am-btn am-btn-default" type="button" id="reset"&gt;重置&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">   &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>创建GoodsEditServlet<br>修改edit.jsp 关联提交表单</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;ctx &#125;/GoodsEditServlet"</span> method=<span class="string">"post"</span> id=<span class="string">"edit_form"</span> style=<span class="string">"background: none; width: 700px;"</span>&gt;</span><br></pre></td></tr></table></figure><p>edit.jsp的form表单时提交获取id的技巧</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"text"</span>  name=<span class="string">"id"</span> value=<span class="string">"$&#123;goods.id &#125;"</span> style=<span class="string">"display:none"</span>&gt;</span><br></pre></td></tr></table></figure><p>GoodsEditServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myxq.web;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsEditServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsEditServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 设置字符集 post</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"><span class="comment">// System.out.println("GoodsEditServlet");</span></span><br><span class="line"><span class="comment">// 1.获取所有参数</span></span><br><span class="line">Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line"><span class="comment">// 2.封装成Goods对象</span></span><br><span class="line">Goods goods = <span class="keyword">new</span> Goods();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">BeanUtils.populate(goods, parameterMap);</span><br><span class="line">System.out.println(goods);</span><br><span class="line"><span class="comment">// 3.根据id更新数据</span></span><br><span class="line"><span class="comment">// 4.调用服务层 更新数据</span></span><br><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line">goods.setImage(<span class="string">"goods_10.png"</span>);</span><br><span class="line">goodsService.updateGoods(goods);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5.跳转mian.jsp</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"GoodsListServlet"</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GoodsService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateGoods</span><span class="params">(Goods goods)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">goodsDao.updateGoods(goods);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GoodsDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4.修改指定商品</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateGoods</span><span class="params">(Goods goods)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">String sql = <span class="string">"update goods set name=?,price=?,image=? ,gdesc=?,is_hot=?,cid=? where id = ?"</span>;</span><br><span class="line">qr.update(sql,goods.getName(),goods.getPrice(),goods.getImage(),goods.getGdesc(),goods.getIs_hot(),goods.getCid(),goods.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改更新商品页面（读取当前商品的信息）<br>edit.jsp</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       </span><br><span class="line"> $(<span class="string">"#edit"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//让表单提交 GoodsEditServlet</span></span><br><span class="line">        <span class="comment">//获取表单  让其提交</span></span><br><span class="line">        $(<span class="string">"#edit_form"</span>).submit();</span><br><span class="line">  &#125;);</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//让value的值等于商品is_hot的option成为选中状态</span></span><br><span class="line"> $(<span class="string">"#isHotSel option[value=$&#123;goods.is_hot&#125;]"</span>).prop(<span class="string">"selected"</span>,<span class="literal">true</span>);</span><br><span class="line"> $(<span class="string">"#categorySel option[value=$&#123;goods.cid&#125;]"</span>).prop(<span class="string">"selected"</span>,<span class="literal">true</span>);</span><br><span class="line"> </span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><p>外层套一层$(function() 的原因是：等所有标签加载完毕，再去做执行里面的JQuery</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/16/web-server-note-13/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-开发模式</title>
      <link>https://aaronlinv.github.io/2020/02/16/web-server-note-12/</link>
      <guid>https://aaronlinv.github.io/2020/02/16/web-server-note-12/</guid>
      <pubDate>Sun, 16 Feb 2020 10:27:38 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;JavaEE开发模式&quot;&gt;&lt;a href=&quot;#JavaEE开发模式&quot; class=&quot;headerlink&quot; title=&quot;JavaEE开发模式&quot;&gt;&lt;/a&gt;JavaEE开发模式&lt;/h2&gt;&lt;p&gt;模式在开发过程中总结出的“套路”，总结出的一套约定俗成的设计模式&lt;/p&gt;
&lt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="JavaEE开发模式"><a href="#JavaEE开发模式" class="headerlink" title="JavaEE开发模式"></a>JavaEE开发模式</h2><p>模式在开发过程中总结出的“套路”，总结出的一套约定俗成的设计模式</p><ul><li>model1模式<br>技术组成：JSP+JavaBean<br>弊端：<br>业务多时，导致JSP页面容易混乱</li><li>model2模式<br>技术组成：JSP+Servlet+JavaBean<br>优点：<br>开发中使用各个技术擅长的方面<br>Servlet擅长Java的业务代码<br>JSP擅长页面的展示<br>MVC：<br>Model:JavaBean 封装数据<br>View:JSP 页面展示<br>Controller:Servlet 获取数据，对数据进行封装，传递数据、指定页面显示<br><img src="/2020/02/16/web-server-note-12/1.png" alt="餐厅"><br><img src="/2020/02/16/web-server-note-12/1.png" alt="MVC"></li><li>三层架构<br>Web层 与客户端交互<br>Service层 复杂业务逻辑<br>DAO层 与数据库进行交互<br><img src="/2020/02/16/web-server-note-12/3.png" alt="三层餐厅"><br><img src="/2020/02/16/web-server-note-12/4.png" alt="三层"><br><img src="/2020/02/16/web-server-note-12/5.png" alt="三层架构逻辑"><h2 id="商品列表改写"><a href="#商品列表改写" class="headerlink" title="商品列表改写"></a>商品列表改写</h2>根据包来分层</li><li>com.it666.web GoodsServlet.java</li><li>com.it666.service GoodsService.java</li><li>com.it666.dao GoodsDao.java<br>原来GoodsServlet<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.servlet;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.连接数据库</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line">String sql = <span class="string">"select * from goods"</span>;</span><br><span class="line"><span class="comment">// 2.获取数据</span></span><br><span class="line">List&lt;Goods&gt; allGoods = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">allGoods = qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Goods&gt;(Goods.class));</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(allGoods);</span><br><span class="line"><span class="comment">// 3. 把数据存到equest域</span></span><br><span class="line">request.setAttribute(<span class="string">"allGoods"</span>, allGoods);</span><br><span class="line"><span class="comment">// 4.转发到商品列表，转发时把request对象传入</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"/goods_list.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>GoodsServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GoodsService goodsService = <span class="keyword">new</span> GoodsService();</span><br><span class="line">List&lt;Goods&gt; allGoods = goodsService.findAllGoods();</span><br></pre></td></tr></table></figure><p>GoodsService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Goods&gt; <span class="title">findAllGoods</span><span class="params">()</span> </span>&#123;</span><br><span class="line">GoodsDao goodsDao = <span class="keyword">new</span> GoodsDao();</span><br><span class="line"><span class="keyword">return</span> goodsDao.findAllGoods();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GoodsDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Goods&gt; <span class="title">findAllGoods</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 1.连接数据库</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line">String sql = <span class="string">"select * from goods"</span>;</span><br><span class="line"><span class="comment">// 2.获取数据</span></span><br><span class="line">List&lt;Goods&gt; allGoods = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">allGoods = qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Goods&gt;(Goods.class));</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> allGoods;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在GoodsServlet最后加上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3. 把数据存到equest域</span></span><br><span class="line">request.setAttribute(<span class="string">"allGoods"</span>, allGoods);</span><br><span class="line"><span class="comment">// 4.转发到商品列表，转发时把request对象传入</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"/goods_list.jsp"</span>).forward(request, response);</span><br></pre></td></tr></table></figure><p>对GoodServlet进行测试</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/16/web-server-note-12/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-EL/JSTL</title>
      <link>https://aaronlinv.github.io/2020/02/16/web-server-note-11/</link>
      <guid>https://aaronlinv.github.io/2020/02/16/web-server-note-11/</guid>
      <pubDate>Sun, 16 Feb 2020 06:29:34 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;EL表达式&quot;&gt;&lt;a href=&quot;#EL表达式&quot; class=&quot;headerlink&quot; title=&quot;EL表达式&quot;&gt;&lt;/a&gt;EL表达式&lt;/h2&gt;&lt;p&gt;EL (Express Lanuage)表达式可以嵌入在jsp页面内部&lt;br&gt;减少jsp脚本的编写&lt;br&gt;EL出现的
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h2><p>EL (Express Lanuage)表达式可以嵌入在jsp页面内部<br>减少jsp脚本的编写<br>EL出现的目的是要替代jsp页面中脚本的编写</p><h4 id="EL最主要的作用是获得四大域中的数据"><a href="#EL最主要的作用是获得四大域中的数据" class="headerlink" title="EL最主要的作用是获得四大域中的数据"></a>EL最主要的作用是获得四大域中的数据</h4><ul><li>pageContext<br>${pageScope.key};</li><li>request<br>${requestScope.key}</li><li>session<br>${sessionScope.key}</li><li>application<br>${applicationScope.key}</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">pageContext.setAttribute(<span class="string">"name"</span>, <span class="string">"pageContextValue"</span>);</span><br><span class="line">request.setAttribute(<span class="string">"name"</span>, <span class="string">"requestValue"</span>);</span><br><span class="line">session.setAttribute(<span class="string">"name"</span>, <span class="string">"sessionValue"</span>);</span><br><span class="line">application.setAttribute(<span class="string">"name"</span>, <span class="string">"applicationValue"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;pageScope.name &#125;</span><br><span class="line">&lt;br/&gt;</span><br><span class="line">$&#123;requestScope.name &#125;</span><br><span class="line">&lt;br/&gt;</span><br><span class="line">$&#123;sessionScope.name &#125;</span><br><span class="line">&lt;br/&gt;</span><br><span class="line">$&#123;applicationScope.name &#125;</span><br></pre></td></tr></table></figure><h4 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h4><p>${EL表达式}<br>EL从四个域中获得某个值${key}<br>依次从pageContext域，request域，session域，application域中获取属性<br>在某个域中获取后将不在向后寻找(从小到大)</p><h4 id="EL内置11对象（基本不用，只用pageContext）"><a href="#EL内置11对象（基本不用，只用pageContext）" class="headerlink" title="EL内置11对象（基本不用，只用pageContext）"></a>EL内置11对象（基本不用，只用pageContext）</h4><ul><li>pageScope<br>获取JSP中pageScope域中的数据</li><li>requestScope<br>获取JSP中requestScope域中的数据</li><li>sessionScope<br>获取JSP中sessionScope域中的数据</li><li>applicationScope<br>获取JSP中applicationScope域中的数据</li><li>param<br>request.getParameter()</li><li>paramValues<br>rquest.getParameterValues()</li><li>header<br>request.getHeader(name)</li><li>headerValues<br>request.getHeaderValues()</li><li>initParam<br>this.getServletContext().getInitParameter(name)</li><li>cookie<br>request.getCookies()—cookie.getName()—cookie.getValue()</li><li>pageContext<br>pageContext获得其他八大对象</li></ul><p><strong>获取当前项目的名称：${pageContext.request.contextPath}</strong></p><h5 id="EL执行表达式"><a href="#EL执行表达式" class="headerlink" title="EL执行表达式"></a>EL执行表达式</h5><p>内部可以进行运算，只要有结果</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$&#123;<span class="number">1</span>+<span class="number">1</span>&#125;</span><br><span class="line">$&#123;empty user&#125; </span><br><span class="line">$&#123;user==<span class="keyword">null</span>?<span class="keyword">true</span>:<span class="keyword">false</span>&#125;</span><br></pre></td></tr></table></figure><p>判读user是否为空 输出true</p><h2 id="JSTL"><a href="#JSTL" class="headerlink" title="JSTL"></a>JSTL</h2><p>(JSP Standard Tag Library) JSP标准标签库<br>可以嵌入在JSP页面中使用标签的形式完成业务逻辑等功能<br>JSTL出现的目的同EL一样也是要代替JSP页面中的脚本代码</p><h4 id="JSTL标准标签库有5个子库"><a href="#JSTL标准标签库有5个子库" class="headerlink" title="JSTL标准标签库有5个子库"></a>JSTL标准标签库有5个子库</h4><ul><li>Core :核心库(其他的库都过时了)<br><a href="http://java.sun.com/jsp/jstl/core" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/core</a><br>前缀：c</li><li>I18N：国际化库<br><a href="http://java.sun.com/jsp/jstl/fmt" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/fmt</a><br>前缀：fmt</li><li>SQL<br><a href="http://java.sun.com/jsp/jstl/sql" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/sql</a><br>前缀：sql</li><li>XML<br><a href="http://java.sun.com/jsp/jstl/xml" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/xml</a><br>前缀：x</li><li>Functions<br><a href="http://java.sun.com/jsp/jstl/functions" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/functions</a><br>前缀：fn</li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><ol><li>把JSTL标签库jar包引入工程当中 jstl-1.2.jar</li><li>引入标签库<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span>%&gt;</span><br></pre></td></tr></table></figure></li></ol><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>if标签</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:if test="$&#123;1==1 &#125;"&gt;满足条件时，中间的内容才会显示出来&lt;/c:if&gt;</span><br></pre></td></tr></table></figure><p>通过是结合EL表达式一起使用，EL从域中取数据，使用JSTL进行判断或者遍历<br>没有else所有只能</p><p>if标签使用场景：<br>用户登录成功时，进入首页中，显示用户名<br>步骤<br>1.登录成功时，把用户写到session域当中，修改LogginServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (u != <span class="keyword">null</span>) &#123;</span><br><span class="line">    response.getWriter().write(<span class="string">"登录成功"</span>);</span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    HttpSession session = request.getSession();</span><br><span class="line">    session.setAttribute(<span class="string">"user"</span>, u);</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    response.setHeader(<span class="string">"refresh"</span>, <span class="string">"2;url=/31-Mystore/index.jsp"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    response.getWriter().write(<span class="string">"登录失败"</span>);</span><br><span class="line">    response.setHeader(<span class="string">"refresh"</span>, <span class="string">"2;url=/31-Mystore/login.jsp"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.在Header.jsp中进行判断，从session域当中取数据，先引入标签库<br>3.通过EL结合JSTL进行判断</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header_top_center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"h_top_left"</span>&gt;</span>欢迎来到码蚁商城<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"h_top_right"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 判断有没有用户 session --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;empty user&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"login.jsp"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"regist.jsp"</span>&gt;</span>免费注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;!empty user &#125;"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 或者直接$&#123; user.username &#125; --&gt;</span></span><br><span class="line">            欢迎：$&#123;user.getUsername() &#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>我的订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>foreach标签</p><ul><li>普通循环:从域当中取数据，自动把数据存储pagescope<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:forEach begin=<span class="string">"0"</span> end=<span class="string">"5"</span> <span class="keyword">var</span>=<span class="string">"i"</span>&gt;</span><br><span class="line">$&#123;i &#125;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;!--等同于 $&#123;pageScope.i&#125; --&gt;</span><br></pre></td></tr></table></figure></li><li>第二种：增加for循环<br>遍历字符串集合<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">List&lt;String&gt; strList = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">strList.add(<span class="string">"aaa"</span>);</span><br><span class="line">strList.add(<span class="string">"bbb"</span>);</span><br><span class="line">session.setAttribute(<span class="string">"strList"</span>, strList);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;c:forEach items=<span class="string">"$&#123;strList&#125;"</span> <span class="keyword">var</span>=<span class="string">"str"</span>&gt; </span><br><span class="line">$&#123;str &#125;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure></li></ul><p>遍历对象集合</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line">User u1 = <span class="keyword">new</span> User();</span><br><span class="line">u1.setUsername(<span class="string">"zs"</span>);</span><br><span class="line">userList.add(u1);</span><br><span class="line"></span><br><span class="line">User u2 = <span class="keyword">new</span> User();</span><br><span class="line">u2.setUsername(<span class="string">"ls"</span>);</span><br><span class="line">userList.add(u2);</span><br><span class="line"></span><br><span class="line">session.setAttribute(<span class="string">"userList"</span>, userList);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;c:forEach items=<span class="string">"$&#123;userList&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span>&gt; </span><br><span class="line">$&#123;user.username &#125;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><p>遍历map</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">Map&lt;String ,String&gt; strMap = <span class="keyword">new</span> HashMap&lt;String,String&gt;();</span><br><span class="line">strMap.put(<span class="string">"name"</span>,<span class="string">"zs"</span>);</span><br><span class="line">strMap.put(<span class="string">"age"</span>, <span class="string">"30"</span>);</span><br><span class="line">session.setAttribute(<span class="string">"strMap"</span>, strMap);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;c:forEach items=<span class="string">"$&#123;strMap &#125;"</span> <span class="keyword">var</span> = <span class="string">"entry"</span>&gt;</span><br><span class="line">$&#123;entry.key&#125;:$&#123;entry.value&#125;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><p>商品列表展示<br>修改goods_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;empty allGoods &#125;"</span>&gt;</span><br><span class="line">    没有商品</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;c:forEach items=<span class="string">"$&#123;allGoods &#125;"</span> <span class="keyword">var</span>=<span class="string">"goods"</span>&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">    &lt;a href=<span class="string">"#"</span>&gt;</span><br><span class="line">        &lt;img src=<span class="string">"images/pimages/$&#123;goods.image &#125;"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">        &lt;p&gt;$&#123;goods.name &#125;&lt;/p&gt;</span><br><span class="line">        &lt;i id="yuan"&gt;￥&lt;/i&gt; &lt;span id="price"&gt;$&#123;goods.price &#125;&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/16/web-server-note-11/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-商城列表</title>
      <link>https://aaronlinv.github.io/2020/02/14/web-server-note-10/</link>
      <guid>https://aaronlinv.github.io/2020/02/14/web-server-note-10/</guid>
      <pubDate>Fri, 14 Feb 2020 08:00:41 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;复制工程，右键工程-Properties-Web Project Settings-修改项目名&lt;br&gt;修改.html为.jsp 右键修改文件
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>复制工程，右键工程-Properties-Web Project Settings-修改项目名<br>修改.html为.jsp 右键修改文件编码为UTF-8<br>在每个jsp头部加入</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br></pre></td></tr></table></figure><p>修改网页代码中写死的项目名<br>修改网页中写死的跳转html为jsp</p><h2 id="头部尾部分离"><a href="#头部尾部分离" class="headerlink" title="头部尾部分离"></a>头部尾部分离</h2><p>新建header.jsp和footer.jsp (仅保留开头的配置，删除html代码)<br>各自复制header和footer代码，(不需要body)去除不需要的css样式<br>删除index中的header和footer代码和不需要的css样式 (index只留index.css,header保留common,footer,header)<br>修改登录和注册页面尾部</p><h2 id="商品列表思路"><a href="#商品列表思路" class="headerlink" title="商品列表思路"></a>商品列表思路</h2><p><img src="/2020/02/14/web-server-note-10/1.png" alt="思路"><br>从数据库当中取出对应商品展示到页面当中</p><p>建表<br>建立ORM<br>把相关jar拷贝到工程当中<br>建立servlet<br>1.连接数据库<br>2.从数据库当中获取数据<br>3.把从数据库中取出的数据存放到request域当中<br>4.转发到商品列表页面，转发时把request对象传入</p><p>转发到jsp<br>1.从请求域当中把数据获取出来<br>2.从集合当中取出每一个商品，展示到页面当中<br>商品列表</p><h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><p>导入goods表到数据库，根据表新建domain，设置好字段和bean，提供toString</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.servlet;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 1.连接数据库</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line">String sql = <span class="string">"select * from goods"</span>;</span><br><span class="line"><span class="comment">// 2.获取数据</span></span><br><span class="line">List&lt;Goods&gt; allGoods = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">allGoods = qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Goods&gt;(Goods.class));</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(allGoods);</span><br><span class="line"><span class="comment">// 3. 把数据存到equest域</span></span><br><span class="line">request.setAttribute(<span class="string">"allGoods"</span>, allGoods);</span><br><span class="line"><span class="comment">// 4.转发到商品列表，转发时把request对象传入</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"/goods_list.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数据展示"><a href="#数据展示" class="headerlink" title="数据展示"></a>数据展示</h2><p>GoodsServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.servlet;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 1.连接数据库</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line">String sql = <span class="string">"select * from goods"</span>;</span><br><span class="line"><span class="comment">// 2.获取数据</span></span><br><span class="line">List&lt;Goods&gt; allGoods = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">allGoods = qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Goods&gt;(Goods.class));</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(allGoods);</span><br><span class="line"><span class="comment">// 3. 把数据存到equest域</span></span><br><span class="line">request.setAttribute(<span class="string">"allGoods"</span>, allGoods);</span><br><span class="line"><span class="comment">// 4.转发到商品列表，转发时把request对象传入</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"/goods_list.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改goodList.jsp<br>(前端改成单引号，防止和Java冲突)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 热卖商品 --&gt;</span><br><span class="line">&lt;div id=<span class="string">"hot_goods"</span>&gt;</span><br><span class="line">    &lt;h3&gt;热卖商品&lt;/h3&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"hot_goods_body"</span>&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;%</span><br><span class="line">                <span class="comment">//从域中取数据</span></span><br><span class="line">                List&lt;Goods&gt; allGoods = (List&lt;Goods&gt;) request.getAttribute(<span class="string">"allGoods"</span>);</span><br><span class="line">                System.out.print(allGoods);</span><br><span class="line">                <span class="keyword">if</span> (allGoods != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">// 取出每一个商品</span></span><br><span class="line">                    <span class="keyword">for</span> (Goods pro : allGoods) &#123;</span><br><span class="line">                        out.write(<span class="string">"&lt;li&gt;"</span>);</span><br><span class="line">                        out.write(<span class="string">"&lt;a href='#'&gt;"</span>);</span><br><span class="line">                        out.write(<span class="string">"&lt;img src='images/pimages/"</span>+pro.getImage()+<span class="string">"' alt=''&gt;"</span>);</span><br><span class="line">                        out.write(<span class="string">"&lt;p&gt;"</span>+pro.getName()+<span class="string">"&lt;/p&gt;"</span>);</span><br><span class="line">                        out.write(<span class="string">"&lt;i id='yuan'&gt;￥&lt;/i&gt; &lt;span"</span>);</span><br><span class="line">                        out.write(<span class="string">"id='price'&gt;"</span>+pro.getPrice()+<span class="string">"&lt;/span&gt;"</span>);</span><br><span class="line">                        out.write(<span class="string">"&lt;/a&gt;"</span>);</span><br><span class="line">                        out.write(<span class="string">"&lt;/li&gt;"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    out.write(<span class="string">"没有商品"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            %&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>修改头部商品页面的入口地址，注意要加项目名称</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/14/web-server-note-10/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-JSP</title>
      <link>https://aaronlinv.github.io/2020/02/13/web-server-note-9/</link>
      <guid>https://aaronlinv.github.io/2020/02/13/web-server-note-9/</guid>
      <pubDate>Thu, 13 Feb 2020 11:21:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h4 id=&quot;Java-Server-Pages-Java服务器页面&quot;&gt;&lt;a href=&quot;#Java-Server-Pages-Java服务器页面&quot; class=&quot;headerlink&quot; title=&quot;Java Server Pages  (Java服务器页面)&quot;&gt;&lt;/a&gt;Ja
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h4 id="Java-Server-Pages-Java服务器页面"><a href="#Java-Server-Pages-Java服务器页面" class="headerlink" title="Java Server Pages  (Java服务器页面)"></a>Java Server Pages  (Java服务器页面)</h4><p>在传统的网页HTML文件(<em>.htm,</em>.html)中插入Java程序段和JSP标记，后缀名为(*.jsp)<br>其根本是一个简化的Servlet设计</p><p>为什么要有JSP<br>直接使用html文件是没有办法输出Java当中的信息<br>使用Servlet来去输出一个网页非常的麻烦<br>于是就出现了JSP，又能写html，又能写Java代码</p><p>修改JSP编码<br><img src="/2020/02/13/web-server-note-9/1.png" alt="修改JSP编码"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"ISO-8859-1"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String name = <span class="string">"蚂蚁小强"</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1&gt;</span><br><span class="line">&lt;%=name %&gt;</span><br><span class="line">&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="JSP的工作原理"><a href="#JSP的工作原理" class="headerlink" title="JSP的工作原理"></a>JSP的工作原理</h4><p>本质就是一个servlet</p><p>JSP在第一次被访问时会被Web容器翻译成Servlet</p><ul><li>第一次访问index.jsp，自动翻译成index_jsp.java（本质就是把标签一行一行write出来）</li></ul><p><img src="/2020/02/13/web-server-note-9/2.png" alt="index_jsp.java"></p><ul><li>编译成index_jsp.class运行</li><li>可以在Tomcat的work目录中可以找到(test_jsp.class和test_jsp.java)</li><li>下次一次访问时， 会看一下里面的内容有没有发生变化，如果变化了， 重新翻译加载</li></ul><p><img src="/2020/02/13/web-server-note-9/3.png" alt="index_jsp.java"></p><p>全局web.xml中有一个配置，所有JSP的翻译由JspServlet来做</p><h2 id="JSP的组成部分"><a href="#JSP的组成部分" class="headerlink" title="JSP的组成部分"></a>JSP的组成部分</h2><ul><li>静态数据，如HTML</li><li>JSP脚本元素和变量</li><li>JSP指令，如include指令</li><li>JSP标签动作</li><li>用户自定义标签</li></ul><h2 id="JSP脚本元素和变量"><a href="#JSP脚本元素和变量" class="headerlink" title="JSP脚本元素和变量"></a>JSP脚本元素和变量</h2><p>&lt;%java代码%&gt;<br>内部的java代码翻译到Service方法的内部</p><p>&lt;%=java变量或表达式&gt;<br>会被翻译成Service方法内部out.print()</p><p>&lt;%!java代码%&gt;<br>会被翻译成Servlet的<strong>成员</strong></p><p>JSP注释<br>HTML注释：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注释内容--&gt;</span></span><br></pre></td></tr></table></figure><p>可见范围JSP源码、翻译后的Servlet、页面</p><p>Java注释<br>//单行注释  /<em>多行注释</em>/<br>可见范围JSP源码、翻译后的Servlet，页面中看不到</p><p>JSP注释<br>&lt;%–注释内容–%&gt;<br>仅JSP源码可见</p><h2 id="JSP指令"><a href="#JSP指令" class="headerlink" title="JSP指令"></a>JSP指令</h2><p>用于设置整个JSP页面的相关信息<br>以及用于JSP页面与其它容器之间的通信</p><h4 id="include指令"><a href="#include指令" class="headerlink" title="include指令"></a>include指令</h4><p>表示在JSP编译时插入一个包含文件或者代码的文件<br>include指令所包含的文件名不能是一个变量url，只能是静态的文件名<br>静态包含：将两个JSP页面接着到一起，然后再翻译成Servlet</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%@ include file=<span class="string">"/header.jsp"</span> %&gt;</span><br><span class="line">&lt;h1&gt;主体&lt;/h1&gt;</span><br><span class="line">&lt;%@ include file=<span class="string">"/footer.jsp"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="page指令"><a href="#page指令" class="headerlink" title="page指令"></a>page指令</h4><p>用于设定整个JSP页面的属性和相关功能，多个属性之间使用空格隔开<br>page指令共有11个属性</p><ul><li>contentType<br>指定JSP页面的MIME和编码格式</li><li>pageEncoding<br>指定JSP文件的编码格式</li><li>import<br>在JSP中引入Java的包和类，多个包之间以逗号隔开<br>（Ctrl+Shift+O 导包无效，写java.util. 再Alt+/导包）</li><li>session<br>指定当前页面是否能获得当前用户的session对象，缺省是true<br>如果指定为false，那么在该页面中无法使用session，使用的话会提示500错误</li><li>errorPage<br>如果当前页面发生异常<br>网页会重定向到errorPage所指定的页面进行处理</li><li>isErrorPage<br>允许指定的JSP页面为错误处理页面</li><li>language属性<br>指定页面中使用的脚本语言种类<br>目前只支持Java</li><li>extends<br>用于指定该JSP生成的Servlet继承自哪个父类<br>必须指定包名加类名</li><li>buffer<br>用来设置输出流缓冲区<br>缓冲区的作用就是为了提高IO性能<br>也就是说减少write的次数</li><li>autoFlush<br>用来指定当输出流缓冲区满了的时候，是否自动刷新缓冲区</li><li>isThreadSafe<br>缺省值为true<br>指定该JSP文件是否支持多线程访问</li><li>info<br>用来设置该JSP文件的介绍信息</li><li>isELIgnored<br>用来标示是否支持EL表达式</li></ul><h4 id="taglib指令"><a href="#taglib指令" class="headerlink" title="taglib指令"></a>taglib指令</h4><p>声明JSP文件使用哪些标签库</p><p>有哪些标签库</p><ul><li>JSP标准标签库</li><li>第三方标签库</li><li>自定义标签库</li></ul><h2 id="标签动作"><a href="#标签动作" class="headerlink" title="标签动作"></a>标签动作</h2><p>页面包含</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:include page="被包含的页面"&gt;&lt;/jsp:include&gt;</span><br><span class="line">&lt;jsp:include page="/header.jsp"&gt;&lt;/jsp:include&gt;</span><br></pre></td></tr></table></figure><p>动态包含：各自翻译自己的页面，然后再引入<br>与include对比<br><img src="/2020/02/13/web-server-note-9/4.png" alt="与include对比"></p><p>请求转发（地址栏不会发生变化）<br>&lt;jsp:forward page=”要转发的资源”&gt;<br>&lt;jsp:forward page=”/test.jsp”&gt;</p><h2 id="隐式对象"><a href="#隐式对象" class="headerlink" title="隐式对象"></a>隐式对象</h2><p>JSP被翻译成servlet之后，service方法中有9个对象定义并初始化完毕<br><img src="/2020/02/13/web-server-note-9/5.png" alt="隐式对象"><br>还有一个是异常的对象</p><h4 id="可以直接使用这9个对象"><a href="#可以直接使用这9个对象" class="headerlink" title="可以直接使用这9个对象"></a>可以直接使用这9个对象</h4><ul><li>request<br>得到用户请求信息对象</li><li>response<br>服务器向客户端的响应对象</li><li>config<br>服务器配置，可以取得初始化参数</li><li>session<br>用来保存用户会话的信息</li><li>application<br>所有用户的共享信息，就是servletContext</li><li>page<br>指当前页面转换后的Servlet类的实例</li><li>out<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">aaa</span><br><span class="line">&lt;%=<span class="string">"bbb"</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">out.write(<span class="string">"ccc"</span>);</span><br><span class="line">response.getWriter().write(<span class="string">"ddd"</span>);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line">打印顺序：ddd aaa bbb ccc</span><br></pre></td></tr></table></figure>out的类型：JspWriter<br>out作用就是向客户端输出内容 out.write()<br>out缓冲区默认8kb<br>可以设置成0 代表关闭out缓冲区内容直接写到respons缓冲区<br>out写的内容写到out缓冲区当中<br>最后再把out缓冲区当中的内容合并到response缓冲区中（拼接到后面）<br><img src="/2020/02/13/web-server-note-9/6.png" alt="out"></li><li>pageContext<br>JSP页面的上下文对象<br>是一个域对象<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setAttribute(String name,Object obj)</span><br><span class="line">getAttribute(String name)</span><br><span class="line">removeAttrbute(String name)</span><br></pre></td></tr></table></figure>可以向指定的其他域中存取数据<br>自动到所有的域当中找数据<br>从小到大的范围搜索数据<br>依次从pageContext域，request域，session域，application域中获取属性<br>在某个域中获取后将不在向后寻找<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">setAttribute(String name,Object obj,<span class="keyword">int</span> scope)</span><br><span class="line">setAttribute(“name”,<span class="string">"lk"</span>,PageContext.REQUEST_SCOPE);</span><br><span class="line">getAttribute(String name,<span class="keyword">int</span> scope)</span><br><span class="line">getAttribute(<span class="string">"lk"</span>,PageContext.REQUEST_SCOPE)</span><br><span class="line">removeAttrbute(String name,<span class="keyword">int</span> scope)</span><br><span class="line">findAttribute(String name)</span><br></pre></td></tr></table></figure></li></ul><p>可以获得其他8大隐式对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pageContext.getRequest()</span><br><span class="line">pageContext.getSession()</span><br></pre></td></tr></table></figure><ul><li>exception<br>表示JSP页面所发生的异常，在错误页中才起作用<br>只有是错误页面的时候，才会有该对象</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/13/web-server-note-9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-Cookie与Session</title>
      <link>https://aaronlinv.github.io/2020/02/13/web-server-note-8/</link>
      <guid>https://aaronlinv.github.io/2020/02/13/web-server-note-8/</guid>
      <pubDate>Thu, 13 Feb 2020 08:15:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;会话技术&quot;&gt;&lt;a href=&quot;#会话技术&quot; class=&quot;headerlink&quot; title=&quot;会话技术&quot;&gt;&lt;/a&gt;会话技术&lt;/h2&gt;&lt;p&gt;用户开一个浏览器，点击多个超链接，访问服务器多个web资源，然后关闭浏览器，整个过程称之为一个会话&lt;/p&gt;
&lt;p&gt;会话技术解
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="会话技术"><a href="#会话技术" class="headerlink" title="会话技术"></a>会话技术</h2><p>用户开一个浏览器，点击多个超链接，访问服务器多个web资源，然后关闭浏览器，整个过程称之为一个会话</p><p>会话技术解决什么问题</p><p>保持各个客户端自己的数据<br>每个用户在使用浏览器与服务器进行会话的过程中，不可避免各自会产生一些数据，程序要想办法为每个用户保存这些数据</p><p>使用Request域存在的问题<br>Request域的生命周期为请求开始时创建，请求结束时销毁没有办法办到同时多个商品</p><p>使用ServletContext存在的问题<br>ServletContext生命周期比较长，服务器启动时创建，服务器关闭时销毁存放在这里，容易导致不同用户的各个浏览器之间的数据混淆浪费服务器存储空间</p><p>使用Session会话<br>Session域：当一个浏览器访问服务器时创建，关闭服务器或过期时，销毁Session域对象</p><p>使用Cookie会话</p><ol><li>请求时在Servlet当中主动把商品保存到Cookie当中，Cookie是浏览器当中的一个缓存区域</li><li>在结算请求时，把浏览器缓存中存放的数据发送给服务器</li></ol><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><h4 id="服务器怎样把Cookie写给客户端"><a href="#服务器怎样把Cookie写给客户端" class="headerlink" title="服务器怎样把Cookie写给客户端"></a>服务器怎样把Cookie写给客户端</h4><p>创建Cookie</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(String cookieName,String cookieValue);</span><br></pre></td></tr></table></figure><p>cookie会以响应头的形式发送给客户端，Cookie只能存储非中文的字符串</p><p>向客户端发送cookie</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.addCookie(cookie名称);</span><br></pre></td></tr></table></figure><p>访问<br>第一次访问时， 请求头当中没有cookie，响应当中会看到set-cookie<br>再一次访问时， 请求头当中就能够看到cookie信息<br>访问服务器的任何资源，一般情况下都会把cookie带去过</p><h4 id="Cookie默认存储时间"><a href="#Cookie默认存储时间" class="headerlink" title="Cookie默认存储时间"></a>Cookie默认存储时间</h4><p>默认cookie：会话级别<br>打开浏览器、关闭浏览器为一次会话<br>如果不设置持久化时间，cookie会存储在浏览器的内存中，浏览器关闭    cookie信息销毁</p><p>设置Cookie在客户端的存储时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cookie.setMaxAge(<span class="keyword">int</span> seconds);</span><br></pre></td></tr></table></figure><p>设置的时间为秒<br>如果设置持久化时间，cookie信息会被持久化到浏览器的磁盘文件里<br>过期会自动删除</p><h4 id="设置Cookie的携带路径"><a href="#设置Cookie的携带路径" class="headerlink" title="设置Cookie的携带路径"></a>设置Cookie的携带路径</h4><p>访问某一个资源时，要不要带cookie信息<br>    如何每一外资源都携带，会影响传输速度<br>如果不设置携带路径<br>默认情况下会在访问创建cookie的web资源相同的路径（相同目录下）都携带cookie信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当前Servlet路径：http://localhost/29-Cookie-Session/CookieServlet</span><br><span class="line">web资源相同的路径：http://localhost/29-Cookie-Session/CookieServlet2</span><br></pre></td></tr></table></figure><p>在myxq/CookieServlet下创建的cookie，在myxq/下的index.jsp访问时会携带cookie，不是在myxq下，不会携带cookie</p><p>设置携带路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cookie.setPath(String path);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只有访问cookieServlet才携带cookie信息</span></span><br><span class="line">cookie.setPath(“/<span class="number">29</span>-Cookie-Session/cookieServlet”);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问指定的工程时， 都会携带cookie信息</span></span><br><span class="line">cookie.setPath(“/<span class="number">29</span>-Cookie-Session”);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问服务器下部署的所有工程时都会携带cookie</span></span><br><span class="line">cookie.setPath(“/”);</span><br></pre></td></tr></table></figure><h4 id="删除Cookie"><a href="#删除Cookie" class="headerlink" title="删除Cookie"></a>删除Cookie</h4><p>如果想删除客户端的已经存储的cookie信息<br>使用同名同路径的持久化时间为0的cookie进行覆盖即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"lk"</span>,<span class="string">"it666"</span>);</span><br><span class="line">cookie.setMaxAge(<span class="number">0</span>);</span><br><span class="line">response.addCookie(cookie);</span><br></pre></td></tr></table></figure><h4 id="服务器如何获取客户端携带的cookie"><a href="#服务器如何获取客户端携带的cookie" class="headerlink" title="服务器如何获取客户端携带的cookie"></a>服务器如何获取客户端携带的cookie</h4><p>通过Request对象的getCookies()方法，获取的是所有的cookie，要进行遍历</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取所有cookie对象</span></span><br><span class="line">Cookie[] cookies = request.getCookies();</span><br><span class="line"><span class="keyword">if</span> (cookies != <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">        String name = cookie.getName();</span><br><span class="line">        <span class="keyword">if</span> (name.equals(<span class="string">"lk"</span>)) &#123;</span><br><span class="line">            response.getWriter().write(cookie.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="记录上次登录时间"><a href="#记录上次登录时间" class="headerlink" title="记录上次登录时间"></a>记录上次登录时间</h4><p>1.第一次访问时，获取当前的时间，并把它写到cookie当中，响应给浏览器<br>2.第一次访问，告诉用户是第一次访问<br>3.用户下次访问时，获取用户携带的cookie,把日期在浏览器当中显示，记录最新的cookie</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前日期</span></span><br><span class="line">Date date = <span class="keyword">new</span> Date();</span><br><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">String formatDate = sdf.format(date);</span><br><span class="line">System.out.println(formatDate);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入cookie</span></span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"lastTime"</span>, formatDate);</span><br><span class="line">response.addCookie(cookie);</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">String lastTime = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 取cookie</span></span><br><span class="line">Cookie[] cookies = request.getCookies();</span><br><span class="line"><span class="keyword">if</span> (cookies != <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (Cookie c : cookies) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c.getName().equals(<span class="string">"lastTime"</span>)) &#123;</span><br><span class="line">            lastTime = c.getValue();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="keyword">if</span> (lastTime != <span class="keyword">null</span>) &#123;</span><br><span class="line">    response.getWriter().write(<span class="string">"上次登录时间为："</span>+lastTime);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    response.getWriter().write(<span class="string">"您是第一次登录"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="session"><a href="#session" class="headerlink" title="session"></a>session</h2><p>Session技术是将数据存储在服务器端的技术<br>会为每个客户端都创建一块<strong>内存空间</strong>存储客户的数据<br>客户端需要每次都携带一个标识ID去服务器中寻找属于自己的内存空间<br>Session需要借助于Cookie存储客户的唯一性标识SESSIONID</p><p><img src="/2020/02/13/web-server-note-8/1.png" alt="Session"><br>Session如何办到在一个Servlet当中存数据，在另一个Servlet中取出当初存储的数据<br>每一个用户访问服务器时，会给该用户分配他自己对应的存储空间<br>并且创建的存储空间有一个编号我们称为SessionID<br>第一次访问时， 会把对应的sessionID以Cookie的形式写给浏览器<br>下次再访问时， 会携带sessionID，到当初创建的那个存储空间中取出数据</p><h4 id="获取Session对象"><a href="#获取Session对象" class="headerlink" title="获取Session对象"></a>获取Session对象</h4><p>获得专属于当前会话的Session对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = request.getSession();</span><br></pre></td></tr></table></figure><p>如果服务器端没有该会话的Session对象，会创建一个新的Session返回<br>如果已经有了属于该会话的Session直接将已有的Session返回<br>本质就是根据SESSIONID判断该客户端是否在服务器上已经存在Session</p><h4 id="向Session当中存取数据"><a href="#向Session当中存取数据" class="headerlink" title="向Session当中存取数据"></a>向Session当中存取数据</h4><p>已经学习的其它两个域对象：ServletContext域、Request域</p><p>Session对象也是一个域对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">session.setAttribute(String name,Object obj);</span><br><span class="line">session.getAttribute(String name);</span><br><span class="line">session.removeAttribute(String name);</span><br></pre></td></tr></table></figure><p>SessionServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = request.getSession();</span><br><span class="line">session.setAttribute(<span class="string">"lk"</span>, <span class="string">"it666"</span>);</span><br></pre></td></tr></table></figure><p>SessionServlet2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = request.getSession();</span><br><span class="line">System.out.println(session.getAttribute(<span class="string">"lk"</span>));<span class="comment">// it666</span></span><br></pre></td></tr></table></figure><h4 id="Session的生命周期"><a href="#Session的生命周期" class="headerlink" title="Session的生命周期"></a>Session的生命周期</h4><ul><li>创建<br>第一次执行request.getSession()时创建</li><li>销毁</li></ul><p>1.服务器关闭时<br>2.Session过期/失效（默认30分钟，默认配置在Servers的web.xml里session-timeout，也可在工程web.xml中定义）是从最后一次操作结束时计时<br>3.手动销毁对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.invadate();</span><br></pre></td></tr></table></figure><p>浏览器关闭，session就销毁，这句话是不正确的<br>作用范围：默认在一次会话中，也就是说在一次会话中任何资源公用一个Session对象</p><h4 id="JsessioID持久化"><a href="#JsessioID持久化" class="headerlink" title="JsessioID持久化"></a>JsessioID持久化</h4><p>默认情况下，第一次获取session对象时，会帮你创建一个Session，可以获取该Session的ID，会自动的把id写到Cookie中</p><p>存在的问题<br>第一次访问Sevlet1时存储一些数据，在第二个Servlet当中直接取数据，可以直接取到<br>再把浏览器关闭，直接到第二个Servlet中取数据，发现取不到数据了</p><p>原因<br>因为访问的时候要求带着JsessionID.由于默认情况下，存储cookie是会话级别的，关闭浏览器，就没有了<br>所以再次打开浏览器，访问资源时，没有jsessionID.  就会创建一个新的Session，就取不到数据</p><p>解决办法<br>在写数据时，自己手动去把SessionID写到cookie当中<br>写的时候，设置持久化时间<br>注意，key值一定是和它自动生成的key值是一样的</p><p>SessionServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = request.getSession();</span><br><span class="line"></span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"JSESSIONID"</span>, session.getId());</span><br><span class="line">cookie.setPath(<span class="string">"/29-Cookie-Session"</span>);</span><br><span class="line">cookie.setMaxAge(<span class="number">60</span>*<span class="number">2</span>);<span class="comment">// 2分钟</span></span><br><span class="line">response.addCookie(cookie);</span><br><span class="line"></span><br><span class="line">session.setAttribute(<span class="string">"lk"</span>, <span class="string">"it666"</span>);</span><br></pre></td></tr></table></figure><p>SessionServlet2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = request.getSession();</span><br><span class="line">System.out.println(session.getAttribute(<span class="string">"lk"</span>));<span class="comment">// it666</span></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/13/web-server-note-8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-lombok和登录注册功能</title>
      <link>https://aaronlinv.github.io/2020/02/11/web-server-note-7/</link>
      <guid>https://aaronlinv.github.io/2020/02/11/web-server-note-7/</guid>
      <pubDate>Tue, 11 Feb 2020 11:30:18 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;lombok&quot;&gt;&lt;a href=&quot;#lombok&quot; class=&quot;headerlink&quot; title=&quot;lombok&quot;&gt;&lt;/a&gt;lombok&lt;/h2&gt;&lt;p&gt;是一款小巧的代码生成工具&lt;br&gt;自动生成getter与setter方法&lt;br&gt;提高开发效率，代码简洁，直观，
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="lombok"><a href="#lombok" class="headerlink" title="lombok"></a>lombok</h2><p>是一款小巧的代码生成工具<br>自动生成getter与setter方法<br>提高开发效率，代码简洁，直观，减少大量冗余代码，减少后期的维护成本</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><a href="https://projectlombok.org/download" target="_blank" rel="noopener">lombok下载地址</a></p><ol><li>让eclipse认识lombok语法<br>在lombok.jar所在位置，按住Shift右键运行命令行，运行命令：java -jar lombok.jar<br>在弹出的程序中选择指定的Eclipse(没有自动识别就手动选择Eclipse路径)<br>选择Install/Update，（Win10可能报错，需要管理员权限，我的解决办法是：右键管理员权限运行Git Bash然后执行命令）<br>最好重启一下Eclipse</li></ol><p>安装jar包原理<br>把jar拷贝到eclipse当中<br>在eclipse.ini文件当中做了两行配置</p><ol start="2"><li>lombok导入jar包<br>快捷键：Ctrl + O 查看该类所有字段和方法</li></ol><p>方式1<br>1.直接把lombok.jar拷贝到工程当中<br>2.buildPath<br>弊端：每一个工程都要拷贝这个jar包</p><p>方式2<br>把<strong>经常用</strong>的jar放到某一个地方，每一次要用，直接引用就行<br>1.右键工程 - Buildd Path - Config Build Path - (如果又Classpath就选这个) - Add Libraries<br>2.在弹出的对话框当中选择User Library用户自己的库<br>3.进入到添加界面，点击右侧添加，新建一个仓库，给仓库起一个名称<br>4.选择刚新建的仓库，点击右侧Add External JARs，找到lombok对应的jar包地址<br>以后每次使用只需要 添加User Library中定义好的jar包即可</p><p>在类上添加注解<br>常用注解<br>@Data ：该注解相当于同时加上以下注解@Setter @Getter @ToString @EqualsAndHashCode，作用于类中</p><p>@Setter @Getter<br>作用于属性上,自动生成get,set方法.<br>也可直接作用于类上，全部属性都添加</p><p>@ToString<br>生成toString方法，默认情况下，会输出类名、所有属性，属性会按照顺序输出，以逗号分割<br>@EqualsAndHashCode ： 生成equals和hascode方法<br>@NoArgsConstructor ：无参构造器<br>@AllArgsConstructor ： 全参构造器</p><h2 id="登录注册功能"><a href="#登录注册功能" class="headerlink" title="登录注册功能"></a>登录注册功能</h2><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><p><img src="/2020/02/11/web-server-note-7/1.png" alt="登录注册功能分析"></p><ol><li>新建Dynamic Web Project：Mystore</li><li>建表mystore，字符集：utf8</li><li>建表<br><img src="/2020/02/11/web-server-note-7/2.png" alt="建表"></li><li>domain<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Setter</span><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String uid; </span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"User [uid="</span> + uid + <span class="string">", username="</span> + username + <span class="string">", password="</span> + password + <span class="string">", phone="</span> + phone + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>把前端代码拿到WebContent里，运行项目测试index打开是否正常<h4 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h4>复制CheckCodeServlet到com.it666.servlet<br>复制word.txt到WEB-INF<br>修改regist.html<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"check_box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> &gt;</span>验证码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/28-Mystore/CheckCodeServlet"</span> <span class="attr">onclick</span>=<span class="string">"change(this)"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>开发中如果JS不独立，一般把script标签放在最后（还在body内），HTML加载完，再加载JS<br>添加JS：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">(obj)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        obj.src=<span class="string">"/28-Mystore/CheckCodeServlet?time="</span>+<span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="前端验证"><a href="#前端验证" class="headerlink" title="前端验证"></a>前端验证</h4><p>修改submit为buttom，css样式也需要修改，增加conclick</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"submit_button"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"立即注册"</span> <span class="attr">onclick</span>=<span class="string">"checkDate()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>安装Eclipse插件（对网络有要求）：<br>Help - Eclipse Marketplace… - 搜索<br>Vue.js(真的好用，但是收费)<br>选择Angular IDE CI - Install - 选择前三个 - 一路都Confirm - 安装结束（右下角可以看到安装进度）后重启Eclipse<br>可能安装不了（这个插件仅用与自动补全代码）</p><p>写JS验证</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 表单内容 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/28-Mystore/RegistServlet"</span> <span class="attr">id</span>=<span class="string">reg_form</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"userName"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">type</span>=<span class="string">"text"</span> </span></span><br><span class="line"><span class="tag">                <span class="attr">placeholder</span>=<span class="string">"请输入"</span> <span class="attr">name</span> = <span class="string">"username"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"pwd"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入"</span> <span class="attr">name</span> = <span class="string">"password"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"pwd2"</span> <span class="attr">type</span>=<span class="string">"password"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">placeholder</span>=<span class="string">"请输入"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入"</span> <span class="attr">name</span> = <span class="string">"phone"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"check_box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入"</span> <span class="attr">name</span> = <span class="string">"code"</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">                <span class="attr">src</span>=<span class="string">"/28-Mystore/CheckCodeServlet"</span> <span class="attr">onclick</span>=<span class="string">"change(this)"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"submit_button"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"立即注册"</span> <span class="attr">onclick</span>=<span class="string">"checkDate()"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--JS部分--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">(obj)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        obj.src = <span class="string">"/28-Mystore/CheckCodeServlet?time="</span></span></span><br><span class="line"><span class="javascript">                + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkDate</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 1.获取用户名、密码、确认密码</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> username = <span class="built_in">document</span>.getElementById(<span class="string">"username"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pwd = <span class="built_in">document</span>.getElementById(<span class="string">"pwd"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pwd2 = <span class="built_in">document</span>.getElementById(<span class="string">"pwd2"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 2.判读输入合法性</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (username.value == <span class="string">""</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">"请输入用户名"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (pwd.value == <span class="string">""</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">"请输入密码"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (pwd.value == <span class="string">""</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">"请输入密码"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (pwd.value == <span class="string">""</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">"请再次输入密码"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (pwd.value == pwd2.value) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 1.获取form表单</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> form = <span class="built_in">document</span>.getElementById(<span class="string">"reg_form"</span>);</span></span><br><span class="line">            form.submit();</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">"两次输入的密码不一样"</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>RegistServlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.servlet;</span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RegistServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegistServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">RegistServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"RegistServlet"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置请求编码和响应编码</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="comment">// 1.判断输入的验证码是否正确</span></span><br><span class="line">String code = request.getParameter(<span class="string">"code"</span>);</span><br><span class="line">System.out.println(code);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.接收所有参数</span></span><br><span class="line">Object word = (String) <span class="keyword">this</span>.getServletContext().getAttribute(<span class="string">"checkCode"</span>);</span><br><span class="line"><span class="keyword">if</span> (code.equals(word)) &#123;</span><br><span class="line">response.getWriter().write(<span class="string">"验证码正确"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.把接收的参数封 装成User对象(导入jar包到lib)</span></span><br><span class="line">User u = <span class="keyword">new</span> User();</span><br><span class="line">Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">BeanUtils.populate(u, parameterMap);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(u);</span><br><span class="line"><span class="comment">// 3.设置uid </span></span><br><span class="line">u.setUid(UUID.randomUUID().toString());</span><br><span class="line"><span class="comment">// 4.写入到数据库 导入相关Jar包</span></span><br><span class="line"><span class="comment">// db.properties 修改数据库 放src里， 写JdbcUtil，修改path</span></span><br><span class="line"><span class="comment">// String path = JDBCUtil.class.getClassLoader().getResource("db.properties").getPath();</span></span><br><span class="line"><span class="comment">// FileInputStream in = new FileInputStream(path);</span></span><br><span class="line"><span class="comment">// p.load(in);</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line">String sql = <span class="string">"insert into user value(?,?,?,?)"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">qr.update(sql,u.getUid(),u.getUsername(),u.getPassword(),u.getPhone());</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response.setHeader(<span class="string">"refresh"</span>, <span class="string">"3;url=/28-Mystore/login.html"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">response.getWriter().write(<span class="string">"验证码错误"</span>);</span><br><span class="line">response.setHeader(<span class="string">"refresh"</span>, <span class="string">"3;url=/28-Mystore/regist.html"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 可以补充前端验证 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/28-Mystore/LoginServlet"</span> <span class="attr">id</span>=<span class="string">"login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 用户名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"userName"</span> &gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 密码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"password"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 登录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login_btn"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"forgot_pwd"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>忘记密码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>忘记会员名<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>免费注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>LoginServlet 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.servlet;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 获取用户名和密码</span></span><br><span class="line">String name = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">String pwd = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">System.out.println(name + <span class="string">" "</span> + pwd);</span><br><span class="line"><span class="comment">// 查询数据库</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line">String sql = <span class="string">"select * from user where username = ? and password = ?"</span>;</span><br><span class="line">User u = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">u = qr.query(sql, <span class="keyword">new</span> BeanHandler&lt;User&gt;(User.class), name, pwd);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(u);</span><br><span class="line"><span class="keyword">if</span> (u != <span class="keyword">null</span>) &#123;</span><br><span class="line">response.getWriter().write(<span class="string">"登录成功"</span>);</span><br><span class="line">response.setHeader(<span class="string">"refresh"</span>, <span class="string">"2;url=/28-Mystore/index.html"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">response.getWriter().write(<span class="string">"登录失败"</span>);</span><br><span class="line">response.setHeader(<span class="string">"refresh"</span>, <span class="string">"2;url=/28-Mystore/login.html"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a><br><a href="https://bbs.csdn.net/topics/392628907" target="_blank" rel="noopener">小白求教：java中modulepath与classpath区别是什么？</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/11/web-server-note-7/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-Request</title>
      <link>https://aaronlinv.github.io/2020/02/11/web-server-note-6/</link>
      <guid>https://aaronlinv.github.io/2020/02/11/web-server-note-6/</guid>
      <pubDate>Tue, 11 Feb 2020 05:56:44 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;获取请求行、请求头、请求体&quot;&gt;&lt;a href=&quot;#获取请求行、请求头、请求体&quot; class=&quot;headerlink&quot; title=&quot;获取请求行、请求头、请求体&quot;&gt;&lt;/a&gt;获取请求行、请求头、请求体&lt;/h2&gt;&lt;figure class=&quot;highlight html
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="获取请求行、请求头、请求体"><a href="#获取请求行、请求头、请求体" class="headerlink" title="获取请求行、请求头、请求体"></a>获取请求行、请求头、请求体</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/27-Request/RequestServlet"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入一些信息..."</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入一些信息..."</span> <span class="attr">name</span>=<span class="string">"pwd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">性别：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"man"</span> <span class="attr">name</span>=<span class="string">"gender"</span>&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"woman"</span> <span class="attr">name</span>=<span class="string">"gender"</span>&gt;</span>女 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">爱好：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"running"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> &gt;</span> 跑步</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"swimming"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span> 游泳</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"singing"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span> 唱歌 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.request;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"RequestServlet"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取请求行</span></span><br><span class="line"><span class="comment">// 1.获取请求方法</span></span><br><span class="line">System.out.println(request.getMethod()); <span class="comment">// GET POST</span></span><br><span class="line"><span class="comment">// 2. 获取请求资源</span></span><br><span class="line">StringBuffer requestURL = request.getRequestURL();</span><br><span class="line">String requestURI = request.getRequestURI();</span><br><span class="line">System.out.println(requestURL); <span class="comment">// http://localhost/27-Request/RequestServlet</span></span><br><span class="line">System.out.println(requestURI); <span class="comment">// /27-Request/RequestServlet</span></span><br><span class="line"><span class="comment">// 3.获取get查询参数</span></span><br><span class="line">System.out.println(request.getQueryString()); <span class="comment">// username=1111&amp;pwd=1111</span></span><br><span class="line"><span class="comment">// 4.获取应用名称</span></span><br><span class="line">String contextPath = request.getContextPath();</span><br><span class="line">System.out.println(contextPath); <span class="comment">// /27-Request</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取请求头</span></span><br><span class="line"><span class="comment">// 1.获取所有的请求头名称</span></span><br><span class="line">Enumeration&lt;String&gt; headerNames = request.getHeaderNames();</span><br><span class="line"><span class="keyword">while</span> (headerNames.hasMoreElements()) &#123;</span><br><span class="line">System.out.println(headerNames.nextElement());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * accept </span></span><br><span class="line"><span class="comment"> * referer </span></span><br><span class="line"><span class="comment"> * accept-language </span></span><br><span class="line"><span class="comment"> * ua-cpu </span></span><br><span class="line"><span class="comment"> * accept-encoding </span></span><br><span class="line"><span class="comment"> * user-agent </span></span><br><span class="line"><span class="comment"> * host</span></span><br><span class="line"><span class="comment"> * connection</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.获取指定的头信息</span></span><br><span class="line">System.out.println(request.getHeader(<span class="string">"referer"</span>)); <span class="comment">// http://localhost/27-Request/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.打印所有的请求头和请求头内容</span></span><br><span class="line">Enumeration&lt;String&gt; headerNames2 = request.getHeaderNames();</span><br><span class="line"><span class="keyword">while</span> (headerNames2.hasMoreElements()) &#123;</span><br><span class="line">String name = headerNames2.nextElement();</span><br><span class="line">System.out.println(request.getHeader(name));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取请求体</span></span><br><span class="line"><span class="comment">// 1.获取一个值</span></span><br><span class="line">System.out.println(request.getParameter(<span class="string">"username"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 获取多个值</span></span><br><span class="line">String[] parameterValues = request.getParameterValues(<span class="string">"hobby"</span>);</span><br><span class="line">System.out.println(Arrays.toString(parameterValues));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.获取所有请求参数名称 返回的是一个枚举 (一般用下面4的方法)</span></span><br><span class="line">Enumeration&lt;String&gt; parameterNames = request.getParameterNames();</span><br><span class="line"><span class="keyword">while</span> (parameterNames.hasMoreElements()) &#123;</span><br><span class="line">String string = parameterNames.nextElement();</span><br><span class="line">System.out.println(string);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.获取所有请求参数</span></span><br><span class="line">Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line"><span class="keyword">for</span> (Map.Entry&lt;String, String[]&gt; entry:parameterMap.entrySet()) &#123;</span><br><span class="line">System.out.println(entry.getKey()+<span class="string">" "</span>+Arrays.toString(entry.getValue()));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请求头referer参数：告诉服务器我是从哪个页面链接过来的</p><ul><li><p>通过以下方式发送请求才会获取</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">直接用<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">用Submit或<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span>&gt;</span>提交的表单(POST或GET)</span><br></pre></td></tr></table></figure><p>用JavaScript提交的表单(POST或GET)</p></li><li><p>通过以下方式不会有referer<br>从收藏夹链接<br>单击主页或自定义的地址<br>在浏览器中直接输地址</p></li></ul><p>什么时候使用get方式与post方式<br>1.发送的参数不需要写到数据库当中使用get<br>2.发送的参数需要保存到数据库当中使用post<br>form一般提交数据的数据为post</p><p>中文乱码的原因<br>发送请求时， 会对参数进行编码，编码使用的是ISO8859-1  不支持中文，所以乱码<br>获取对应的参数，通过iso8859-1转回二进制位，再以utf-8的形式转成字符串<br>存在的问题：每一个参数都必须得要转回二进制位，再转为字符串</p><p>request方法解决中文乱码<br>只适用于post</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><p>使用BeanUtils把参数封装成对象</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/27-Request/RequestServlet2"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入一些信息..."</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入一些信息..."</span> <span class="attr">name</span>=<span class="string">"pwd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">性别：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">name</span>=<span class="string">"gender"</span>&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"女"</span> <span class="attr">name</span>=<span class="string">"gender"</span>&gt;</span>女 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">爱好：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"跑步"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> &gt;</span> 跑步</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"游泳"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span> 游泳</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"唱歌"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span> 唱歌 <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">``` </span><br><span class="line">User类：</span><br><span class="line">```java</span><br><span class="line">package com.it666.request;</span><br><span class="line"></span><br><span class="line">public class User &#123;</span><br><span class="line">private String username;</span><br><span class="line">private String pwd;</span><br><span class="line">private String gender;</span><br><span class="line">private String [] hobby;</span><br><span class="line">public String getUsername() &#123;</span><br><span class="line">return username;</span><br><span class="line">&#125;</span><br><span class="line">public void setUsername(String username) &#123;</span><br><span class="line">this.username = username;</span><br><span class="line">&#125;</span><br><span class="line">public String getPwd() &#123;</span><br><span class="line">return pwd;</span><br><span class="line">&#125;</span><br><span class="line">public void setPwd(String pwd) &#123;</span><br><span class="line">this.pwd = pwd;</span><br><span class="line">&#125;</span><br><span class="line">public String getGender() &#123;</span><br><span class="line">return gender;</span><br><span class="line">&#125;</span><br><span class="line">public void setGender(String gender) &#123;</span><br><span class="line">this.gender = gender;</span><br><span class="line">&#125;</span><br><span class="line">public String[] getHobby() &#123;</span><br><span class="line">return hobby;</span><br><span class="line">&#125;</span><br><span class="line">public void setHobby(String[] hobby) &#123;</span><br><span class="line">this.hobby = hobby;</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public String toString() &#123;</span><br><span class="line">return "User [username=" + username + ", pwd=" + pwd + ", gender=" + gender + ", hobby="</span><br><span class="line">+ Arrays.toString(hobby) + "]";</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RequestServlet2类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.request;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestServlet2"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestServlet2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>); <span class="comment">// 只能用于post</span></span><br><span class="line">String parameter = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">System.out.println(parameter);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*转二进制流方式处理中文乱码</span></span><br><span class="line"><span class="comment">byte[] bytes = parameter.getBytes("ISO8859-1");</span></span><br><span class="line"><span class="comment">String string = new String(bytes,"UTF-8");</span></span><br><span class="line"><span class="comment">System.out.println(string);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 遍历方式：</span></span><br><span class="line"><span class="comment">for (Map.Entry&lt;String, String[]&gt; entry  : parameterMap.entrySet()) &#123;</span></span><br><span class="line"><span class="comment">System.out.println(entry.getKey()+" " +Arrays.toString(entry.getValue()));</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入beanutils的jar包 build path: commons-beanutils-1.8.3.jar commons-logging-1.1.1.jar</span></span><br><span class="line">User u = <span class="keyword">new</span> User();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">BeanUtils.populate(u, parameterMap);</span><br><span class="line">System.out.println(u);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a>请求转发</h2><p>重定向与请求转发的区别</p><ul><li>重定向</li></ul><p>找servlet1，通过设置响应，告诉浏览器，再让浏览器发送请求到servlet2<br>发两次请求，地址栏会发生变化</p><ul><li>请求转发</li></ul><p>请求转发只需要发送一次直接，找servlet1，在servlet1当中直接转发给servlet2，不要再告诉浏览器<br>只发送一次请求，浏览器地址栏当中还是servlet1，不会发生变化</p><p><img src="/2020/02/11/web-server-note-6/1.png" alt="请求转发"></p><h4 id="实现转发"><a href="#实现转发" class="headerlink" title="实现转发"></a>实现转发</h4><p>Servlet1:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.dispatcher;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/Servlet1"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 请求转发</span></span><br><span class="line"><span class="comment">// 1.通过请求对象获取一个转发器</span></span><br><span class="line">RequestDispatcher disp = request.getRequestDispatcher(<span class="string">"/Servlet2"</span>);</span><br><span class="line"><span class="comment">// 2.通过转发器进行转发</span></span><br><span class="line">disp.forward(request, response);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Servlet2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.dispatcher;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/Servlet2"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Servlet2"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="request域对象"><a href="#request域对象" class="headerlink" title="request域对象"></a>request域对象</h4><p>在一次请求过程当中<br>request是共享的。在一个servlet当中设置的参数，转发到另外一个servlet，取出来的是同一个</p><p>生命周期</p><ul><li>创建：发送一个请求时创建一个request对象</li><li>销毁：请求结束，浏览器给出响应时，销毁</li><li>作用范围：一次请求当中(如果经历多个Servlet，最后一个也是能获取到设置的参数的)</li></ul><p>注意两个Servlet的request不是同一个对象</p><p>Servlet1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.dispatcher;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/Servlet1"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 请求转发</span></span><br><span class="line"><span class="comment">// 1.通过请求对象获取一个转发器</span></span><br><span class="line">RequestDispatcher disp = request.getRequestDispatcher(<span class="string">"/Servlet2"</span>);</span><br><span class="line"><span class="comment">// 域 存储数据</span></span><br><span class="line">request.setAttribute(<span class="string">"lk"</span>, <span class="string">"it666"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.通过转发器进行转发</span></span><br><span class="line">disp.forward(request, response);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Servlet2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.dispatcher;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/Servlet2"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Servlet2"</span>);</span><br><span class="line"><span class="comment">// 读取 域的数据</span></span><br><span class="line">System.out.println(request.getAttribute(<span class="string">"lk"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="客户端地址与服务器端地址"><a href="#客户端地址与服务器端地址" class="headerlink" title="客户端地址与服务器端地址"></a>客户端地址与服务器端地址</h4><ul><li>客户端地址<br>客户端访问服务器使用的地址<br>服务器外部地址<br>在写的时候要写上web应用的名称/应用名称/资源<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/27-Request/RequestServlet"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>服务器地址<br>在服务内部当中使用的地址<br>不需要写web应用名称/资源名称<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RequestDispatcher disp = request.getRequestDispatcher(<span class="string">"/Servlet2"</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/11/web-server-note-6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-Response</title>
      <link>https://aaronlinv.github.io/2020/02/09/web-server-note-5/</link>
      <guid>https://aaronlinv.github.io/2020/02/09/web-server-note-5/</guid>
      <pubDate>Sun, 09 Feb 2020 09:25:02 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;ServletContext&quot;&gt;&lt;a href=&quot;#ServletContext&quot; class=&quot;headerlink&quot; title=&quot;ServletContext&quot;&gt;&lt;/a&gt;ServletContext&lt;/h2&gt;&lt;p&gt;ServletContext代表是一个web
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h2><p>ServletContext代表是一个web应用的上下文对象（web应用对象）<br>里面封装的都是web应用信息<br>一个ServletContext对应一个应用</p><p>ServletContext的生命周期<br>在服务器一启动的时候就会创建<br>在服务器关闭的时候销毁</p><p>如何获得上下文<br>1.通过init方法当中一个参数ServletConfig来获取<br>2.直接在HttpServlet当中获取，this.getServletContext，这种方法本质还是通过config来去获取的</p><p>子类在覆盖父类init方法的时候最好调用父类的初始化参数super.init(config);<br>不传入config，父类就没有config参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OneServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.init(config);</span><br><span class="line">ServletContext sc1 = config.getServletContext();</span><br><span class="line">System.out.println(sc1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"OneServlet"</span>);</span><br><span class="line">ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"><span class="comment">// 这种方法本质还是通过config获取</span></span><br><span class="line"><span class="comment">// 重写了init方法，用这种方法调用空指针异常</span></span><br><span class="line"><span class="comment">// 原因是子类覆盖了父类init方法</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Override</span></span><br><span class="line"><span class="comment">    public void init(ServletConfig config) throws ServletException &#123;</span></span><br><span class="line"><span class="comment">        this.config = config;</span></span><br><span class="line"><span class="comment">        this.init();</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 解决：在init方法添加super.init(config);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取全局的初始化参数<br>初始化参数不能再某一个Servlet当中来去配置。在最外层来去配置<br>获取全局初始化参数</p><p>获得Web应用中某一个资源的资源的绝对路径<br>context.getRealPath(“文件”)<br>相对的是web应有根目录<br>context.getRealPath(“index.html”)<br>D:\Java\Tomcat\apache-tomcat-7.0.85\webapps\bei\index.html<br>在文件名称前面自动拼接上当前工程的绝对地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">String  realPath = context.getRealPath(<span class="string">"WEB-INF/a.txt"</span>); <span class="comment">// a.txt 在WEB-INF里</span></span><br><span class="line">System.out.println(realPath);<span class="comment">// D:\Tomcat\apache-tomcat-7.0.85\webapps\26-Servlet\WEB-INF\a.txt</span></span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过类加载器，获取字节码路径</span></span><br><span class="line">String path = OneServlet.class.getClassLoader().getResource(<span class="string">"c.txt"</span>).getPath(); <span class="comment">// c.txt 在src下</span></span><br><span class="line">System.out.println(path);<span class="comment">// /D:/Tomcat/apache-tomcat-7.0.85/webapps/26-Servlet/WEB-INF/classes/c.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果在包内，路径就要加上包路径</span></span><br></pre></td></tr></table></figure><p>ServletContext是一个域对象<br>域：能够存储数据<br>域对象：能够存取数据数据就的对象</p><p>ServletContext域对象的作用范围<br>整个web应用<br>所有的web资源都可以进行存取数据<br>数据是可以共享的<br>只要是一个域对象上，基本上里面都有这几个方法:<br>获取完ServletContext之后向里面写数据：context.setAttribute(String name,Object value);<br>获取完ServletContext之后，通过name取出存放的数据：context.getAttribute(String name);<br>获取完ServletContext之后，删除指定名称的值：context.removeAttribute(String name);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ServletContext context = config.getServletContext();</span><br><span class="line">sc1.setAttribute(<span class="string">"lk"</span>, <span class="string">"lks"</span>);</span><br><span class="line">String value =(String) context.getAttribute(<span class="string">"lk"</span>);<span class="comment">// 其他Servlet也可以get到</span></span><br><span class="line">System.out.println(value);</span><br></pre></td></tr></table></figure><h2 id="Response响应过程"><a href="#Response响应过程" class="headerlink" title="Response响应过程"></a>Response响应过程</h2><p><img src="/2020/02/09/web-server-note-5/1.png" alt="Response响应过程"></p><p>在去发送一个请求时， 会找到tomcat引擎<br>引擎会找到对应的web应用，并且会创建request对象和response对象<br>找到应用后， 会执行应用的web.xml再去根据url-patten的内容创建Servlet对象<br>并且会调用Servlet对象的service方法，并且把创建的request对象和response对象传入到方法当中<br>拿到response对象后，  自己可以往响应当中写入一些自己给客户端的内容，通过response.getwrite().wirte(“写的内容”)方法进行写入<br>写的内容，是存到一个response缓冲区当中<br>当方法执行结束之后， tomcat就会从response缓冲区当中取出数据，取出你的数据同时，它自己还会自动的往里面添加一些服务器相关的信息进去，所以响应给浏览器时， 可以看到除了自己写的内容， 还会有一些服务器相关的信息</p><h2 id="response"><a href="#response" class="headerlink" title="response"></a>response</h2><p>通过response设置响应行，响应头 ，响应体</p><h4 id="设置响应行"><a href="#设置响应行" class="headerlink" title="设置响应行"></a>设置响应行</h4><p>response.setState(Int code)</p><h4 id="设置响应头"><a href="#设置响应头" class="headerlink" title="设置响应头"></a>设置响应头</h4><p>add：代表添加新的内容<br>addHeader(String name,String value)<br>addIntHeader(String name,int value)<br>addDateHeader(String name,date)</p><p>set：代表设置，已经存在的内容（可以修改自己add，也可以修改默认的）<br>setHeader(String name,String value)<br>setIntHeader(String name,int value)<br>setDateHeader(String name,Date value)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">response.setStatus(<span class="number">302</span>);</span><br><span class="line"><span class="comment">// add</span></span><br><span class="line">response.addHeader(<span class="string">"name"</span>, <span class="string">"it666"</span>);</span><br><span class="line">response.addIntHeader(<span class="string">"age"</span>, <span class="number">10</span>);</span><br><span class="line">response.addDateHeader(<span class="string">"my-Date"</span>, <span class="keyword">new</span> Date().getTime());<span class="comment">// 获取当前毫秒值</span></span><br><span class="line"><span class="comment">// set</span></span><br></pre></td></tr></table></figure><h4 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h4><p>到服务器当中去找servlet1，servlet1当中没有这个资源，告诉你去找servlet2，再去发送一个请求到servlet2</p><p>状态码：302</p><p>特点：要访问两次服务器<br>第一次访问是人为的去访问<br>第二次是自动的访问<br>浏览器地址栏已经发生变化</p><p>设置重定向</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.设置响应码302</span></span><br><span class="line">response.setStatus(<span class="number">302</span>);</span><br><span class="line"><span class="comment">// 2.设置重定向 /项目名/Servlet名</span></span><br><span class="line">response.setHeader(<span class="string">"location"</span>, <span class="string">"/26-Servlet/LocationServlet"</span>);</span><br></pre></td></tr></table></figure><p>封装的重写向<br>每次都要写状态码，和location比较麻烦<br>就给封装了一个方法<br>response.sendRedirect(“/26-Servlet/LocationServlet”);</p><p>定时刷新重定向<br>response.setHeader(“refresh”,”5;url=<a href="http://www.baidu.com&quot;" target="_blank" rel="noopener">http://www.baidu.com&quot;</a>)<br>5代表5秒<br>url的值为5秒后要去跳转的地址</p><h5 id="设置响应体"><a href="#设置响应体" class="headerlink" title="设置响应体"></a>设置响应体</h5><ol><li>通过write方法来写<br>response.getwrite().wirte(“要写的内容或HTML代码”);</li></ol><p>默认情况下写的中文内容会乱码<br>写的内容存到缓存区中使用的是ISO8859，ISO8859不支持中文，所以会乱码</p><p>解决中文乱码：<br>在存之前设置可以设置存放的编码<br>response.setCharacterEncoding(“UTF-8”)<br>告知浏览器使用的是utf-8编码<br>response.setHeader(“Content-Type”, “text/html;charset=UTF-8”);</p><p>只需要设置Content-Type就可以了，Tomcat看到设置了为utf-8的编码，它在存的时候也会使用utf-8的编码<br>使用封装写法：response.setContentType(“text/html;charset=UTF-8”);</p><ol start="2"><li>通过OutPutStream来写</li></ol><p>FileInputSteam<br>read方法读取一个字节</p><p>read(byte[] b)<br>    一次读取多个字节,并存放到数组b中<br>    上面是一次一滴一滴给你，这种是一次装一水桶再给你</p><p>读取全部的数据</p><p>FileOutputSteam<br>write()<br>    一次性写一个字符<br>write(buffer)<br>    一个性写多个字符<br>write(buffer,0,len)<br>    一次性写指定个数的字符</p><p>response注意点<br>    getWrite()和getOutputSteam不能同时调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// read 读一个字符 完毕返回-1</span></span><br><span class="line"><span class="comment">// System.out.println(in.read());</span></span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">5</span>];</span><br><span class="line">System.out.println(Arrays.toString(buffer));<span class="comment">// [0,0,0,0,0]</span></span><br><span class="line"><span class="comment">// 当前读取了几个字符 ，读到最后返回-1</span></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((len = in.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">    System.out.println(<span class="keyword">new</span> String (buffer,<span class="number">0</span>,len));</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 关闭文件</span></span><br><span class="line">in.close();</span><br></pre></td></tr></table></figure><p>写入图片案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ResImgServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResImgServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 向浏览器写一张图片</span></span><br><span class="line">String path = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"8.png"</span>);</span><br><span class="line"><span class="comment">// 加载图片</span></span><br><span class="line">FileInputStream in = <span class="keyword">new</span> FileInputStream(path);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取输出流</span></span><br><span class="line">ServletOutputStream out = response.getOutputStream();</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((len = in.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">out.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="下载功能"><a href="#下载功能" class="headerlink" title="下载功能"></a>下载功能</h4><p>把服务器当中的文件直接下载到电脑当中</p><p>1.直接使用a标签来去下载<br>有些内容会浏览器自动解析<br>浏览器不能解析的文件才会被下载</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 8.png路径：WebContent/download --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/26-Servlet/download/8.png"</span>&gt;</span>8.png<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.通过发送Servlet请求来去下载</p><p>通过发送一个Servlet请求，把文件名发送给服务器<br>发送给服务器后，接收到文件名参数，获取文件的绝对地址<br>通过流的形式来去写到浏览器<br>还得要告诉文件是什么类型</p><p>浏览器是以MIME的类型来识别类型<br>this.getServletContext().getMimeType(“文件名称”)</p><p>设置响应的类型<br>res.setContentType(“MIME类型”)</p><p>设置响应头，告诉浏览器不要去解析，是以附件的形式打开，<br>res.setHeader(“Content-Disposition”,”attachment;filename=”+文件名)</p><p>步骤<br>1.接收文件名参数<br>2.获取mime类型<br>3.设置浏览器响应类型<br>4.告诉浏览器以附件形式下载<br>5.获取文件的绝对路径<br>6.读取文件流<br>7.获取输出流<br>8.把内容写出到输出流</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ?后面跟参数，多个参数用&amp;隔开 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/26-Servlet/DownloadServlet?filename=8.png"</span>&gt;</span>8.png<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 写在service里</span></span><br><span class="line">String name = request.getParameter(<span class="string">"filename"</span>);</span><br><span class="line">System.out.println(name);<span class="comment">// 8.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据文件名获取mime类型</span></span><br><span class="line">String mimeType = <span class="keyword">this</span>.getServletContext().getMimeType(name);</span><br><span class="line">System.out.println(<span class="string">"mimeType:"</span>+mimeType);<span class="comment">// mimeType:image/png</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置mimeType</span></span><br><span class="line">response.setContentType(mimeType);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 告诉浏览器以附件形式打开 </span></span><br><span class="line">response.setHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;filename="</span>+name);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拼接文件路径</span></span><br><span class="line">String path = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"download/"</span>+name);</span><br><span class="line"></span><br><span class="line"><span class="comment">//加载文件</span></span><br><span class="line">FileInputStream in =  <span class="keyword">new</span> FileInputStream(path);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取响应的输出</span></span><br><span class="line">ServletOutputStream out = response.getOutputStream();</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span> [] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((len = in.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">out.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">in.close();</span><br></pre></td></tr></table></figure><p>获取中文参数报错问题<br>高版本tomcat中的新特性：就是严格按照 RFC 3986规范进行访问解析，而 RFC 3986规范定义了Url中只允许包含英文字母（a-zA-Z）、数字（0-9）、-_.~4个特殊字符以及所有保留字符(RFC3986中指定了以下字符为保留字符：! * ’ ( ) ; : @ &amp; = + $ , / ? # [ ])</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.../conf/catalina.properties中，找到最后注释掉的一行 </span><br><span class="line">#tomcat.util.http.parser.HttpParser.requestTargetAllow=| 去掉#，在最后加上 &#123;&#125; 表示把&#123;&#125;放行</span><br><span class="line">tomcat.util.http.parser.HttpParser.requestTargetAllow=|&#123;&#125;</span><br></pre></td></tr></table></figure><p>1.把获取的字符串参数的字节码获取，再重新使用utf-8编码<br>2.在设置以附件形式打开时， 不同的浏览器会对默认的名字进行解码<br>所以根据不同的浏览器，要对名称进行编码之后，再放入文件名<br>对文件名进行编码<br>不同的浏览器编码不一样，要先获取agent，取出浏览器的类型，根据不同的浏览器类型进行编码</p><p>步骤<br>    1.接收文件名称<br>    2.获取mimeType<br>    3.设置浏览器响应类型<br>    4.先对传入的参数转成二进制流，再使用UTF-8进行编码<br>    5.获取浏览器的信息<br>    6.判断是哪一种浏览器，根据不同的浏览器获取一个编码的文件名<br>    7.设置以附件形式下载，传的名称是编码过的名称<br>    8.获取文件的绝对路径<br>    9.读取文件流<br>    10.获取输出流<br>    11.把文件写到响应当中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取客户端信息</span></span><br><span class="line">String agent = request.getHeader(<span class="string">"User-Agent"</span>);</span><br><span class="line"><span class="comment">// 定义一个变量记录编码之后的名字</span></span><br><span class="line">String filenameEncoder = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">if</span> (agent.contains(<span class="string">"MSIE"</span>)) &#123;</span><br><span class="line"><span class="comment">// IE编码</span></span><br><span class="line">filenameEncoder = URLEncoder.encode(filename, <span class="string">"utf-8"</span>);</span><br><span class="line">filenameEncoder = filenameEncoder.replace(<span class="string">"+"</span>, <span class="string">" "</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (agent.contains(<span class="string">"Firefox"</span>)) &#123;</span><br><span class="line"><span class="comment">// 火狐编码</span></span><br><span class="line">BASE64Encoder base64Encoder = <span class="keyword">new</span> BASE64Encoder();</span><br><span class="line">filenameEncoder = <span class="string">"=?utf-8?B?"</span> + base64Encoder.encode(filename.getBytes(<span class="string">"utf-8"</span>)) + <span class="string">"?="</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 浏览器编码</span></span><br><span class="line">filenameEncoder = URLEncoder.encode(filename, <span class="string">"utf-8"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DK中的/lib/tool.jar和/lib/rt.jar已经从Java SE 9中删除</span></span><br><span class="line"><span class="comment">// JDK9 及以后要用下面的方式导包和创建对象</span></span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64.Encoder;</span><br><span class="line"><span class="comment">// 修改代码</span></span><br><span class="line">Encoder base64Encoder = Base64.getEncoder();</span><br></pre></td></tr></table></figure><h4 id="注册验证码功能"><a href="#注册验证码功能" class="headerlink" title="注册验证码功能"></a>注册验证码功能</h4><p>验证码可以防止：恶意批量注册、恶意破解密码、刷票、论坛灌水<br>有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试<br>确保当前访问是来自一个人而非机器</p><ol><li>把别人写好的验证码Servlet拿到程序当中</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.code;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics2D;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CheckCodeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 集合中保存所有成语</span></span><br><span class="line"><span class="keyword">private</span> List&lt;String&gt; words = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// 初始化阶段，读取new_words.txt</span></span><br><span class="line"><span class="comment">// web工程中读取 文件,必须使用绝对磁盘路径</span></span><br><span class="line">String path = getServletContext().getRealPath(<span class="string">"/WEB-INF/words.txt"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(path));</span><br><span class="line">String line;</span><br><span class="line"><span class="comment">//把读的成语全部添加到一个集合当中</span></span><br><span class="line"><span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">words.add(line);</span><br><span class="line">&#125;</span><br><span class="line">reader.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// 禁止缓存</span></span><br><span class="line"><span class="keyword">int</span> width = <span class="number">120</span>;</span><br><span class="line"><span class="keyword">int</span> height = <span class="number">30</span>;</span><br><span class="line"><span class="comment">// 步骤一 绘制一张内存中图片</span></span><br><span class="line">BufferedImage bufferedImage = <span class="keyword">new</span> BufferedImage(width, height,</span><br><span class="line">BufferedImage.TYPE_INT_RGB);</span><br><span class="line"><span class="comment">// 步骤二 图片绘制背景颜色 ---通过绘图对象</span></span><br><span class="line">Graphics graphics = bufferedImage.getGraphics();<span class="comment">// 得到画图对象 --- 画笔</span></span><br><span class="line"><span class="comment">// 绘制任何图形之前 都必须指定一个颜色</span></span><br><span class="line">graphics.setColor(getRandColor(<span class="number">200</span>, <span class="number">250</span>));</span><br><span class="line">graphics.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"><span class="comment">// 步骤三 绘制边框</span></span><br><span class="line">graphics.setColor(Color.WHITE);</span><br><span class="line">graphics.drawRect(<span class="number">0</span>, <span class="number">0</span>, width - <span class="number">1</span>, height - <span class="number">1</span>);</span><br><span class="line"><span class="comment">// 步骤四 四个随机数字</span></span><br><span class="line">Graphics2D graphics2d = (Graphics2D) graphics;</span><br><span class="line"><span class="comment">// 设置输出字体</span></span><br><span class="line">graphics2d.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>, Font.BOLD, <span class="number">18</span>));</span><br><span class="line">Random random = <span class="keyword">new</span> Random();<span class="comment">// 生成随机数</span></span><br><span class="line"><span class="keyword">int</span> index = random.nextInt(words.size());</span><br><span class="line">String word = words.get(index);<span class="comment">// 获得成语</span></span><br><span class="line"><span class="comment">// 定义x坐标</span></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; word.length(); i++) &#123;</span><br><span class="line"><span class="comment">// 随机颜色</span></span><br><span class="line">graphics2d.setColor(<span class="keyword">new</span> Color(<span class="number">20</span> + random.nextInt(<span class="number">110</span>), <span class="number">20</span> + random</span><br><span class="line">.nextInt(<span class="number">110</span>), <span class="number">20</span> + random.nextInt(<span class="number">110</span>)));</span><br><span class="line"><span class="comment">// 旋转 -30 --- 30度</span></span><br><span class="line"><span class="keyword">int</span> jiaodu = random.nextInt(<span class="number">60</span>) - <span class="number">30</span>;</span><br><span class="line"><span class="comment">// 换算弧度</span></span><br><span class="line"><span class="keyword">double</span> theta = jiaodu * Math.PI / <span class="number">180</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得字母数字</span></span><br><span class="line"><span class="keyword">char</span> c = word.charAt(i);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将c 输出到图片</span></span><br><span class="line">graphics2d.rotate(theta, x, <span class="number">20</span>);</span><br><span class="line">graphics2d.drawString(String.valueOf(c), x, <span class="number">20</span>);</span><br><span class="line">graphics2d.rotate(-theta, x, <span class="number">20</span>);</span><br><span class="line">x += <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将验证码内容保存session</span></span><br><span class="line">request.getSession().setAttribute(<span class="string">"checkcode_session"</span>, word);</span><br><span class="line"><span class="comment">//把生成的验证码存放到全局域对象当中</span></span><br><span class="line"><span class="keyword">this</span>.getServletContext().setAttribute(<span class="string">"checkCode"</span>, word);</span><br><span class="line"><span class="comment">// 步骤五 绘制干扰线</span></span><br><span class="line">graphics.setColor(getRandColor(<span class="number">160</span>, <span class="number">200</span>));</span><br><span class="line"><span class="keyword">int</span> x1;</span><br><span class="line"><span class="keyword">int</span> x2;</span><br><span class="line"><span class="keyword">int</span> y1;</span><br><span class="line"><span class="keyword">int</span> y2;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++) &#123;</span><br><span class="line">x1 = random.nextInt(width);</span><br><span class="line">x2 = random.nextInt(<span class="number">12</span>);</span><br><span class="line">y1 = random.nextInt(height);</span><br><span class="line">y2 = random.nextInt(<span class="number">12</span>);</span><br><span class="line">graphics.drawLine(x1, y1, x1 + x2, x2 + y2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将上面图片输出到浏览器 ImageIO</span></span><br><span class="line">graphics.dispose();<span class="comment">// 释放资源</span></span><br><span class="line"><span class="comment">//将图片写到response.getOutputStream()中</span></span><br><span class="line">ImageIO.write(bufferedImage, <span class="string">"jpg"</span>, response.getOutputStream());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取其某一范围的color</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fc</span></span><br><span class="line"><span class="comment"> *            int 范围参数1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bc</span></span><br><span class="line"><span class="comment"> *            int 范围参数2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Color</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Color <span class="title">getRandColor</span><span class="params">(<span class="keyword">int</span> fc, <span class="keyword">int</span> bc)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 取其随机颜色</span></span><br><span class="line">Random random = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">if</span> (fc &gt; <span class="number">255</span>) &#123;</span><br><span class="line">fc = <span class="number">255</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (bc &gt; <span class="number">255</span>) &#123;</span><br><span class="line">bc = <span class="number">255</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> r = fc + random.nextInt(bc - fc);</span><br><span class="line"><span class="keyword">int</span> g = fc + random.nextInt(bc - fc);</span><br><span class="line"><span class="keyword">int</span> b = fc + random.nextInt(bc - fc);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Color(r, g, b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写静态页面</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">(obj)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">// alert(obj);</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 浏览器加载同样地址使用的是缓存</span></span></span><br><span class="line"><span class="javascript">obj.src = <span class="string">"/26-Servlet/CheckCodeServlet?time"</span>+<span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/26-Servlet/RegisterServlet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">src</span>=<span class="string">"/26-Servlet/CheckCodeServlet"</span> <span class="attr">onclick</span>=<span class="string">"change(this)"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- this 指的就是这个img --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入验证码..."</span> <span class="attr">name</span>=<span class="string">"code"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写判断验证码是否正确Servlet</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.code;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RegisterServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegisterServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">String code = request.getParameter(<span class="string">"code"</span>);</span><br><span class="line">System.out.println(code); <span class="comment">// 中文乱码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] bytes = code.getBytes(<span class="string">"ISO8859-1"</span>);</span><br><span class="line">code = <span class="keyword">new</span> String (bytes,<span class="string">"UTF-8"</span>);</span><br><span class="line">System.out.println(code);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取出生成的字符串</span></span><br><span class="line">String  word = (String) <span class="keyword">this</span>.getServletContext().getAttribute(<span class="string">"checkCode"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置字符集，不然 下面的字会乱码</span></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (code.equals(word)) &#123;</span><br><span class="line">response.getWriter().write(<span class="string">"注册成功"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">response.getWriter().write(<span class="string">"验证码错误"</span>);</span><br><span class="line"><span class="comment">// 重新跳转到原界面</span></span><br><span class="line">response.setHeader(<span class="string">"refresh"</span>, <span class="string">"1;url=/26-Servlet/code.html"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.设置响应编码<br>2.从ServletContext当中获取验证码<br>3.获取传入的请求参数<br>4.从servletContext当中取出存放的验证码<br>5.把接收的验证码与取出的验证码时行比较<br>6.相同时，显示成功<br>7.不同时， 显示失败，隔3秒钟跳转到输入验证码界面</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a><br><a href="https://blog.csdn.net/xie_sining/article/details/80777164" target="_blank" rel="noopener">Java 9版本之后Base64Encoder和Base64Decoder无法继续使用解决办法</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/09/web-server-note-5/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-登录功能</title>
      <link>https://aaronlinv.github.io/2020/02/09/web-server-note-4/</link>
      <guid>https://aaronlinv.github.io/2020/02/09/web-server-note-4/</guid>
      <pubDate>Sun, 09 Feb 2020 07:53:45 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;实现登录功能&quot;&gt;&lt;a href=&quot;#实现登录功能&quot; class=&quot;headerlink&quot; title=&quot;实现登录功能&quot;&gt;&lt;/a&gt;实现登录功能&lt;/h2&gt;&lt;h4 id=&quot;建表&quot;&gt;&lt;a href=&quot;#建表&quot; class=&quot;headerlink&quot; title=&quot;建表&quot;&gt;&lt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="实现登录功能"><a href="#实现登录功能" class="headerlink" title="实现登录功能"></a>实现登录功能</h2><h4 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h4><p><img src="/2020/02/09/web-server-note-4/1.png" alt="数据库"><br>添加数据:<br>name:zs pwd:1234</p><h4 id="domian"><a href="#domian" class="headerlink" title="domian"></a>domian</h4><p>User类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.domain;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">Integer id;</span><br><span class="line">String name;</span><br><span class="line">String pwd;</span><br><span class="line">String email;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> pwd;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span><span class="params">(String pwd)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> email;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.email = email;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HTML登录界面"><a href="#HTML登录界面" class="headerlink" title="HTML登录界面"></a>HTML登录界面</h4><p>在WebContent目录下新建index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost/25-Servlet/LoginServlet"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名..."</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">密    码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码..."</span> <span class="attr">name</span>=<span class="string">"pwd"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="创建Servlet"><a href="#创建Servlet" class="headerlink" title="创建Servlet"></a>创建Servlet</h4><p>只需要勾选service方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"LoginServlet"</span>); <span class="comment">// 测试</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改form表的的action为LoginServlet的地址<br>重启Server，打开index，点击登录命令行是否输出LoginServlet</p><p>输入用户名和密码，get请求：<br><img src="/2020/02/09/web-server-note-4/2.png" alt="get请求"></p><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><p>导入jar包到WebContent/WEB-INF/lib</p><ul><li>commons-dbutils-1.4.jar</li><li>druid-1.0.15.jar</li><li>mysql-connector-java-5.1.40-bin.jar<br>bulid path</li></ul><p>创建resource文件夹，放入db.properties配置文件，记得修改url为刚创建的数据库<br>写JdbcUtil类</p><p>Properties配置文件的位置<br>resource文件夹会被部署到webapps\25-Servlet\WEB-INF\classes文件里<br>解决方法：通过字节码目录任意的类获取类加载器，获取到Properties配置文件的路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.utils;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> DataSource ds = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">            <span class="comment">// 获取字节码目录：通过字节码目录任意的类获取类加载器，获取到Properties配置文件的路径</span></span><br><span class="line">String path = JdbcUtil.class.getClassLoader().getResource(<span class="string">"db.properties"</span>).getPath();</span><br><span class="line">System.out.println(<span class="string">"path"</span>+path);</span><br><span class="line"></span><br><span class="line">FileInputStream in = <span class="keyword">new</span> FileInputStream(path);</span><br><span class="line">p.load(in);</span><br><span class="line">ds = DruidDataSourceFactory.createDataSource(p);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ds;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改Servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.it666.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.it666.utils.JdbcUtil;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"LoginServlet"</span>);</span><br><span class="line"><span class="comment">// 1.获取请求参数</span></span><br><span class="line">String name = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">String pwd = request.getParameter(<span class="string">"pwd"</span>);</span><br><span class="line">System.out.println(<span class="string">"&gt;"</span>+name+ <span class="string">"&lt;&gt;"</span> + pwd+<span class="string">"&lt;"</span>);</span><br><span class="line"><span class="comment">// 2.使用 mbuti1s连接到数据库当中</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JdbcUtil.getDataSource());</span><br><span class="line">String  sql = <span class="string">"select * from user where name=? and pwd=?"</span>;</span><br><span class="line"></span><br><span class="line">User user = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">user = qr.query(sql, <span class="keyword">new</span> BeanHandler&lt;User&gt;(User.class),name,pwd);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 3.检査用户名与密码是否正确</span></span><br><span class="line"><span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// 4.登录成功，显示用户所有信息</span></span><br><span class="line">response.getWriter().write(<span class="string">"login success:"</span>+name);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 5.登录失败给一个错误提示</span></span><br><span class="line">response.getWriter().write(<span class="string">"login fail"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/09/web-server-note-4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-Servlet</title>
      <link>https://aaronlinv.github.io/2020/02/07/web-server-note-3/</link>
      <guid>https://aaronlinv.github.io/2020/02/07/web-server-note-3/</guid>
      <pubDate>Fri, 07 Feb 2020 11:03:46 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;Servlet&quot;&gt;&lt;a href=&quot;#Servlet&quot; class=&quot;headerlink&quot; title=&quot;Servlet&quot;&gt;&lt;/a&gt;Servlet&lt;/h2&gt;&lt;p&gt;Servlet 运行在服务端的Java小程序，是sun公司提供一套规范（接口）&lt;/p&gt;
&lt;ol&gt;
&lt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><p>Servlet 运行在服务端的Java小程序，是sun公司提供一套规范（接口）</p><ol><li>servlet接收响应请求</li><li>filter过滤器</li><li>listener监听器</li></ol><p>用来处理客户端请求、响应给浏览器的动态资源<br>servlet的实质就是java代码，通过Java的API动态的向客户端输出内容<br>以后写的程序就不在是在本地执行了。而是编译成字节码，放到服务器上来去执行。<br>编写程序时， 不需要有main函数了。因为写完后，就把编写的程序编译成字节码，放到服务器上面。当前发送就一个请求的时候，服务器就会按照一定规则调用编写的代码</p><h2 id="Servlet快速入门"><a href="#Servlet快速入门" class="headerlink" title="Servlet快速入门"></a>Servlet快速入门</h2><ol><li>创建一个web工程</li><li>在JavaResource中src下创建一个包名称为com.myxq.servlet</li><li>在创建的servlet包当中创建一个class文件起名为FirstServlet</li><li>进入该class实现一个Servlet接口，实现它未实现的方法，在service方法中写入一句话输出</li><li>在web.xml当中进行配置<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 在display-name 标签后添加servlet 和 servlet-mapping配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myxq<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.it666.servlet.FirstServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myxq<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/firstServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.it666.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest req, ServletResponse res)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Hello Servlet"</span>);</span><br><span class="line">HttpServletResponse r = (HttpServletResponse) res;</span><br><span class="line">r.getWriter().write(<span class="string">"getWriter"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果<br><img src="/2020/02/07/web-server-note-3/1.png" alt="执行结果"></p><p>修改url路径<br><img src="/2020/02/07/web-server-note-3/2.png" alt="修改url路径"></p><h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><h4 id="类的加载时机"><a href="#类的加载时机" class="headerlink" title="类的加载时机"></a>类的加载时机</h4><p>当程序要使用某个类时，如果该类还未被加载到内存中，系统会通过加载，连接，初始化三步来实现对这个类进行初始化</p><ul><li>加载<br>就是指将class文件读入内存，并为之创建一个Class对象。任何类被使用时系统都会建立一个Class对象</li><li>连接<br>验证 是否有正确的内部结构，并和其他类协调一致<br>准备 负责为类的静态成员分配内存，并设置默认初始化值</li><li>初始化<br>初始化成员变量等等</li></ul><p>加载时机</p><ul><li>创建类的实例</li><li>访问类的静态变量，或者为静态变量赋值</li><li>调用类的静态方法</li><li>初始化某个类的子类</li><li>使用反射方式来强制创建某个类或接口对应的java.lang.Class对象</li></ul><h4 id="类加载器-classLoader"><a href="#类加载器-classLoader" class="headerlink" title="类加载器 classLoader"></a>类加载器 classLoader</h4><p>负责将.class文件加载到内存中，并为之生成对应的Class对象</p><p>类加载器分类</p><ul><li>根类加载器<br>也被称为引导类加载器，负责Java核心类的加载<br>比如System,String等。在JDK中JRE的lib目录下rt.jar文件中</li><li>扩展类加载器<br>负责JRE的扩展目录中jar包的加载<br>在JDK中JRE的lib目录下ext目录</li><li>系统类加载器<br>负责在JVM启动时加载来自java命令的class文件<br>以及classpath环境变量所指定的jar包和类路径</li></ul><h4 id="反射-1"><a href="#反射-1" class="headerlink" title="反射"></a>反射</h4><p>创建一个对象的三个阶段</p><ol><li>源文件阶段 .java的文件</li><li>字节码阶段 .class</li><li>创建对象阶段  new  对象名称</li></ol><p>内省与反射</p><ul><li>内省<br>在运行时能够获取JavaBean当中的属性名称和get与set方法</li><li>反射<br>JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的<strong>所有属性和方法</strong><br>对于任意一个对象，都能够调用它的任意一个方法和属性<br>这种<strong>动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制</strong></li></ul><p>获取字节码文件：想要使用反射，就必须得要获取字节码文件</p><ol><li>Object类的getClass()方法<br>判断两个对象是否是同一个字节码文件</li><li>静态属性class<br>当作静态方法的锁对象</li><li>Class类中静态方法forName()<br>读取配置文件</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取字节码</span></span><br><span class="line"><span class="comment">// 1.类的全限定名称 ClassNotFoundException</span></span><br><span class="line">Class clazz = Class.forName(<span class="string">"com.it666.reflect.Person"</span>);</span><br><span class="line"><span class="comment">// 2.</span></span><br><span class="line">Class clazz2 = Person.class;</span><br><span class="line"><span class="comment">// 3.</span></span><br><span class="line">Person p = <span class="keyword">new</span> Person();</span><br><span class="line">Class clazz3 = p.getClass();</span><br></pre></td></tr></table></figure><h4 id="通过字节码创建对象"><a href="#通过字节码创建对象" class="headerlink" title="通过字节码创建对象"></a>通过字节码创建对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.通过无参构造创建对象</span></span><br><span class="line">Person p2 = (Person)clazz.newInstance();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.通过有参构造创建对象</span></span><br><span class="line"><span class="comment">// 获取字节码的构造器：</span></span><br><span class="line"><span class="comment">// 因为在反射阶段操作的都是字节码，不知道具体的类型，只有在创建对象的时候才去给实际参数</span></span><br><span class="line">Constructor c = clazz.getConstructor(String.class, Integer.class);</span><br><span class="line"><span class="comment">// 通过构造器创建对象：调用构造器的newInstance方法并传入参数</span></span><br><span class="line">Person p2 = (Person)c.newInstance(<span class="string">"al"</span>,<span class="number">20</span>);</span><br></pre></td></tr></table></figure><h4 id="获取字段"><a href="#获取字段" class="headerlink" title="获取字段"></a>获取字段</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取pubic字段(默认修饰符是不可以的获取到的：NoSuchFieldException)</span></span><br><span class="line">Field f = clazz.getField(<span class="string">"name"</span>);</span><br><span class="line">f.set(p2,<span class="string">"李白"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取private 字段</span></span><br><span class="line">Field f2 = clazz.getDeclaredField(<span class="string">"age"</span>);</span><br><span class="line"><span class="comment">//private 去除私有权限</span></span><br><span class="line">f2.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">f2.set(p2, <span class="number">11</span>);</span><br></pre></td></tr></table></figure><h4 id="获取方法"><a href="#获取方法" class="headerlink" title="获取方法"></a>获取方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取方法</span></span><br><span class="line">Method m1 = clazz.getMethod(<span class="string">"show"</span>);</span><br><span class="line">System.out.println(m1.getName());<span class="comment">//获取名字 </span></span><br><span class="line">m1.invoke(p2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取私有方法</span></span><br><span class="line">Method m2 = clazz.getDeclaredMethod(<span class="string">"eat"</span>,String.class);</span><br><span class="line"><span class="comment">//去除私有权限</span></span><br><span class="line">m2.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">m2.invoke(p2, <span class="string">"米饭"</span>);</span><br></pre></td></tr></table></figure><h4 id="越过数组泛型检测"><a href="#越过数组泛型检测" class="headerlink" title="越过数组泛型检测"></a>越过数组泛型检测</h4><p>数组如果定义好了泛型就不能添加泛型以外的类型<br>可以通过反射来去实现添加以外的类型<br>在一个Integer泛型的数组当中添加字符串类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">list.add(<span class="number">20</span>);</span><br><span class="line"><span class="comment">// list.add("myxq");</span></span><br><span class="line"><span class="comment">// 错误检测是Eclipse做的，运行的时候会做一个泛型擦除，编译成字节码，泛型都没了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取ArrayList的字节码</span></span><br><span class="line">Class&lt;?&gt; clazz = Class.forName(<span class="string">"java.util.ArrayList"</span>); <span class="comment">// &lt;?&gt;  ?代表任意类型</span></span><br><span class="line">Method m = clazz.getMethod(<span class="string">"add"</span>,Object.class);</span><br><span class="line">m.invoke(list, <span class="string">"myxq"</span>); </span><br><span class="line">System.out.println(list); <span class="comment">// [20, myxq]</span></span><br></pre></td></tr></table></figure><h2 id="Tomcat反射加载Servlet"><a href="#Tomcat反射加载Servlet" class="headerlink" title="Tomcat反射加载Servlet"></a>Tomcat反射加载Servlet</h2><p>模拟实现过程<br>新建包com.it666.servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.创建接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.创建实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstServlet</span> <span class="keyword">implements</span> <span class="title">IServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"init..."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 3.复制web.xml文件，修改servlet-class标签为：com.it666.servlet.FirstServlet</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.测试类模拟Tomcat反射加载Servlet</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> DocumentException, ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException, SecurityException, IllegalArgumentException, InvocationTargetException </span>&#123;</span><br><span class="line"><span class="comment">//加载web.xml 使用dom4j</span></span><br><span class="line"><span class="comment">// 1.创建SAXReader</span></span><br><span class="line">SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">Document doc = reader.read(<span class="string">"src/web.xml"</span>); <span class="comment">// DocumentException</span></span><br><span class="line"><span class="comment">// 获取根元素</span></span><br><span class="line">Element rootElement = doc.getRootElement();</span><br><span class="line">System.out.println(rootElement);</span><br><span class="line"></span><br><span class="line">List &lt;Element&gt; list = rootElement.elements(<span class="string">"servlet"</span>);</span><br><span class="line"><span class="keyword">for</span> (Element ServEle : list) &#123;</span><br><span class="line">Element classEle = ServEle.element(<span class="string">"servlet-class"</span>);</span><br><span class="line">System.out.println(classEle.getText());</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">Class clazz = Class.forName(classEle.getText()); <span class="comment">// ClassNotFoundException</span></span><br><span class="line">Object obj = clazz.newInstance();<span class="comment">// InstantiationException</span></span><br><span class="line"></span><br><span class="line">Method m = clazz.getMethod(<span class="string">"init"</span>);<span class="comment">// NoSuchMethodException</span></span><br><span class="line">m.invoke(obj); <span class="comment">//IllegalArgumentException</span></span><br><span class="line"><span class="comment">// 输出：init...</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Servlet生命周期"><a href="#Servlet生命周期" class="headerlink" title="Servlet生命周期"></a>Servlet生命周期</h2><p>Servlet什么时候被创建</p><ol><li>默认情况下第一次访问的时候创建</li><li>可以通过配置文件设置服务器启动的时候就创建</li></ol><ul><li>init<br>servlet对象创建的时候调用<br>默认第一次访问时创建</li><li>service<br>每次请求都会执行一次</li><li>destroy<br>servlet对象销毁的时候执行<br>默认服务器关闭时销毁</li><li>load-on-startup标签<br>对象在服务器启动时就创建<br>值为数字代表优先级：数据越小，优先级越高，不能为负数<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--load-on-startup在web.xml的servlet标签中--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myxq<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.it666.servlet.FirstServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>3<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Servlet访问流程"><a href="#Servlet访问流程" class="headerlink" title="Servlet访问流程"></a>Servlet访问流程</h2><p>ServletRequest对象和ServletResponse对象是引擎提前创建好的<br>每次请求时调用service方法并把这两个对象传入<br><img src="/2020/02/07/web-server-note-3/3.png" alt="Servlet访问流程"></p><h2 id="Servlet配置信息"><a href="#Servlet配置信息" class="headerlink" title="Servlet配置信息"></a>Servlet配置信息</h2><p>init-params标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myxq<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.it666.servlet.FirstServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>3<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- init-params标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>my<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>1234<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// 1.获取web.xml的Servlet名称</span></span><br><span class="line">System.out.println(config.getServletName());<span class="comment">// 获取&lt;servlet-name&gt; 输出：myxq</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.获取一些初始化参数 web.xml</span></span><br><span class="line">String value = config.getInitParameter(<span class="string">"my"</span>);</span><br><span class="line">System.out.println(value);<span class="comment">// 输出：1234</span></span><br><span class="line"><span class="comment">// 3.获取ServletContext</span></span><br><span class="line">ServletContext sc = config.getServletContext();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>init方法的config参数<br>该servlert的配置信息<br>获得web.xml当中参数<br>初始化参数<br>获取servletContext对象</p><p>url-patten</p><ol><li>完全匹配</li><li>目录匹配</li><li>扩展名匹配<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myxq<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/firstServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/aaa/bbb/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.myxq<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>缺省Servlet<br>访问的资源不存在时，就会找缺省的地址</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">url-patten</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-patten</span>&gt;</span></span><br></pre></td></tr></table></figure><p>全局Web.xml<br>对于部署在服务器上的所有应用都有效<br>先到自己工程当中找web.xml配置<br>再到全局web.xml当中去找配置<br>如果两个当中有相同的配置，自己当中配置的内容会生效</p><p>静态资源加载过程<br>在path后面写的静态资源名称index.html或者是其它的.html它都是会找ur-patten当中有没有匹配的内容<br>如果有，就加载对应的servlet，如果没有就到自己配置当中找缺省的url-patten<br>如果自己配置文件当中没有缺省的，就会找全局配置缺省的url-patten<br>在全局配置当中有一个缺省的url-patten 对应的是default的Servlet<br>defaultServlet内部会到当前访问的工程根目录当中去找对应的名称的静态资源，如果有，就把里面的内容逐行读出。响应给浏览器，如果没有，就会报404错误</p><p>欢迎页面 Welcome-file-list<br>不写任何资源名称的时候，会访问欢迎页面<br>默认从上往下找</p><h2 id="使用注解创建Servlet"><a href="#使用注解创建Servlet" class="headerlink" title="使用注解创建Servlet"></a>使用注解创建Servlet</h2><p>包名右键-new-Servlet<br><img src="/2020/02/07/web-server-note-3/4.png" alt="new Servlet"><br><img src="/2020/02/07/web-server-note-3/5.png" alt="new Servlet2"><br><img src="/2020/02/07/web-server-note-3/6.png" alt="new Servlet3"></p><p>修改web.xml web-app标签中的 metadata-complete=”false”<br>该属性为true时，web应用将不会加载注解配置的Web组件</p><p>从Servlet3.0开始可以直接使用注解的形式来去使用Servlet<br>在创建好的Servlet上面有会有一个@WebServlet(“/myServlet”)<br>这个就是一个注解，就相当于在代码上添加了一个小插件<br>贴上这个注解后，就不用再去做配置文件，会在内部自动帮你去做<br>括号当中的内容就是url-patten的内容，要在地址栏当中path后面跟的内容</p><h2 id="HttpServlet"><a href="#HttpServlet" class="headerlink" title="HttpServlet"></a>HttpServlet</h2><p>直接new的Servlet它是一个HttpServlet<br>它是GenericServlet的子类<br>GenericServlet实现了Servlet接口<br>HttpServlet是专门负责处理http请求与响应的<br>以后创建Servlet时，直接使用httpServlet</p><h4 id="HttpServlet方法"><a href="#HttpServlet方法" class="headerlink" title="HttpServlet方法"></a>HttpServlet方法</h4><ul><li>service<br>每一次发送请求的时候就会调用<br>当写了service就会不再调用get或post</li><li>doGet<br>当发送get请求时调用</li><li>doPost<br>当发送post请求的时候调用</li></ul><h4 id="内部方法调用过程"><a href="#内部方法调用过程" class="headerlink" title="内部方法调用过程"></a>内部方法调用过程</h4><p>当接收到一个请求时， tomcat就会找对应的service方法<br>如果当中servlet当中没有存在service方法，就会到它的父类(HttpServlet)当中去找<br><img src="/2020/02/07/web-server-note-3/7.png" alt="HttpServlet"><br>在父类当中找到service是参数为ServletRequest，在会内部把参数转为httpServlet<br>转换完毕后会再继续调用参数为httpServletRequest的service方法<br><img src="/2020/02/07/web-server-note-3/8.png" alt="HttpServlet2"><br>在此方法当中会获取参数的类型，根据不同的参数类型再去调用不同的方法</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/07/web-server-note-3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-Tomcat服务器</title>
      <link>https://aaronlinv.github.io/2020/02/07/web-server-note-2/</link>
      <guid>https://aaronlinv.github.io/2020/02/07/web-server-note-2/</guid>
      <pubDate>Fri, 07 Feb 2020 05:25:32 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;Java分类&quot;&gt;&lt;a href=&quot;#Java分类&quot; class=&quot;headerlink&quot; title=&quot;Java分类&quot;&gt;&lt;/a&gt;Java分类&lt;/h2&gt;&lt;h4 id=&quot;JavaSE&quot;&gt;&lt;a href=&quot;#JavaSE&quot; class=&quot;headerlink&quot; titl
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Java分类"><a href="#Java分类" class="headerlink" title="Java分类"></a>Java分类</h2><h4 id="JavaSE"><a href="#JavaSE" class="headerlink" title="JavaSE"></a>JavaSE</h4><p>Java的标准版，一般用来开发桌面应用程序，但是在开发桌面应用程序上相对VB，Delphi，VC++并没有什么优势</p><h4 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h4><p>也就是Java Enterprise Edition，Java的企业版<br>开发JavaWeb应用程序，初级的一般是用JSP(Java Server Pages) + servlet + Javabean来开发的<br>大型的网站一般是使用框架来开发: struts , hibernate , spring , Mybatis</p><h4 id="JavaME"><a href="#JavaME" class="headerlink" title="JavaME"></a>JavaME</h4><p>JavaME,Java Micro Edition,Java的微型版<br>诺基亚手机上运行的Java程序就是指用这个版本开发的程序</p><h2 id="JavaEE规范"><a href="#JavaEE规范" class="headerlink" title="JavaEE规范"></a>JavaEE规范</h2><p>JavaEE的共有13个技术规范<br>Sun公司定义了这么多标准，其它公司的人都可以来去根据这些标准来做JavaEE程序</p><p>JDBC<br>java数据连接，是一种用于执行SQL语句的Java API</p><p>JNDI<br>Java命名和目录接口</p><p>EJB<br>EJB是sun的JavaEE服务器端组件模型，设计目标与核心应用是部署分布式应用程序</p><p>RMI<br>远程方法调用，能够让在某个java虚拟机上的对象调用本地对象一样的<br>调用另一个java虚拟机中高的对象上的方法</p><p>JSP<br>java服务器页面，是一个动态内容模板，实现了Html语法中的java扩展</p><p>Servlet<br>Servlet是一种小型的Java程序，它扩展了Web服务器的功能</p><p>XML<br>是一种可扩展的标记语言</p><p>JMS<br>是一个Java平台中关于面向消息中间件（MOM）的API<br>用于在两个应用程序之间，或分布式系统中发送消息，进行异步通信</p><p>Java IDL<br>Java IDL支持的是一个瞬间的CORBA对象，即在对象服务器处理过程中有效</p><p>JTS<br>子主题 1组件事务监视器，TPM 是一个程序，它代表应用程序协调分布式事务的执行</p><p>JTA<br>JTA允许应用程序执行分布式事务处理——在两个或多个网络计算机资源上访问并且更新数据</p><p>JavaMail<br>提供给开发者处理电子邮件相关的编程接口</p><p>JAF<br>JAF是一个专用的数据处理框架，它用于封装数据，并为应用程序提供访问和操作数据的接口</p><h2 id="常见JavaWeb应用服务器"><a href="#常见JavaWeb应用服务器" class="headerlink" title="常见JavaWeb应用服务器"></a>常见JavaWeb应用服务器</h2><p>weblogic<br>oracle公司的大型收费Web服务器 支持全部JavaEE规范</p><p>websphere<br>IBM公司的大型收费Web服务器 支持全部的JavaEE规范</p><p>Tomcat<br>Apache开源组织下的开源免费的中小型的Web应用服务器<br>支持JavaEE中的servlet和JSP规范</p><h2 id="Tomcat安装"><a href="#Tomcat安装" class="headerlink" title="Tomcat安装"></a>Tomcat安装</h2><p>企业老项目一般使用Tomcat7<br>解压到</p><h5 id="目录介绍"><a href="#目录介绍" class="headerlink" title="目录介绍"></a>目录介绍</h5><p>bin<br>脚本程序<br>可执行的命令</p><p>conf<br>配置目录<br>内部有一个server.xml核心配置文件</p><p>lib<br>依赖库目录 </p><p>logs<br>日志目录</p><p>temps<br>临时文件目录</p><p>webapps<br>web应用发布目录<br>把开发的项目放到该目录当中运行</p><p>work<br>tomcat处理jsp的工作目录</p><h4 id="启动Tomcat"><a href="#启动Tomcat" class="headerlink" title="启动Tomcat"></a>启动Tomcat</h4><ol><li>进入到解压目录</li><li>找到bin目录</li><li>找到startup.bat双击启动脚本</li></ol><ul><li>没有配置JAVA_HOME</li></ul><p>在启动过程当中如果没有配置Java_home，就会一闪没了<br>Java_HOME配置的就是JDK bin的上级目录</p><ul><li>端口冲突,默认的端口是8080(两种解决方法)</li></ul><p>把占用的端口杀死<br>netstat -aov  查看端口占用情况  记下占用端口的pid<br>到任务管理器当中查看任务详细信息，把对应pid给关掉</p><p>到config目录当中修改核心配置文件server.xml，修改por</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">redirectPort</span>=<span class="string">"8443"</span>/&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>通过浏览器访问：<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a><br>看到以下界面<br><img src="/2020/02/07/web-server-note-2/1.png" alt="Tomcat"><br>返回的就是一个页面<br>这个页面可以在webapps目录当中的ROOT文件夹当中找到</li><li>shutdown.bat停止脚本</li></ol><h2 id="手动创建项目"><a href="#手动创建项目" class="headerlink" title="手动创建项目"></a>手动创建项目</h2><ol><li>在webapps目录下，新建一个文件夹mytest</li><li>在mytest文件夹里放置html、jsp、js文件</li><li>在mytest内新建WEB-INF目录，在WEB-INF目录内新建：classes目录和lib目录、web.xml文件</li></ol><p>classes目录：Java类字节码文件<br>lib目录：Java类运行时需要的jar包<br>web.xml文件：当前整个web应用的核心配置文件，可以到ROOT当中复制一个过来<br><img src="/2020/02/07/web-server-note-2/2.png" alt="项目目录"></p><p>WEB-INF目录下当前的资源不能直接通过浏览器访问，是保护的， 外界不能直接访问</p><h2 id="使用开发工具构建web工程"><a href="#使用开发工具构建web工程" class="headerlink" title="使用开发工具构建web工程"></a>使用开发工具构建web工程</h2><h4 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h4><p>创建一个名为myproject的工程<br><img src="/2020/02/07/web-server-note-2/3.png" alt="创建项目"><br><img src="/2020/02/07/web-server-note-2/4.png" alt="选择Tomc目录"><br><img src="/2020/02/07/web-server-note-2/5.png" alt="选择web module版本"><br>3.0不会在WEB_INF 里生成xml文件</p><h4 id="切换JavaEE视图"><a href="#切换JavaEE视图" class="headerlink" title="切换JavaEE视图"></a>切换JavaEE视图</h4><p><img src="/2020/02/07/web-server-note-2/6.png" alt="切换JavaEE视图"></p><h4 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h4><p>在创建项目的时候已经添加好了服务器<br><img src="/2020/02/07/web-server-note-2/7.png" alt="服务器"></p><p>在Servers标签创建Server<br>右键-new-Server-选择对应Tomcat版本-下面Next-添加已有的项目-Finish<br>也可通过右键已创建的Server-Add and Remove-添加已有项目</p><p>双击Server，修改配置<br><img src="/2020/02/07/web-server-note-2/9.png" alt="修改Server配置"><br>设置目录，发布时候就会把WebContent和字节码部署到设置好的目录里（我设置的是D:\Tomcat\apache-tomcat-7.0.85\webapps）</p><h4 id="发布项目"><a href="#发布项目" class="headerlink" title="发布项目"></a>发布项目</h4><p>新建index.html文件<br><img src="/2020/02/07/web-server-note-2/8.png" alt="html网页"></p><p>右键项目-run Server 或者 是在Server右键-Start</p><ol><li>将未发布的工程，发布到webapps下面</li><li>启动tomcat（如果用startup.bat打开了Tomcat，要先关闭）</li></ol><p>在发布时<br>会在Tomcat的webapps目录下创建一个名称myproject的目录<br>并且把WebContent当中的所有内容放入到webapps目录下当中的myproject目录中<br>不会把写的Java代码给放到webapps当中，运行时，只需要字节码就行了</p><p>浏览器访问：<a href="http://localhost:8080/myproject/" target="_blank" rel="noopener">http://localhost:8080/myproject/</a><br>就可看到刚才写的index.html</p><h2 id="优化Tomcat启动速度"><a href="#优化Tomcat启动速度" class="headerlink" title="优化Tomcat启动速度"></a>优化Tomcat启动速度</h2><ol><li>删除webApps里面的自带的项目（保留ROOT，ROOT是默认访问的项目），加快启动速度</li><li>复制ROOT里面的xml的web-app标签，替换当前项目的web-app标签（原因是3.0才支持优化）<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">version</span>=<span class="string">"3.0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">metadata-complete</span>=<span class="string">"true"</span>&gt;</span></span><br></pre></td></tr></table></figure>添加上这个标签<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">absolute-ordering</span>&gt;</span><span class="tag">&lt;/<span class="name">absolute-ordering</span>&gt;</span> </span><br><span class="line">省略写法：<span class="tag">&lt;<span class="name">absolute-ordering</span>/&gt;</span></span><br></pre></td></tr></table></figure>扫描的jar包，里面为空，就是不扫描 提升速度<br>在ROOT的xml也添加这句</li></ol><p>新建工程就可以选3.0，把修改好的web.xml复制到WEB-INF里，修改下display-name标签内容</p><h2 id="Tomcat服务器Context"><a href="#Tomcat服务器Context" class="headerlink" title="Tomcat服务器Context"></a>Tomcat服务器Context</h2><p>添加工程就是在conf/server.xml 中添加Context标签，一个项目就是一个Context<br><img src="/2020/02/07/web-server-note-2/10.png" alt="Context"></p><p>docBase<br>web应用的文件路径，相对路径，相对的是Server设置的目录</p><p>path<br>URL入口（网页输入的地址）</p><p>reloadable<br>字节码变化服务器是否重新加载web应用</p><h4 id="tomcat服务器体系结构"><a href="#tomcat服务器体系结构" class="headerlink" title="tomcat服务器体系结构"></a>tomcat服务器体系结构</h4><ol><li>Server：整个Servlet容器组合，可以包含一个或多个Service标签</li><li>service：它由一个或者多个Connector组成，以及一个Engine，负责处理所有Connector所获得的客户请求</li><li>Connector：客户端与程序交互组件，负责接收请求以及向客户端返回响应</li><li>Engine：处理连接器接收到请求</li><li>Host：虚拟主机</li><li>Context：一个Context对应于一个Web Application</li></ol><p><img src="/2020/02/07/web-server-note-2/11.png" alt="服务器体系"></p><h4 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h4><ol><li>输入网址时， 就会先到host文件当中查找有没有对应的IP地址，如何有就直接访问该IP地址</li><li>如果没有，就会到外网去找DNS服务器进行域名与IP地址的解析，查找</li><li><strong>多个域名可以访问同一个IP</strong></li><li>一个IP对应一台电脑</li></ol><p><img src="/2020/02/07/web-server-note-2/12.png" alt="虚拟主机"></p><p>修改本机host文件(C:\Windows\System32\drivers\etc)<br>Win10不能直接修改，复制到桌面修改，然后覆盖host</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1          m.myxq.com</span><br></pre></td></tr></table></figure><p>原来的server.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">appBase</span>=<span class="string">"webapps"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span> <span class="attr">name</span>=<span class="string">"localhost"</span></span></span><br><span class="line"><span class="tag"><span class="attr">unpackWARs</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span></span></span><br><span class="line"><span class="tag"><span class="attr">directory</span>=<span class="string">"logs"</span> <span class="attr">pattern</span>=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span></span></span><br><span class="line"><span class="tag"><span class="attr">prefix</span>=<span class="string">"localhost_access_log."</span> <span class="attr">suffix</span>=<span class="string">".txt"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">docBase</span>=<span class="string">"myproject2"</span> <span class="attr">path</span>=<span class="string">"/myp2"</span></span></span><br><span class="line"><span class="tag"><span class="attr">reloadable</span>=<span class="string">"true"</span> <span class="attr">source</span>=<span class="string">"org.eclipse.jst.jee.server:myproject2"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">docBase</span>=<span class="string">"myproject"</span> <span class="attr">path</span>=<span class="string">"/myproject"</span></span></span><br><span class="line"><span class="tag"><span class="attr">reloadable</span>=<span class="string">"true"</span> <span class="attr">source</span>=<span class="string">"org.eclipse.jst.jee.server:myproject"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加虚拟主机：在Host标签后面再添加一个Host标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">appBase</span>=<span class="string">"webapps"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span> <span class="attr">name</span>=<span class="string">"m.myxq.com"</span></span></span><br><span class="line"><span class="tag"><span class="attr">unpackWARs</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">docBase</span>=<span class="string">"myproject"</span> <span class="attr">path</span>=<span class="string">"/myp2"</span></span></span><br><span class="line"><span class="tag"><span class="attr">reloadable</span>=<span class="string">"true"</span> <span class="attr">source</span>=<span class="string">"org.eclipse.jst.jee.server:myproject"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以在server.xml修改端口，浏览器默认访问80端口，这样就可以免输入端口<br>通过<a href="http://http://m.myxq.com/myp/" target="_blank" rel="noopener">http://http://m.myxq.com/myp/</a> 和<a href="http://localhost/myp/" target="_blank" rel="noopener">http://localhost/myp/</a> 访问的项目不同，不同域名映射到同一个IP</p><h2 id="Tomcat插件安装"><a href="#Tomcat插件安装" class="headerlink" title="Tomcat插件安装"></a>Tomcat插件安装</h2><ol><li><a href="https://jaist.dl.sourceforge.net/project/tomcatplugin/net.sf.eclipse.tomcat.updatesite-2018-03-08.zip" target="_blank" rel="noopener">下载插件</a></li><li>到Eclipse当中找到help-&gt;install new software</li><li>进入对话框，点击add然后弹出add Repository  选择下载的插件位置，name随便写,点击确定</li><li>在列表框中选中tomcat-plugin直接点击下一步</li><li>接受许可，然后等待，在eclipse右下角会有安装进度。进度完成时，会弹出要求重新启动eclipse</li></ol><p>配置插件与Tomcat关联<br>1.windon-&gt;preferences<br>2.找到tomcat<br>3.选择对应版本的服务器<br>4.找到tomcat服务器存放的根路径</p><p>Atl+t 重启服务器        </p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/07/web-server-note-2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Web服务器笔记-http协议</title>
      <link>https://aaronlinv.github.io/2020/02/05/web-server-note-1/</link>
      <guid>https://aaronlinv.github.io/2020/02/05/web-server-note-1/</guid>
      <pubDate>Wed, 05 Feb 2020 13:48:45 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;CS与BS&quot;&gt;&lt;a href=&quot;#CS与BS&quot; class=&quot;headerlink&quot; title=&quot;CS与BS&quot;&gt;&lt;/a&gt;CS与BS&lt;/h2&gt;&lt;p&gt;软件使用方式上两种划分&lt;/p&gt;
&lt;h4 id=&quot;C-S-Client-Server-PC客户端、服务器架构&quot;&gt;&lt;a 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="CS与BS"><a href="#CS与BS" class="headerlink" title="CS与BS"></a>CS与BS</h2><p>软件使用方式上两种划分</p><h4 id="C-S-Client-Server-PC客户端、服务器架构"><a href="#C-S-Client-Server-PC客户端、服务器架构" class="headerlink" title="C/S:Client/Server PC客户端、服务器架构"></a>C/S:Client/Server PC客户端、服务器架构</h4><p>特点：在服务器当中就主要是一个数据库，把所有的业务逻辑以及界面都交给客户端完成<br>优点：较为安全，用户界面丰富，用户体验好<br>缺点：每次升级都要重新安装，针对于不同的操作系统开发，可移植性差</p><h4 id="B-S：Browser-Server-浏览器-服务器架构"><a href="#B-S：Browser-Server-浏览器-服务器架构" class="headerlink" title="B/S：Browser/Server 浏览器/服务器架构"></a>B/S：Browser/Server 浏览器/服务器架构</h4><p>特点：</p><ul><li>基于浏览器访问的应用</li><li>把业务层交给服务器来完成，客户端仅仅做界面的渲染和数据的交换</li></ul><p>优点：只开发服务器端，可以跨平台、移植性很强<br>缺点：安全性比较低，用户体验较差</p><h2 id="Web资源"><a href="#Web资源" class="headerlink" title="Web资源"></a>Web资源</h2><p>WEB网页，它用于表示网络主机上供外界访问的资源<br>Web资源分类</p><ul><li>静态Web资源：指web页面中供人们浏览的数据始终是不变</li><li>动态Web资源：指web页面中供人们浏览的数据是由程序产生的，不同时间点访问web页面看到的内容各不相同</li></ul><p>web资源存放在哪里<br>所有的web资源都放在一个web服务器当中<br>web服务器就是可以供外界访问web资源的一个软件<br>web资源放到指定的目录当中，就可以通过对应的端口在浏览器当中访问到</p><p>URL地址<br>协议：//主机地址：端口号/资源地址<br><img src="/2020/02/05/web-server-note-1/1.png" alt="URL协议"><br>资源访问流程<br>客户端：浏览器、Android程序、iOS程序、微信小程序<br>服务器：php服务器、tomcat服务器、nodeJS服务器等</p><p>http请求的过程<br>浏览器通过网址（就是IP地址）找到对应的电脑，电脑当中安装的有web服务器，通过端口号找到对应服务器，服务器把页面返回给你</p><p>BS结构流程图<br><img src="/2020/02/05/web-server-note-1/2.png" alt="BS结构流程图"></p><h4 id="请求与响应"><a href="#请求与响应" class="headerlink" title="请求与响应"></a>请求与响应</h4><p>请求：把客户端请求发送给服务器<br>响应：服务器把你要的数据发送给客户端</p><p>请求与响应都要一定的格式</p><ul><li>约定好客户端以什么样的格式把数据给服务器</li><li>约定好服务器以什么样的格式把数据给客户端</li><li>这个约定使用的就是HTTP协议</li></ul><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><p>HTTP，超文本传输协议 (HyperText Transfer Protocol) 是互联网上应用最为广泛的一种网络协议<br>所有的WWW文件都必须遵守这个标准<br>设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法<br>约束请求与响应的规则</p><p>HTTP组成部分：请求、响应<br>请求与响应都是成对存在的</p><p>请求的发送方式</p><ol><li>通过浏览器的地址栏</li><li>通过html当中的form表单</li><li>通过a链接的href</li><li>src属性        </li></ol><h2 id="Http请求"><a href="#Http请求" class="headerlink" title="Http请求"></a>Http请求</h2><h4 id="1-请求行"><a href="#1-请求行" class="headerlink" title="1.请求行"></a>1.请求行</h4><p>请求方式<br>POST<br>GET</p><p>协议版本<br>HTTP/1.0，发送请求，创建一次连接，获得一个web资源，连接断开<br>HTTP/1.1，发送请求，创建一次连接，获得<strong>多个web资源，保持连接</strong></p><h4 id="2-请求头"><a href="#2-请求头" class="headerlink" title="2.请求头"></a>2.请求头</h4><p>请求头是客户端发送给服务器端的一些信息<br>使用键值对表示key：value<br>自动的把客户端的信息发送给服务器</p><h4 id="3-常见请求头"><a href="#3-常见请求头" class="headerlink" title="3.常见请求头"></a>3.常见请求头</h4><p>Referer：    浏览器通知服务器，当前请求来自何处。如果是直接访问，则不会有这个头。常用于：防盗链<br>If-Modified-Since：浏览器通知服务器，本地缓存的最后变更时间<br>Cookie：用于存放浏览器缓存的cookie信息<br>User-Agent：浏览器通知服务器，客户端浏览器与操作系统相关信息<br>Connection：保持连接状态。Keep-Alive 连接中，close 已关闭<br>Host：请求的服务器主机名<br>Content-Length：请求体的长度<br>Content-Type：如果是POST请求，会有这个头，默认值为application/x-www-form-urlencoded，表示请求体内容使用url编码</p><p>Accept：浏览器可支持的MIME类型，文件类型的一种描述方式</p><ul><li>text/html ，html文件</li><li>text/css，css文件</li><li>text/javascript，js文件</li><li>image/*，所有图片文件</li></ul><p>Accept-Encoding：浏览器通知服务器，浏览器支持的数据压缩格式。如：GZIP压缩<br>Accept-Language：浏览器通知服务器，浏览器支持的语言</p><h4 id="4-请求体"><a href="#4-请求体" class="headerlink" title="4.请求体"></a>4.请求体</h4><p>当请求方式是post，请求体会有请求的参数<br>如果请求方式为get，请求参数不会出现在请求体中，会拼接在url地址后面</p><p><img src="/2020/02/05/web-server-note-1/3.png" alt="http请求"></p><h2 id="Http响应"><a href="#Http响应" class="headerlink" title="Http响应"></a>Http响应</h2><h4 id="1-状态码"><a href="#1-状态码" class="headerlink" title="1.状态码"></a>1.状态码</h4><p>200 ：请求成功<br>302 ：请求重定向<br>304 ：请求资源没有改变，访问本地缓存<br>404 ：请求资源不存在，通常是用户路径编写错误，也可能是服务器资源已删除<br>500 ：服务器内部错误，通常程序抛异常</p><h4 id="2-响应头"><a href="#2-响应头" class="headerlink" title="2.响应头"></a>2.响应头</h4><p>服务器端将信息以键值对的形式返回给客户端<br>自动的把服务器端的信息传给客户端</p><h4 id="3-常见响应头"><a href="#3-常见响应头" class="headerlink" title="3.常见响应头"></a>3.常见响应头</h4><p>Location：指定响应的路径，需要与状态码302配合使用，完成跳转<br>Content-Type：响应正文的类型（MIME类型）<br>Content-Disposition：通过浏览器以下载方式解析正文<br>Set-Cookie：服务器向浏览器写入cookie<br>Content-Encoding：服务器使用的压缩格式<br>Content-length：响应正文的长度<br>Refresh：定时刷新<br>Server：服务器名称，默认值：Apache-Coyote/1.1。可以通过conf/server.xml配置进行修改<br>Last-Modified：服务器通知浏览器，文件的最后修改时间</p><h4 id="4-响应体"><a href="#4-响应体" class="headerlink" title="4.响应体"></a>4.响应体</h4><p>响应体是服务器回写给客户端的页面正文<br>浏览器将正文加载到内存<br>然后解析渲染显示页面内容</p><p><img src="/2020/02/05/web-server-note-1/4.png" alt="http响应"></p><h2 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h2><p>8种请求类型</p><ol><li>OPTIONS：返回服务器针对特定资源所支持的HTTP请求方法，也可以利用向web服务器发送‘*’的请求来测试服务器的功能性</li><li>HEAD：请求指定的页面信息，并返回头部信息</li><li>GET：请求指定的页面信息，并返回实体主体</li><li>POST：向指定资源提交数据进行处理请求</li><li>PUT：向指定资源位置上传其最新内容</li><li>DELETE：请求服务器删除Request-URL所标识的资源</li><li>TRACE：回显服务器收到的请求，主要用于测试或诊断</li><li>CONNECT：HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器</li></ol><h2 id="常用两种请求"><a href="#常用两种请求" class="headerlink" title="常用两种请求"></a>常用两种请求</h2><h4 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h4><p>GET 方法向页面请求发送参数<br>地址和参数信息中间用 ? 字符分隔<br>    <a href="http://www.it666.com/hello?key1=value1&amp;key2=value2" target="_blank" rel="noopener">http://www.it666.com/hello?key1=value1&amp;key2=value2</a><br>查询字符串会显示在地址栏的URL中，不安全，请不要使用GET请求提交敏感数据<br>GET 方法有大小限制：请求字符串中最多只能有 1024 个字符<br>GET请求能够被缓存<br>GET请求会保存在浏览器的浏览记录中<br>可以添加书签<br>编码类型为application/x-www-form-urlencoded<br>只允许ASCII字符类型，不能用二进制流<br>点击刷新时，不会有反应<br>GET请求主要用以获取数据</p><h4 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h4><p>POST 方法向页面请求发送参数<br>使用POST方法时，查询字符串在POST信息中单独存在，和HTTP请求一起发送到服务器<br>编码类型为：application/x-www-form-urlencoded or multipart/form-data. 请为二进制数据使用multipart编码<br>没有历史记录<br>参数类型没有限制，可以是字符串也可以是二进制流<br>数据不会显示在地址栏中，也不会缓存下来或保存在浏览记录中，所以看POST求情比GET请求安全，但也不是最安全的方式。如需要传送敏感数据，请使用加密方式传输<br>查询字符串不会显示在地址栏中<br>POST传输的数据量大，可以达到2M，而Get方法由于受到URL长度限制,只能传递大约1024字节.<br>POST就是为了将数据传送到服务器段，Get就是为了从服务器段取得数据</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005981003.htm" target="_blank" rel="noopener">Java零基础到高级JavaWeb与项目</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/05/web-server-note-1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Java练习-中文编程</title>
      <link>https://aaronlinv.github.io/2020/02/05/java-chinese-programing/</link>
      <guid>https://aaronlinv.github.io/2020/02/05/java-chinese-programing/</guid>
      <pubDate>Wed, 05 Feb 2020 13:47:28 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;请编写一个程序，制作一个简易的中文语言编译器，即使用中文语法进行编程，输入为逐行输入，每行为一个语句，一个语句代变一个操作，满足以下语法要求
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>请编写一个程序，制作一个简易的中文语言编译器，即使用中文语法进行编程，输入为逐行输入，每行为一个语句，一个语句代变一个操作，满足以下语法要求（括号内代变格式类型，具体参考样例）：</p><ul><li>变量定义：整数 （变量名） 等于 （数字）</li><li>运算（加法）：（变量名） 增加 （数字）</li><li>运算（减法）：（变量名） 减少 （数字）</li><li>输出：看看 （变量名） or 看看 “（字符串内容）”</li></ul><p>附加要求：<br>选择：如果 （判断语句） 则 （操作语句） 否则 （操作语句）<br>若否则后没有任何操作使用（无）来进行填充（参考样例2）。</p><h2 id="测试样例"><a href="#测试样例" class="headerlink" title="测试样例"></a>测试样例</h2><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">整数 气温 等于 十</span><br><span class="line">气温 减少 三</span><br><span class="line">气温 增加 二</span><br><span class="line">看看 气温</span><br><span class="line">如果 气温 大于 八 则 看看 “你好，世界” 否则 看看 “冻死我了”</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">九</span><br><span class="line">你好，世界</span><br></pre></td></tr></table></figure><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">整数 小杨年龄 等于 八</span><br><span class="line">整数 小杨零花钱 等于 二</span><br><span class="line">小杨年龄 增加 一</span><br><span class="line">如果 小杨年龄 大于 八 则 小杨零花钱 增加 一 否则 无</span><br><span class="line">看看 小杨零花钱</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">三</span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>需求分析</p><ul><li>整数变量定义、赋值</li><li>加减运算</li><li>输出变量或字符串</li><li>三目运算：如果 则 否则</li></ul><p>需要解决的问题</p><ul><li>字符串截取</li><li>字符串语义判断</li><li>异常处理</li><li>负数，多位数</li></ul><h2 id="遇到的一些坑"><a href="#遇到的一些坑" class="headerlink" title="遇到的一些坑"></a>遇到的一些坑</h2><ul><li>字符串split的时候左右边的空格会被加入到split返回的数组</li></ul><h2 id="功能实现情况"><a href="#功能实现情况" class="headerlink" title="功能实现情况"></a>功能实现情况</h2><ul><li>数字输入输出（支持中文习惯和机械式的转化）<ul><li>符合中国人习惯的输入输出，支持-999到999（例如：九百九十九、九百一、九百一十，九百零一，九百，九十，十九，十，零，负九百九十九）</li><li>机械式的转化（例如：一零零）支持的范围：-2147483647到2147483647</li><li>负零(效用等同于零)</li></ul></li><li>支持去除语句中多余的空格</li><li>变量定义：整数 钱包 等于 零<ul><li>支持定义多个变量</li></ul></li><li>运算操作：钱包 增加 十<ul><li>支持增加、减少、乘以、除以、模除</li></ul></li><li>输出：看看 钱包  、 看看 “字符串”<ul><li>支持输出字符串或者变量</li></ul></li><li>三目运算符：如果 钱包 大于 十 则 看看 “钱太多了” 否则 看看 “我穷死了”<ul><li>条件判断两边都可以是整数变量或者整数常量</li></ul></li><li>异常处理<ul><li>关键字不存在</li><li>运算时变量未定义</li><li>输出时变量未定义</li><li>除数不能为0</li><li>非法输入</li></ul></li></ul><p>GitHub仓库地址：<a href="https://github.com/aaronlinv/learn-programming" target="_blank" rel="noopener">learn-programming</a></p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p>主函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoMain</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">Utils.runMain(sc.nextLine());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Utils类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Utils</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String numWords = <span class="string">"零一二三四五六七八九十"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 运行语句并处理异常</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">runMain</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Utils.callFunction(str);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(e.getMessage());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 调用方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">callFunction</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">String[] split = str.trim().split(<span class="string">"\\s+"</span>);</span><br><span class="line">String keyword = split[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span> (keyword.equals(<span class="string">"无"</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (isManipulate(str) || isVar(keyword)) &#123;</span><br><span class="line">Utils.manipulateNum(str);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// isManipulate 已经判断了len == 1情况 不会越界</span></span><br><span class="line"><span class="keyword">switch</span> (keyword) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"整数"</span>:</span><br><span class="line"><span class="comment">// System.out.println(map.get("钱包"));// 不存在返回null</span></span><br><span class="line">Utils.assignInt(str);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"看看"</span>:</span><br><span class="line">Utils.printOut(str);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"如果"</span>:</span><br><span class="line">Utils.ternaryOperator(str);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"没有关键字："</span> + keyword + <span class="string">" 请使用关键字：整数、看看、如果"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  赋值整数变量</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">assignInt</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">String[] strArr = str.trim().split(<span class="string">"\\s+"</span>);</span><br><span class="line"><span class="comment">// 短路 所以不会越界</span></span><br><span class="line"><span class="keyword">if</span> (strArr.length != <span class="number">4</span> || !strArr[<span class="number">2</span>].equals(<span class="string">"等于"</span>)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"语法有错，请检查语法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setVar(strArr[<span class="number">1</span>], toNum(strArr[<span class="number">3</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 输出字符串或者变量</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printOut</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">String[] strArr = str.trim().split(<span class="string">"\\s+"</span>);</span><br><span class="line"><span class="keyword">if</span> (strArr.length != <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"语法有错，请检查语法"</span>);</span><br><span class="line">&#125;</span><br><span class="line">String printStr = strArr[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (printStr.contains(<span class="string">"“"</span>) &amp;&amp; printStr.contains(<span class="string">"”"</span>)) &#123;</span><br><span class="line">System.out.println(printStr.replace(<span class="string">"“"</span>, <span class="string">""</span>).replace(<span class="string">"”"</span>, <span class="string">""</span>)); <span class="comment">// 看看 “字符串”</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(toChStr(getVar(printStr)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 三目运算</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ternaryOperator</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 如果 钱包 大于 十 则 看看 “钱太多了” 否则 看看 “我穷死了”</span></span><br><span class="line"><span class="comment">// 先不考虑三目嵌套三目的情况</span></span><br><span class="line">String statement1 = <span class="keyword">null</span>;</span><br><span class="line">String statement2 = <span class="keyword">null</span>;</span><br><span class="line">String statement3 = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">statement1 = str.substring(<span class="number">0</span>, str.indexOf(<span class="string">"则"</span>)).replace(<span class="string">"如果"</span>, <span class="string">""</span>);</span><br><span class="line">statement2 = str.substring(str.indexOf(<span class="string">"则"</span>), str.indexOf(<span class="string">"否则"</span>)).replace(<span class="string">"则"</span>, <span class="string">""</span>);</span><br><span class="line">statement3 = str.substring(str.indexOf(<span class="string">"否则"</span>)).replace(<span class="string">"否则"</span>, <span class="string">""</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"语法有错，请检查语法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> judge = judgeOperator(statement1);</span><br><span class="line"><span class="comment">// System.out.println(judge);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (judge) &#123;</span><br><span class="line">callFunction(statement2);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">callFunction(statement3);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断语句，传入如果语句 例如：零 等于 零</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">judgeOperator</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">String[] strArr = str.trim().split(<span class="string">"\\s+"</span>);<span class="comment">// 不去除左右空格，空格会被加入到分割数组</span></span><br><span class="line"><span class="keyword">if</span> (strArr.length != <span class="number">3</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"语法有错，请检查语法"</span>);</span><br><span class="line">&#125;</span><br><span class="line">String leftStr = strArr[<span class="number">0</span>];</span><br><span class="line">String rightStr = strArr[<span class="number">2</span>];</span><br><span class="line">String middle = strArr[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> leftInt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> rightInt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果都不是变量，那么toNum来异常处理</span></span><br><span class="line"><span class="keyword">if</span> (isVar(leftStr)) &#123;</span><br><span class="line">leftInt = getVar(leftStr);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">leftInt = toNum(leftStr);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"变量："</span> + leftStr + <span class="string">" 未定义，请定义变量"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isVar(rightStr)) &#123;</span><br><span class="line">rightInt = getVar(rightStr);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">rightInt = toNum(rightStr);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"变量："</span> + rightStr + <span class="string">" 未定义，请定义变量"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (middle) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"等于"</span>:</span><br><span class="line"><span class="keyword">return</span> leftInt == rightInt;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"大于"</span>:</span><br><span class="line"><span class="keyword">return</span> leftInt &gt; rightInt;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"小于"</span>:</span><br><span class="line"><span class="keyword">return</span> leftInt &lt; rightInt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"没有关键字："</span> + middle + <span class="string">" 请使用关键字：大于、等于、小于"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 汉字单个转化为单个数字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">toSingleNum</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num = numWords.indexOf(str);</span><br><span class="line"><span class="keyword">if</span> (num == -<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"语法有错，请检查语法，字符转化错误"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> num;<span class="comment">// -1不存在</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单个数字转化为单个汉字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> num</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toSingleChStr</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (num &lt; <span class="number">0</span> || num &gt; <span class="number">10</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"语法有错，请检查语法，字符转化错误"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> numWords.substring(num, num + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 汉字转化为数字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">toNum</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;<span class="comment">// 负数标记</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">var</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span>[] arr = str.toCharArray();</span><br><span class="line"><span class="keyword">if</span> (arr[<span class="number">0</span>] == <span class="string">'负'</span>) &#123;</span><br><span class="line">str = str.replace(<span class="string">"负"</span>, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">flag = -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 数字机械式的转化</span></span><br><span class="line"><span class="keyword">if</span> (str.length() &gt; <span class="number">1</span> &amp;&amp; !str.contains(<span class="string">"百"</span>) &amp;&amp; !str.contains(<span class="string">"十"</span>)) &#123;</span><br><span class="line"><span class="keyword">char</span>[] chArr = str.toCharArray();</span><br><span class="line"><span class="keyword">int</span> temp = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = chArr.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">String s = <span class="string">""</span> + chArr[i];</span><br><span class="line"><span class="keyword">var</span> += temp * toSingleNum(s);</span><br><span class="line">temp *= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">var</span> * flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (str.contains(<span class="string">"百"</span>)) &#123;</span><br><span class="line"><span class="keyword">var</span> = <span class="number">100</span> * toSingleNum(str.substring(<span class="number">0</span>, str.indexOf(<span class="string">'百'</span>)));<span class="comment">// 百位</span></span><br><span class="line">str = str.substring(str.indexOf(<span class="string">'百'</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (str.contains(<span class="string">"零"</span>)) &#123;</span><br><span class="line"><span class="keyword">var</span> += toSingleNum(str.substring(str.indexOf(<span class="string">"零"</span>) + <span class="number">1</span>));<span class="comment">// 几百零几</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">var</span> * flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (str.length() == <span class="number">1</span> &amp;&amp; <span class="keyword">var</span> &gt;= <span class="number">100</span>) &#123; <span class="comment">// 判断var 不然十 可能会输出100</span></span><br><span class="line"><span class="keyword">var</span> += <span class="number">10</span> * toSingleNum(str); <span class="comment">// 几百几：九百九</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">var</span> * flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (str.contains(<span class="string">"十"</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span> (str.indexOf(<span class="string">'十'</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> += <span class="number">10</span>; <span class="comment">// 十几</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> += <span class="number">10</span> * toSingleNum(str.substring(<span class="number">0</span>, str.indexOf(<span class="string">'十'</span>)));<span class="comment">// 十</span></span><br><span class="line">str = str.substring(str.indexOf(<span class="string">'十'</span>) + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (str.length() != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> += toSingleNum(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">var</span> * flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// Java int Max ：2147483647 二一四七四八三六四七 Min：-2147483648</span></span><br><span class="line"><span class="comment">// System.out.println(toNum("负二一四七四八三六四八"));</span></span><br><span class="line">System.out.println(toNum(<span class="string">"负九九九"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数字转化为汉字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> num</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toChStr</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (num == -<span class="number">2147483648</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"超出支持的输入输出范围(-2147483647到2147483647)"</span>);</span><br><span class="line">&#125;</span><br><span class="line">String varStr = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (num &lt; <span class="number">0</span>) &#123;</span><br><span class="line">varStr += <span class="string">"负"</span>;</span><br><span class="line">num = num * -<span class="number">1</span>; <span class="comment">// 转化为正数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数字机械式的转化</span></span><br><span class="line"><span class="keyword">if</span> (num &gt; <span class="number">999</span>) &#123;</span><br><span class="line"><span class="comment">// 1234</span></span><br><span class="line"><span class="keyword">char</span>[] CharArr = Integer.toString(num).toCharArray();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">char</span> c : CharArr) &#123;</span><br><span class="line">String s = <span class="string">""</span> + c;</span><br><span class="line">varStr += toSingleChStr(Integer.parseInt(s));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> varStr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">0</span>) &#123; <span class="comment">// 零</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"零"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (num / <span class="number">10</span> == <span class="number">1</span>) &#123; <span class="comment">// 用十几 改变一十几的写法</span></span><br><span class="line">varStr += <span class="string">"十"</span>;</span><br><span class="line"><span class="keyword">if</span> (num % <span class="number">10</span> != <span class="number">0</span>) &#123;</span><br><span class="line">varStr += toSingleChStr(num % <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> varStr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (num / <span class="number">100</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">varStr += toSingleChStr(num / <span class="number">100</span>) + <span class="string">"百"</span>;</span><br><span class="line"><span class="keyword">if</span> (num % <span class="number">100</span> == <span class="number">0</span>) &#123;<span class="comment">// 几百</span></span><br><span class="line"><span class="keyword">return</span> varStr;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (num % <span class="number">100</span> &lt; <span class="number">10</span>) &#123; <span class="comment">// 几百零几</span></span><br><span class="line"><span class="keyword">return</span> varStr += <span class="string">"零"</span> + toSingleChStr(num % <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">num %= <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (num / <span class="number">10</span> != <span class="number">0</span>) &#123;</span><br><span class="line">varStr += toSingleChStr(num / <span class="number">10</span>) + <span class="string">"十"</span>;<span class="comment">// 十</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (num % <span class="number">10</span> != <span class="number">0</span>) &#123;</span><br><span class="line">varStr += toSingleChStr(num % <span class="number">10</span>); <span class="comment">// 几</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> varStr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 运算操作</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">manipulateNum</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">String[] strArray = str.trim().split(<span class="string">"\\s+"</span>);</span><br><span class="line"><span class="keyword">if</span> (strArray.length != <span class="number">3</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"语法有错，请检查语法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">String operator = strArray[<span class="number">1</span>];</span><br><span class="line">String varStr = strArray[<span class="number">0</span>];</span><br><span class="line">String numStr = strArray[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">var</span> = getVar(varStr);</span><br><span class="line"><span class="keyword">int</span> num = toNum(numStr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (operator) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"减少"</span>:</span><br><span class="line"><span class="keyword">var</span> -= num;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"增加"</span>:</span><br><span class="line"><span class="keyword">var</span> += num;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"乘以"</span>:</span><br><span class="line"><span class="keyword">var</span> *= num;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"除以"</span>:</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"除数不能等于零哦"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">var</span> /= num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"模除"</span>:</span><br><span class="line"><span class="keyword">var</span> %= num;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"没有关键字："</span> + operator + <span class="string">" 请使用关键字：增加、减少、乘以、除以、模除 "</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setVar(varStr, <span class="keyword">var</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断是否为运算操作语句</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isManipulate</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">String[] array = str.trim().split(<span class="string">"\\s+"</span>);</span><br><span class="line"></span><br><span class="line">String[] keywords = &#123; <span class="string">"增加"</span>, <span class="string">"减少"</span>, <span class="string">"乘以"</span>, <span class="string">"除以"</span>, <span class="string">"模除"</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面会用到array[1]</span></span><br><span class="line"><span class="keyword">if</span> (array.length == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"语法有错，请检查语法"</span>);</span><br><span class="line">&#125;</span><br><span class="line">String symbol = array[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (String s : keywords) &#123;</span><br><span class="line"><span class="keyword">if</span> (symbol.equals(s)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSymbol</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(isManipulate(<span class="string">"钱包 模除  十"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从Map中获取变量，不存在抛出异常</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> str 需要获取数据的变量名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getVar</span><span class="params">(String varStr)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (isVar(varStr)) &#123;</span><br><span class="line"><span class="keyword">return</span> map.get(varStr);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> DemoException(<span class="string">"变量："</span> + varStr + <span class="string">" 未定义，请定义变量"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 存入变量到map中</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> varStr 键</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> var 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setVar</span><span class="params">(String varStr, <span class="keyword">int</span> <span class="keyword">var</span>)</span> </span>&#123;</span><br><span class="line">map.put(varStr, <span class="keyword">var</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断是否为已存在的变量</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> varStr 键</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isVar</span><span class="params">(String varStr)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> map.get(varStr) != <span class="keyword">null</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Exception类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> Demo1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DemoException</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DemoException</span><span class="params">(String message, Throwable cause, <span class="keyword">boolean</span> enableSuppression, <span class="keyword">boolean</span> writableStackTrace)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(message, cause, enableSuppression, writableStackTrace);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DemoException</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(message, cause);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DemoException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DemoException</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(cause);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>代码有三个类</p><ul><li>DemoMain 存放主函数（处理传入的字符串，分割成行）</li><li>Utils 字符处理的工具类 </li><li>DemoException （Demo的异常处理）</li></ul><p>Utils类</p><ul><li>callFunction 传入一行字符串，判断逻辑关键字并调用对应的方法</li><li>assignInt 整数赋值</li><li>printOut 输出字符串或者整数</li><li>ternaryOperator 三目操作</li><li>judgeOperator 判断语句（举例：零 等于 零）</li><li>toNum 把中文数字转化为数字</li><li>toChStr 把数字转化为中文数字</li><li>manipulateNum 增减运算</li><li>toSingleNum 单个数字转化为单个汉字</li><li>toSingleChStr 单个汉字转化为单个数字</li><li>isManipulate 判断是否为运算操作语句</li><li>getVar从Map中获取变量，不存在抛出异常</li></ul><p>主要是根据功能的不同来分类，对于一些经被其他方法调用到的方法就单独抽取出来如：toNum()和toChStr()和judgeOperator()</p><p>把toNum()和toChStr()划分出来有利于代码的迭代更新，目前仅实现了一位数字的运算，通过修改这两个方法就可以实现负数和多位数字的运算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String numWords = <span class="string">"零一二三四五六七八九十"</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">toNum</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> numWords.indexOf(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toChStr</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> numWords.substring(num,num+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/05/java-chinese-programing/#disqus_thread</comments>
    </item>
    
    <item>
      <title>JDBC笔记-DBUtils</title>
      <link>https://aaronlinv.github.io/2020/02/04/jdbc-note-5/</link>
      <guid>https://aaronlinv.github.io/2020/02/04/jdbc-note-5/</guid>
      <pubDate>Tue, 04 Feb 2020 07:32:02 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;DBUtils&quot;&gt;&lt;a href=&quot;#DBUtils&quot; class=&quot;headerlink&quot; title=&quot;DBUtils&quot;&gt;&lt;/a&gt;DBUtils&lt;/h2&gt;&lt;p&gt;Apache公司编写的数据库操作实用的工具，小巧，简单，实用&lt;br&gt;封装了对JDBC的操作，简化了J
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="DBUtils"><a href="#DBUtils" class="headerlink" title="DBUtils"></a>DBUtils</h2><p>Apache公司编写的数据库操作实用的工具，小巧，简单，实用<br>封装了对JDBC的操作，简化了JDBC操作</p><h4 id="QueryRunner"><a href="#QueryRunner" class="headerlink" title="QueryRunner"></a>QueryRunner</h4><ul><li>QueryRunner(DataSource ds) 提供数据源连接池，会自动帮你创建连接</li><li>Update(String sql,Object…obj) 执行更新数据</li><li>query(String sql, ResultSetHandler<T> rsh,Object…params) 执行查询</T></li></ul><h4 id="ResultHandler"><a href="#ResultHandler" class="headerlink" title="ResultHandler"></a>ResultHandler</h4><ul><li>query(sql, new BeanHandler<Student>(Student.class), params) 把查询的结果封装成一个指定对象</Student></li><li>query(sql, new BeanListHandler<Student>(Student.class) 把查询结果封装成一个指定对象集合</Student></li><li>qr.query(sql, new ScalarHandler()) 查询单个值，返回为一个Long类型</li><li>qr.query(sql, new MapListHandler()) 把查询的结果封装成一个Map集合</li><li>query(sql, new ColumnListHandler(“列名”)) 查询指定的列</li></ul><h2 id="使用DBUtils"><a href="#使用DBUtils" class="headerlink" title="使用DBUtils"></a>使用DBUtils</h2><ol><li>导入jar包，build path</li></ol><p>commons-dbutils-1.4.jar<br>druid-1.0.15.jar<br>mysql-connector-java-5.1.40-bin.jar</p><ol start="2"><li>在JDBCUtil中提供一个获取DataSource的方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package com.it666.jdbc.util;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> DataSource ds = <span class="keyword">null</span>; </span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">FileInputStream in;</span><br><span class="line">in = <span class="keyword">new</span> FileInputStream(<span class="string">"resource/db.properties"</span>);</span><br><span class="line">p.load(in);</span><br><span class="line"></span><br><span class="line">ds = DruidDataSourceFactory.createDataSource(p);<span class="comment">// 这样写的ProPerties必须按照条件写</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ds;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在DAO实现类的方法中创建QueryRunner对象，DML使用update方法执行，DQL使用query方法执行</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package com.it666.jdbc.dao.impl;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDaoImpl</span> <span class="keyword">implements</span> <span class="title">IStudentDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Student stu)</span> </span>&#123;</span><br><span class="line">String sql = <span class="string">"insert into stu(name,age) values (?,?)"</span>;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">qr.update(sql,stu.getName(),stu.getAge());</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Student <span class="title">get</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line">String sql = <span class="string">"select * from stu where id = ?"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> qr.query(sql, <span class="keyword">new</span> BeanHandler&lt;Student&gt;(Student.class),id);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">getAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtil.getDataSource());</span><br><span class="line">String sql = <span class="string">"select * from stu"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Student&gt;(Student.class));</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目结构<br><img src="/2020/02/04/jdbc-note-5/1.png" alt="DBUtils项目结构"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005977005.htm" target="_blank" rel="noopener">Java零基础到高级JDBC连接数据库</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/04/jdbc-note-5/#disqus_thread</comments>
    </item>
    
    <item>
      <title>JDBC笔记-改进</title>
      <link>https://aaronlinv.github.io/2020/02/04/jdbc-note-4/</link>
      <guid>https://aaronlinv.github.io/2020/02/04/jdbc-note-4/</guid>
      <pubDate>Tue, 04 Feb 2020 03:40:49 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;重构DAO&quot;&gt;&lt;a href=&quot;#重构DAO&quot; class=&quot;headerlink&quot; title=&quot;重构DAO&quot;&gt;&lt;/a&gt;重构DAO&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2020/02/04/jdbc-note-4/1.png&quot; alt=&quot;重构代码&quot;&gt;&lt;/p&gt;
&lt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="重构DAO"><a href="#重构DAO" class="headerlink" title="重构DAO"></a>重构DAO</h2><p><img src="/2020/02/04/jdbc-note-4/1.png" alt="重构代码"></p><p>重构代码原则</p><ul><li>同一个类中<br>在一个类当中有多个方法当中有太多相同的代码<br>不同的地方通过参数传递进去<br>把它们抽到一个方法当中</li><li>不同类中<br>不同类当中有共同的代码给抽取到一个新类当中。<br>大家同时共享该类中的内容</li></ul><h2 id="抽取DML方法"><a href="#抽取DML方法" class="headerlink" title="抽取DML方法"></a>抽取DML方法</h2><ol><li>设计一个方法</li><li>要求传入两个参数<br>第一个参数sql语句模板<br>第二个参数为可变参数，设置语句参数值</li><li>返回值<br>返回值为int，受影响的行数</li></ol><p>抽取代码</p><ol><li>用可变参数（可变参数要放在参数的最后一个，可变参数本质是数组<br>）</li><li>在com.it666.jdbc.util中新建一个CRUDTemplate类<br><img src="/2020/02/04/jdbc-note-4/2.png" alt="抽取代码"><br>调用代码<br><img src="/2020/02/04/jdbc-note-4/3.png" alt="调用代码"></li></ol><h2 id="抽取DQL"><a href="#抽取DQL" class="headerlink" title="抽取DQL"></a>抽取DQL</h2><p>抽取代码前<br><img src="/2020/02/04/jdbc-note-4/4.png" alt="抽取代码"><br>抽取代码，也是写在com.it666.jdbc.util中的CRUDTemplate类中<br><img src="/2020/02/04/jdbc-note-4/5.png" alt="调用代码"></p><h2 id="用结果集处理器改进DQL"><a href="#用结果集处理器改进DQL" class="headerlink" title="用结果集处理器改进DQL"></a>用结果集处理器改进DQL</h2><p>每一个都封装成了student对象，这写死了，只能查询学生，使用泛型改进<br>不知道封装成什么类型的对象，就不应该处理结果集</p><p>解决办法</p><ul><li>把处理结果集的行为交给每个DAO</li><li>为了规范每个DAO的处理结果集，大家都叫同样的名字，这样在模板中就可以调用同一个名称</li><li>定义一个处理结果集的接口</li></ul><ol><li>定义一个接口</li></ol><p>声明一个处理结果集方法 com.it666.jdbc.handler中的IResultSetHandler<br><img src="/2020/02/04/jdbc-note-4/6.png" alt="定义接口"><br>2. 在具体DAO当中实现接口</p><p>实现处理结果集方法 com.it666.jdbc.handler中的StudentResHandleImp<br><img src="/2020/02/04/jdbc-note-4/7.png" alt="实现接口"></p><ol start="3"><li>创建一个接口实现对象传给查询方法</li></ol><p>com.it666.jdbc.dao.impl中的StudentDaoImpl<br><img src="/2020/02/04/jdbc-note-4/8.png" alt="传递接口"></p><ol start="4"><li>在查询方法当中调用处理结果集方法</li></ol><p>com.it666.jdbc.util中的CRUDTemplate<br><img src="/2020/02/04/jdbc-note-4/9.png" alt="调用结果集"></p><p>项目结构<br><img src="/2020/02/04/jdbc-note-4/11.png" alt="调用结果集"></p><p>总流程<br><img src="/2020/02/04/jdbc-note-4/10.png" alt="调用结果集"></p><h2 id="用泛型改进结果集处理器"><a href="#用泛型改进结果集处理器" class="headerlink" title="用泛型改进结果集处理器"></a>用泛型改进结果集处理器</h2><ol><li>直接定义为T</li></ol><p>处理所有结果集都必须得要返回List<br>有的时候没有必要返回List,想要查询的仅仅是一个结果整数，此时还必须得要从List当中出来</p><ol start="2"><li>由调用者自己来决定返回什么内容</li></ol><p>统一规定返回类型为T类型，调用者使用时去决定是什么类型<br><img src="/2020/02/04/jdbc-note-4/12.png" alt="定义接口"></p><ol start="3"><li>实现类当中实现接口时，要指定返回什么类型<br><img src="/2020/02/04/jdbc-note-4/13.png" alt="实现类"></li></ol><p>4.声明方法时，声明返回值为一个泛型类型，具体是什么类型，有参数来指定</p><p>在方法的参数中标识泛型 必须在方法名前加<T> T 不然报错<br><img src="/2020/02/04/jdbc-note-4/14.png" alt="声明方法"></T></p><p>总体结构<br><img src="/2020/02/04/jdbc-note-4/15.png" alt></p><p>例子：添加获取总人数方法<br><img src="/2020/02/04/jdbc-note-4/16.png" alt></p><h2 id="结构集处理器"><a href="#结构集处理器" class="headerlink" title="结构集处理器"></a>结构集处理器</h2><p>存在的问题<br>该类只能将结果集中的一行数据封装成一个Student对象<br>我们如果有多个domain，就得提供多个结果集处理器</p><p>自动的把一行行数据封装成对象，自动设置属性，结果集处理器，处理不同表时，干的事都一样<br>1.给我一个要封装的类<br>2.自动设置属性</p><p>规定<br>1.表中的列名必须和对象中的属性名相同<br>2.规定表中的类型必须和Java中的类型匹配<br>想要完成此项工作，就要使用内省机制</p><h4 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h4><p>1.创建一个类实现结果集处理器<br>    实现的时候也不知道是什么类型，所以也可以指定为一个泛型<br>2.提供一个字段，表示要封装成对象的类型<br>3.提供一个构造器，在创建时，就指定是什么类型<br>4.在实现方法当中，通过内省机制获取所有属性名称，做为列名<br>5.通过传入的类字节码创建对象<br>6.通过内省获取字节码中所有的信息<br>7.获取所有的属性描述器<br>8.遍历属性描述器，获取对象的属性名称 ，规定的属性名和列名相同<br>9.通过列名获取结果集中的值<br>10.调用属性的set方法把属性的值设置进去</p><h2 id="内省"><a href="#内省" class="headerlink" title="内省"></a>内省</h2><p>Class类型</p><ul><li>字节码类型</li><li>所有的字节码把他们当做一个群体类型</li><li>通过字节码创建对象<br>Student stu = Student.class.newInstance();</li></ul><h4 id="内省-1"><a href="#内省-1" class="headerlink" title="内省"></a>内省</h4><p>内省 (Introspector类)<br>用于查看和操作JavaBean中的属性</p><p>Introspector.getBeanInfo(A.class,B.class);</p><ul><li>获取指定类当中的字节码属性信息</li><li>获取A类及A类父类当中的属性，但是不包括指定的类</li><li>返回值BeanInfo</li></ul><p>BeanInfo</p><ul><li>getPropertyDescriptors()</li></ul><p>获取JavaBean中的属性描述器<br>返回的是一个数组（PropertyDescriptor[]）<br>每一个属性都有描述器<br>JavaBean中有多个属性，所以返回了一个数组</p><ul><li>获取属性名<br>pd.getName();</li><li>获取get方法<br>pd.getReadMethod();</li><li>获取set方法<br>pd.getWriteMethod</li><li>动态调用方法<br>方法名.invoke(对象名称,”值”)<h2 id="内省改进结果集处理器"><a href="#内省改进结果集处理器" class="headerlink" title="内省改进结果集处理器"></a>内省改进结果集处理器</h2></li></ul><p>注意属性必须和数据字段名相同</p><p>封装一个对象的通用结果集处理器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package com.it666.jdbc.handler;</span></span><br><span class="line"><span class="comment">// BeanHandler 封装一个对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanHandler</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">IResultSetHandler</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Class&lt;T&gt; classType;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BeanHandler</span><span class="params">(Class&lt;T&gt; classType)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.classType = classType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">handle</span><span class="params">(ResultSet rs)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line"><span class="comment">// 创建一个对象</span></span><br><span class="line">T obj = <span class="keyword">this</span>.classType.newInstance();</span><br><span class="line"><span class="comment">// 通过内省来拿属性</span></span><br><span class="line">BeanInfo bf = Introspector.getBeanInfo(classType,Object.class);<span class="comment">//Object.class代表不要获取Object，获取到Object就停止</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 获取所有描述器</span></span><br><span class="line">PropertyDescriptor[] pds = bf.getPropertyDescriptors();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (PropertyDescriptor pd : pds) &#123;</span><br><span class="line"><span class="comment">// 根据属性名去数据库里取值</span></span><br><span class="line">                Object val = rs.getObject(pd.getName());</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 给创建的对象设置属性值</span></span><br><span class="line">pd.getWriteMethod().invoke(obj, val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用通用结果集处理器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Student <span class="title">get</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;  </span><br><span class="line">    String sql = <span class="string">"select * from stu where id = ?"</span>;</span><br><span class="line">    <span class="comment">// 传入new BeanHandler&lt;Student&gt;(Student.class)</span></span><br><span class="line">    <span class="comment">// Student.class代表需要封装一个Student类型</span></span><br><span class="line">    <span class="comment">// &lt;Student&gt;代表返回值为Student类型</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  CRUDTemplate.executeQuery(sql,<span class="keyword">new</span> BeanHandler&lt;Student&gt;(Student.class) ,id);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>封装多个对象的通用结果集处理器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package com.it666.jdbc.handler;</span></span><br><span class="line"><span class="comment">// BeanListHandler 封装多条信息的结果集处理器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanListHandler</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">IResultSetHandler</span>&lt;<span class="title">List</span>&lt;<span class="title">T</span>&gt;&gt; </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Class&lt;T&gt; classType;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BeanListHandler</span><span class="params">(Class&lt;T&gt; classType)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.classType = classType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">handle</span><span class="params">(ResultSet rs)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">List&lt;T&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">T obj = classType.newInstance();</span><br><span class="line">BeanInfo bf = Introspector.getBeanInfo(<span class="keyword">this</span>.classType,Object.class);</span><br><span class="line">PropertyDescriptor [] pds = bf.getPropertyDescriptors();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (PropertyDescriptor pd : pds) &#123;</span><br><span class="line">Object val = rs.getObject(pd.getName());</span><br><span class="line">pd.getWriteMethod().invoke(obj, val);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">list.add(obj);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用通用结果集处理器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">getAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String sql = <span class="string">"select * from stu"</span>;</span><br><span class="line">    <span class="keyword">return</span> CRUDTemplate.executeQuery(sql,<span class="keyword">new</span> BeanListHandler&lt;Student&gt;(Student.class));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>工程结构<br><img src="/2020/02/04/jdbc-note-4/17.png" alt="内省工程结构"></p><h2 id="整体重构思路"><a href="#整体重构思路" class="headerlink" title="整体重构思路"></a>整体重构思路</h2><ol><li>写DAO接口，在实现类中现实各种方法save(),delete(),updata(),get(),getAll();<br><img src="/2020/02/04/jdbc-note-4/18.png" alt="原始代码"></li></ol><ul><li>声明静态变量：驱动名称、url、用户名、密码</li><li>静态代码块加载驱动</li><li>JDBCUtil提供获取Connection对象和关闭资源的方法</li><li>预编译语句对象，解决拼接sql语句太麻烦的问题</li></ul><ol start="2"><li>用连接池和配置文件改进，创建CRUDTemplate类，DML使用executeUpdate方法，DQL使用executeQuery方法</li></ol><p><img src="/2020/02/04/jdbc-note-4/19.png" alt="重构1"></p><ol start="3"><li>结果集处理器改进</li></ol><p>在实现类StudentDaoImpl中添加class StudentResHandleImp implements IResultSetHandler</p><p><img src="/2020/02/04/jdbc-note-4/20.png" alt="重构2"></p><ol start="4"><li>用泛型改进结果集处理器<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IResultSetHandler</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"><span class="function">T <span class="title">handle</span> <span class="params">(ResultSet rs)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接口实现类</span></span><br><span class="line"><span class="comment">// package com.it666.jdbc.dao.impl;</span></span><br><span class="line"><span class="comment">// 获取对象List的结果集处理器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentResHandleImp</span> <span class="keyword">implements</span> <span class="title">IResultSetHandler</span>&lt;<span class="title">List</span>&lt;<span class="title">Student</span>&gt;&gt;</span>&#123; &#125;</span><br><span class="line"><span class="comment">// 获取一个Integer的结果集处理器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StuCountResultSetImpl</span> <span class="keyword">implements</span> <span class="title">IResultSetHandler</span>&lt;<span class="title">Integer</span>&gt;</span>&#123; &#125;</span><br></pre></td></tr></table></figure></li></ol><p><img src="/2020/02/04/jdbc-note-4/21.png" alt="重构3"></p><ol start="5"><li>用内省改进<br>针对DQL，对get()和getAll()的改进代码不同<br><img src="/2020/02/04/jdbc-note-4/22.png" alt="重构4"></li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005977005.htm" target="_blank" rel="noopener">Java零基础到高级JDBC连接数据库</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/04/jdbc-note-4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>JDBC笔记-连接池</title>
      <link>https://aaronlinv.github.io/2020/02/03/jdbc-note-3/</link>
      <guid>https://aaronlinv.github.io/2020/02/03/jdbc-note-3/</guid>
      <pubDate>Mon, 03 Feb 2020 07:55:04 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;存储过程&quot;&gt;&lt;a href=&quot;#存储过程&quot; class=&quot;headerlink&quot; title=&quot;存储过程&quot;&gt;&lt;/a&gt;存储过程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在数据库当中定义一个存储过程&lt;br&gt;&lt;img src=&quot;/2020/02/03/jdbc-note-3/1.pn
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h2><ol><li>在数据库当中定义一个存储过程<br><img src="/2020/02/03/jdbc-note-3/1.png" alt="定义存储过程"></li><li>JDBC调用一个参数的存储过程<br><img src="/2020/02/03/jdbc-note-3/2.png" alt="jdbc执行存储过程"></li><li>编写输入参数和输出参数的存储过程<br><img src="/2020/02/03/jdbc-note-3/3.png" alt="2定义存储过程"></li><li>JDBC调用二个参数的存储过程<br><img src="/2020/02/03/jdbc-note-3/4.png" alt="2jdbc执行存储过程"></li></ol><h2 id="事物"><a href="#事物" class="headerlink" title="事物"></a>事物</h2><p>模拟zs与ls进行转账<br>1.检查zs账户余额<br>2.减少zs账户1000<br>3.增加ls账户1000<br><img src="/2020/02/03/jdbc-note-3/5.png" alt="模拟转账"></p><h4 id="处理事务过程"><a href="#处理事务过程" class="headerlink" title="处理事务过程"></a>处理事务过程</h4><ol><li>关闭自动提交 conn.setAutoCommit(false);</li><li>没有问题时，提交事务 conn.commit();</li><li>出现异常时，进行回滚操作 conn.rollback()</li></ol><p><img src="/2020/02/03/jdbc-note-3/6.png" alt="模拟转账事物"></p><p>回滚之后，事务结束，释放资源<br>出现异常，没有提交，也不会更新数据库，但是会占用资源，所以要出现异常时，进行回滚操作<br>只有增、删、改才需要事务，查询不需要事务</p><p>如果代码是正确的，测试也成功，但是数据库当中的数据不变，可能是事务没有提交</p><p>InnoDB才支持外键和事务。MyISAM不支持外键和事务<br>设置事务的隔离级别 conn.setTransactionIsolation(Connection.TRANSACTION_REPATABLE_READ)</p><h2 id="批处理"><a href="#批处理" class="headerlink" title="批处理"></a>批处理</h2><p>一次性执行多条Sql语句，允许多条语句一次性提交给数据库批量处理，比单独提交处理要效率高</p><p>批处理方法</p><ul><li>addBatch(String) 添加需要批处理的sql语句</li><li>executeBatch() 最后执批处理</li></ul><p>MySQL默认情况下是不支持批处理的，从5.1.13开始，添加了一个rewriteBatchedStatement参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String url = <span class="string">"jdbc:mysql://localhost:3306/jdbc_db?rewriteBatchedStatements=true"</span>;</span><br></pre></td></tr></table></figure><p><img src="/2020/02/03/jdbc-note-3/7.png" alt="批处理"></p><h2 id="存储图片"><a href="#存储图片" class="headerlink" title="存储图片"></a>存储图片</h2><p>数据库当中的BLOB：以二进制流的形式存储图片、音频、视频等多媒体信息</p><p>真正开发中，不会把二进制的文件存放在数据库当中<br>而是把文件存储的路径保存在数据库当中，以后再取出路径，到该路径下读取信息</p><p>BLOB类型</p><ul><li>TINYBLOB (255个字节)</li><li>BLOB (65535字节)</li><li>MEDIUMBLOB (16M)</li><li>LONGBLOB(4G)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlobTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//写入图片</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">()</span> <span class="keyword">throws</span> Exception, SQLException </span>&#123;</span><br><span class="line">Connection conn = JDBCUtil.getConn();</span><br><span class="line">String sql = <span class="string">"insert into student (img) values (?)"</span>;</span><br><span class="line"></span><br><span class="line">PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取文件转换成二进制</span></span><br><span class="line">ps.setBlob(<span class="number">1</span>, <span class="keyword">new</span> FileInputStream(<span class="string">"d:/test.jpg"</span>));</span><br><span class="line">ps.executeUpdate();</span><br><span class="line"></span><br><span class="line">JDBCUtil.close(conn, ps, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取数据库图片</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">Connection conn = JDBCUtil.getConn();</span><br><span class="line"></span><br><span class="line">String sql = <span class="string">"select * from student where id=?"</span>;</span><br><span class="line">PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class="line">ps.setInt(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">ResultSet rs = ps.executeQuery();</span><br><span class="line"><span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line"><span class="comment">// 获取图片</span></span><br><span class="line">Blob blob = rs.getBlob(<span class="string">"img"</span>);</span><br><span class="line"><span class="comment">// 获取图片二进制流</span></span><br><span class="line">InputStream in = blob.getBinaryStream();</span><br><span class="line"><span class="comment">// 写入磁盘</span></span><br><span class="line">Files.copy(in, Paths.get(<span class="string">"d:/myxq.jpg"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">JDBCUtil.close(conn, ps, rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="获取自动生成的主键"><a href="#获取自动生成的主键" class="headerlink" title="获取自动生成的主键"></a>获取自动生成的主键</h2><p>需求场景<br>用户注册时，添加用户名，密码后，插入到数据库当中<br>跳转成完善个人信息页，完善信息更新到刚插入的那个记录当中，所以要获取刚插入的那个主键是多少</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    Connection conn = JDBCUtil.getConn();</span><br><span class="line">    String sql = <span class="string">"insert into stu (name,age) values (?,?)"</span>;</span><br><span class="line">    <span class="comment">//PreparedStatement sql参数是在定义的时候设置的，所有与Statement不同的是，这个的RETURN_GENERATED_KEYS 是设置在这定义这里</span></span><br><span class="line">    PreparedStatement ps = conn.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);</span><br><span class="line">    </span><br><span class="line">    ps.setString(<span class="number">1</span>, <span class="string">"张三"</span>);</span><br><span class="line">    ps.setInt(<span class="number">2</span>, <span class="number">30</span>);</span><br><span class="line">    <span class="comment">// 这里面是空的</span></span><br><span class="line">    ps.executeUpdate();</span><br><span class="line">    </span><br><span class="line">    ResultSet rs = ps.getGeneratedKeys();</span><br><span class="line">    <span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">        <span class="keyword">int</span> id =rs.getInt(<span class="number">1</span>);<span class="comment">//获取第一列</span></span><br><span class="line">        System.out.println(id);</span><br><span class="line">    &#125;</span><br><span class="line">    JDBCUtil.close(conn, ps, rs);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    Connection conn = JDBCUtil.getConn();</span><br><span class="line">    String sql = <span class="string">"insert into stu (name,age) values ('张三',30)"</span>;</span><br><span class="line">    </span><br><span class="line">    Statement st = conn.createStatement();</span><br><span class="line">    <span class="comment">// 1.创建语句时，设置可以获取主键</span></span><br><span class="line">    st.executeUpdate(sql,Statement.RETURN_GENERATED_KEYS);</span><br><span class="line">    <span class="comment">// 2.通过语句对象的getGeneratedKeys获取主键</span></span><br><span class="line">    ResultSet rs = st.getGeneratedKeys();</span><br><span class="line">    <span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">        <span class="keyword">int</span> id =rs.getInt(<span class="number">1</span>);<span class="comment">//获取第一列</span></span><br><span class="line">        System.out.println(id);</span><br><span class="line">    &#125;</span><br><span class="line">    JDBCUtil.close(conn, st, rs);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="连接池"><a href="#连接池" class="headerlink" title="连接池"></a>连接池</h2><h4 id="没有连接池的情况"><a href="#没有连接池的情况" class="headerlink" title="没有连接池的情况"></a>没有连接池的情况</h4><ul><li>每次CRUD操作都要使用数据库的时候，都要创建一个数据库连接对象</li><li>普通的JDBC数据库连接使用 DriverManager 来获取</li><li>每次向数据库建立连接的时候都要将 Connection 加载到内存中</li><li>然后再验证用户名和密码花费时间0.05s～1s左右</li><li>每次CRUD操作就向数据库要一个连接</li><li>执行完成后再断开连接，这样的方式将会消耗大量的资源和时间，若同时有几百人甚至几千人在线，频繁的进行数据库连接操作将占用很多的系统资源，严重的甚至会造成服务器的崩溃</li></ul><h4 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h4><ul><li>池<br>保存对象的容器</li><li>连接池<br>保存数据库连接对象的容器</li><li>作用<br>初始化时创建一定数量的对象。需要时直接从池中取出一个空闲对象<br>用完后并不直接释放掉对象，而是再放到对象池中以方便下一次对象请求可以直接复用<br>池技术的优势是，可以消除对象创建所带来的延迟，从而提高系统的性能 </li><li>数据库连接池<br>数据库连接池的基本思想就是为数据库连接建立一个“缓冲池”<br>预先在缓冲池中放入一定数量的连接，当需要建立数据库连接时<br>只需从“缓冲池”中取出一个，使用完毕之后再放回去<br>我们可以通过设定连接池最大连接数来防止系统无尽的与数据库连接<br>可以通过连接池的管理机制监视数据库的连接的数量﹑使用情况，为系统开发﹑测试及性能调整提供依据</li></ul><p><img src="/2020/02/03/jdbc-note-3/8.png" alt="连接池"><br>连接对象是以链表形式存放，已释放的连接，放到最后</p><h4 id="连接池中的属性"><a href="#连接池中的属性" class="headerlink" title="连接池中的属性"></a>连接池中的属性</h4><p>合理的设置连接池的属性，会提高连接池的性能</p><ol><li>连接数据库时需要的4个要素<br>驱动名称，数据库地址，用户名，密码</li><li>初始化连接数<br>初始化时，连接池当中创建多少个Connection对象</li><li>最大连接数<br>连接池当中最多存储多少个Connection对象</li><li>最小连接数<br>连接池当中最少得存多个少Connection对象</li><li>最大的空闲时间<br>如果一个获取了连接对象，在指定时间内没有任何动作，就会自动释放链接</li><li>最大等待时间<br>在指定时间内，尝试获取连接，如果超出了指定时间，就会提示获取失败</li></ol><h4 id="连接池使用"><a href="#连接池使用" class="headerlink" title="连接池使用"></a>连接池使用</h4><p>连接池是使用javax.sql.DataSource接口来表示连接池<br>DataSource和jdbc一样，也是只提供一个接口，由第三方组织来提供<br>DataSource数据源和连接池Connection Pool是同一个东西，只是叫法不一样而已</p><p>常见连接池</p><ul><li>DBCP<br>Spring推荐，Tomcat的数据源使用的就是DBCP</li><li>C3P0<br>C3P0是一个开放源代码的JDBC连接池，它在lib目录中与Hibernate一起发布<br>从2007年就没有更新了，性能比较差</li><li>Druid<br>阿里巴巴提供的连接池-德鲁伊-号称最好的连接池，它里面除了这些， 还有更多的功能</li></ul><p>使用连接池与不使用连接池区别</p><ol><li>获取方式不同<br>传统：Connection conn = DriverManager.getConnection(url.userName,pwd);<br>连接池：Conneciton conn = DataSource对象.getConnection();</li><li>释放资源不同<br>传统：和数据库断开conn.close();<br>连接池：把数据库连接对象还给连接池，还可以给下一个人来使用</li></ol><h4 id="创建DataSource"><a href="#创建DataSource" class="headerlink" title="创建DataSource"></a>创建DataSource</h4><p>使用DBCP，DBCP是Apache软件基金组织下的开源连接池实现</p><p>1.导入相关的jar包<br>commons-dbcp-1.4.jar<br>commons-pool-1.5.6.jar<br>记得build path</p><p><img src="/2020/02/03/jdbc-note-3/9.png" alt="DBCP"></p><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>以.properties作为扩展名的文件<br>把库的连接地址，用户名，密码都写在了代码当中，不便于后期的维护<br>专门为数据库提供一个配置文件，里面就专门存放连接数据库的相关信息</p><p>配置文件的书写</p><ul><li>db.properties</li><li>内部是以key-value的形式存放<br>userName=root<br>password=1234</li><li>在Java中读取配置文件</li></ul><p><img src="/2020/02/03/jdbc-note-3/10.png" alt="配置文件"></p><h4 id="改写配置文件"><a href="#改写配置文件" class="headerlink" title="改写配置文件"></a>改写配置文件</h4><p>创建一个Source Folder文件夹，命名为:resource<br>只有Source Folder才会编译到字节码中，会编译到bin目录中<br><img src="/2020/02/03/jdbc-note-3/11.png" alt="Source Folder"></p><p>创建db.properties配置文件，注意key值必须和规定的一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url=jdbc:mysql://localhost:3306/jdbc_db</span><br><span class="line">username=root</span><br><span class="line">password=1234</span><br><span class="line">driverClassName=com.mysql.jdbc.Driver</span><br></pre></td></tr></table></figure><p>修改后的JDBCUtil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package com.it666.jdbc.util;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> DataSource ds = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">FileInputStream in = <span class="keyword">new</span> FileInputStream(<span class="string">"resource/db.properties"</span>);</span><br><span class="line">p.load(in);</span><br><span class="line"></span><br><span class="line">ds = DruidDataSourceFactory.createDataSource(p);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ds.getConnection();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// close方法没有变化</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn, Statement st, ResultSet rs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (st != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">st.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">rs.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用Druid"><a href="#使用Druid" class="headerlink" title="使用Druid"></a>使用Druid</h4><p>开源地址：<a href="https://github.com/alibaba/druid" target="_blank" rel="noopener">https://github.com/alibaba/druid</a><br>Druid是一个JDBC组件库，包括数据库连接池、SQL Parser等组件。DruidDataSource是最好的数据库连接池</p><p>从DBCP到Druid<br>DruidDataSource的配置是兼容DBCP的，从DBCP迁移到DruidDataSource，只需要修改数据源的实现类就可以了<br>只需要导入jar包(druid-1.0.15.jar)，修改代码即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改创建DataSource的实现类即可，将Basic修改为Druid</span></span><br><span class="line">ds = BasicDataSourceFactory.createDataSource(p); <span class="comment">// DBCP</span></span><br><span class="line">ds = DruidDataSourceFactory.createDataSource(p); <span class="comment">// Druid</span></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005977005.htm" target="_blank" rel="noopener">Java零基础到高级JDBC连接数据库</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/03/jdbc-note-3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>JDBC笔记-DAO</title>
      <link>https://aaronlinv.github.io/2020/02/03/jdbc-note-2/</link>
      <guid>https://aaronlinv.github.io/2020/02/03/jdbc-note-2/</guid>
      <pubDate>Mon, 03 Feb 2020 06:19:33 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;DAO设计规范&quot;&gt;&lt;a href=&quot;#DAO设计规范&quot; class=&quot;headerlink&quot; title=&quot;DAO设计规范&quot;&gt;&lt;/a&gt;DAO设计规范&lt;/h2&gt;&lt;p&gt;编写DAO组件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定义DAO接口&lt;/li&gt;
&lt;li&gt;编写对应DAO实现类&lt;/
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="DAO设计规范"><a href="#DAO设计规范" class="headerlink" title="DAO设计规范"></a>DAO设计规范</h2><p>编写DAO组件</p><ol><li>定义DAO接口</li><li>编写对应DAO实现类</li></ol><p>面向接口编程<br>根据客户提出的需求，定义接口，业务具体实现是通过实现类来完成<br>当客户提出新的需求，只需要编写该业务逻辑新的实现类<br>好处</p><ul><li>业务逻辑更加清晰</li><li>增强代码的扩展性，可维护性</li><li>接口和实现相分离，适合团队协作开发</li><li>降低耦合度，便于以后升级扩展</li></ul><p>包名的规范</p><p>域名倒写.模块名称.组件名称</p><ul><li>存储所有的domain：package com.it666.jdbc.domain</li><li>存储所有的dao接口：page com.it666.jdbc.dao</li><li>存储所有的Dao接口实现类：page com.it666.jdbc.dao.impl</li><li>存储Dao组件的测试类：page com.it666.jdbc.dao.test</li></ul><p>类名规范</p><ul><li>domain类：存储在domain包中，用于描述一个对象，是一个javaBean,写时要见名知意</li><li>dao接口：存储在dao包中，用于表示某一个对象的CRUD声明，起名规范IDomainDao</li><li>dao实现类：存储到dao.impl包中，用于表示DAO接口的实现类，要实现DAO接口</li></ul><h2 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h2><ol><li>创建表</li><li>建立domain包和domain类</li><li>建立dao包和dao接口</li><li>建立dao.impl包和dao实现类</li><li>根据dao接口创建dao测试类</li><li>编写实现类当中dao的声明的方法体</li><li>每编写一个dao方法，进行测试功能是否正确</li></ol><p>（放大图片，Chrome浏览器可以用imagus插件，或者按Ctrl和加号键，Ctrl和0 还原网页大小）<br>建立stu表，设置id,name,age字段，id设置为主键和自动递增</p><p><img src="/2020/02/03/jdbc-note-2/1.png" alt="包结构"><br><img src="/2020/02/03/jdbc-note-2/2.png" alt="内部结构"></p><p>写IStudentDao接口，写类StudentDaoImpl应用接口，重写方法<br>写完一个方法就在测试类中写测试方法</p><p>使用单元测试，在测试StudentDaoTest类中，写一个public方法<br>在方法上面加@Test，Ctrl+1 选择Adds the JUnit 4 library to the build path.<br>点想要单元测试的方法，点击运行或者Ctrl+F11</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">    stu.setName(<span class="string">"al"</span>);</span><br><span class="line">    stu.setAge(<span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">    IStudentDao dao = <span class="keyword">new</span> StudentDaoImpl();</span><br><span class="line">    dao.save(stu);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存方法<br><img src="/2020/02/03/jdbc-note-2/3.png" alt="保存方法"></p><p>删除方法<br><img src="/2020/02/03/jdbc-note-2/4.png" alt="删除方法"></p><p>修改方法<br><img src="/2020/02/03/jdbc-note-2/5.png" alt="修改方法"></p><p>获取一个学生<br><img src="/2020/02/03/jdbc-note-2/6.png" alt="获取一个学生"></p><p>获取所有学生<br><img src="/2020/02/03/jdbc-note-2/7.png" alt="获取所有学生"></p><h2 id="预编译语句"><a href="#预编译语句" class="headerlink" title="预编译语句"></a>预编译语句</h2><p>Statement接口：用于进行Java程序和数据库之间的数据传输<br>具体类有3个实现</p><ul><li>Statement：用于对数据库进行通用访问，使用的是静态sql</li><li>PreparedStatement：用于预编译模板SQL语句,在运行时接受sql输入参数</li><li>CallableStatement：要访问数据库存储过程时使用，也可以接受运行时输入参数</li></ul><h4 id="PreparedStatement"><a href="#PreparedStatement" class="headerlink" title="PreparedStatement"></a>PreparedStatement</h4><p>没有预编译语句，所有的sql都是进行拼接</p><p>PreparedStatement 用于预编译模板SQL语句<br>在性能和代码灵活性上有显著地提高<br>PreparedStatement 对象使用 ? 作为占位符，即参数标记<br>使用 setXXX( index，value) 方法将值绑定到参数中，index是引用顺序从 1 开始</p><p>PreparedStatement 对象执行SQL语句（注意，它们都没有参数，不同于Statement要传入sql语句）</p><ul><li>executeQuery()</li><li>executeUpdate()</li></ul><p>内部优化：MySql不支持，Oracle支持<br>预编译语句更安全，防止sql注入（通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令）</p><p>PreparedStatement能防止注入是因为它把单引号转义了，变成了&#39;<br>这样一来，就无法截断SQL语句，进而无法拼接SQL语句 基本上没有办法注入了<br><img src="/2020/02/03/jdbc-note-2/8.png" alt="sql注入"></p><h2 id="重构1-抽取JDBCUtil"><a href="#重构1-抽取JDBCUtil" class="headerlink" title="重构1-抽取JDBCUtil"></a>重构1-抽取JDBCUtil</h2><ol><li>每一个DAO方法当中都会写驱动名称、url、用户名、密码，把公共的这些声明为成员变量，在一个类当中能够共享这些成员变量</li><li>不需要每次都注册驱动，把加载驱动放到静态代码块当中，只会在类被加载到JVM时，才会执行一次</li><li>每个dao方法每次操作只需要connection对象，至于是怎么样创建的不关心，把创建Connection代码抽取到jdbcUtil当中，并提供一个getConn就能够获得连接对象</li><li>每个dao方法都要关闭资源，在util当中提供一个方法专门关闭资源，在方法当中传入要关闭哪些资源</li><li>DAO方法中，拼接SQL太麻烦，要使用预编译语句对象</li></ol><ol start="6"><li>（代办）DAO方法当中每次都创建一个connection对象，用完就关闭了，创建Connection成本很大，通过数据库连接池来解决</li><li>（代办）JDBCUtil当中的用户名，密码这些信息都写到了文件当中，不便于维护，给写到一个单独的配置文件当中</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package com.it666.jdbc.util;</span></span><br><span class="line"><span class="comment">// 需要import包</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1.公共成员变量</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String url = <span class="string">"jdbc:mysql://localhost:3306/jdbc_db"</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String user = <span class="string">"root"</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String password = <span class="string">"1234"</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String driverName = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">注意！！变量这些要写在前面，如果把静态代码块写在静态字段前，会导致这些变量无法初始化（报错：初始化异常）</span></span><br><span class="line"><span class="comment">    因为这些静态变量都是在静态代码块中初始化的</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 2. 加载驱动只执行一次，用静态代码块加载驱动   </span></span><br><span class="line">Class.forName(driverName);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 3.getConn方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 4.close方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn, Statement st, ResultSet rs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (st != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">st.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">rs.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改StudentDaoImpl类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package com.it666.jdbc.dao.impl;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDaoImpl</span> <span class="keyword">implements</span> <span class="title">IStudentDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Student stu)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 5.使用预编译语句</span></span><br><span class="line">PreparedStatement ps = <span class="keyword">null</span>;<span class="comment">// 用预编译语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">conn = JDBCUtil.getConn();</span><br><span class="line">String sql = <span class="string">"insert into stu (name,age) values (?,?)"</span>; <span class="comment">// 预编译语句用?占位</span></span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">ps.setString(<span class="number">1</span>, stu.getName());<span class="comment">// 设置第一个占位符?的值</span></span><br><span class="line">ps.setInt(<span class="number">2</span>, stu.getAge());</span><br><span class="line"></span><br><span class="line">ps.executeUpdate(); <span class="comment">//执行sql语句</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">JDBCUtil.close(conn, ps, <span class="keyword">null</span>); <span class="comment">//因为PreparedStatement是Statement的实现类，所以可以传入ps</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//DML语句同理</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> id, Student stu)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Student <span class="title">get</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn = JDBCUtil.getConn();</span><br><span class="line">String sql = <span class="string">"select * from stu where id = ?"</span>;</span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">ps.setInt(<span class="number">1</span>, id);</span><br><span class="line"></span><br><span class="line">rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">stu.setName(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">stu.setAge(rs.getInt(<span class="string">"age"</span>));</span><br><span class="line">stu.setId(rs.getInt(<span class="string">"id"</span>));</span><br><span class="line"><span class="keyword">return</span> stu;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">JDBCUtil.close(conn, ps, rs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">getAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn = JDBCUtil.getConn();</span><br><span class="line">String sql = <span class="string">"select * from stu"</span>;</span><br><span class="line">ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">rs = ps.executeQuery();</span><br><span class="line">List&lt;Student&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">Student stu = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">stu.setId(rs.getInt(<span class="string">"id"</span>));</span><br><span class="line">stu.setName(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">stu.setAge(rs.getInt(<span class="string">"age"</span>));</span><br><span class="line">list.add(stu);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">JDBCUtil.close(conn, ps, rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005977005.htm" target="_blank" rel="noopener">Java零基础到高级JDBC连接数据库</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/03/jdbc-note-2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>JDBC笔记-基础</title>
      <link>https://aaronlinv.github.io/2020/02/01/jdbc-note-1/</link>
      <guid>https://aaronlinv.github.io/2020/02/01/jdbc-note-1/</guid>
      <pubDate>Sat, 01 Feb 2020 04:01:14 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;JDBC-概述&quot;&gt;&lt;a href=&quot;#JDBC-概述&quot; class=&quot;headerlink&quot; title=&quot;JDBC 概述&quot;&gt;&lt;/a&gt;JDBC 概述&lt;/h2&gt;&lt;p&gt;Java数据库连接 (Java Database Connectivity)&lt;br&gt;用于执行SQL语
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="JDBC-概述"><a href="#JDBC-概述" class="headerlink" title="JDBC 概述"></a>JDBC 概述</h2><p>Java数据库连接 (Java Database Connectivity)<br>用于执行SQL语句的Java API，它由一组用Java语言编写的类和接口组成<br>JDBC提供了一种操作数据的标准，JDBC的目标是使Java程序员使用JDBC可以连接任何提供了JDBC驱动程序的数据库系统</p><p>java.sql包装的就是JDBC的API<br><img src="/2020/02/01/jdbc-note-1/1.png" alt="高新强"></p><h2 id="连接MySQL"><a href="#连接MySQL" class="headerlink" title="连接MySQL"></a>连接MySQL</h2><p>新建一个lib文件夹，拖入MySQL驱动，builder path 编译路径<br><img src="/2020/02/01/jdbc-note-1/2.png" alt="加载驱动"></p><p>查看驱动相关API：Ctrl+Shift+T 查找driver，关联源码<br><img src="/2020/02/01/jdbc-note-1/3.png" alt="关联源码"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_01Connect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把com.mysql.jdbc.Driver这份字节码加载进JVM，会执行该字节码中的静态代码块</span></span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">// ClassNotFoundException异常</span></span><br><span class="line"></span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3306/jdbc_db"</span>;<span class="comment">// 需要创建jdbc_db这个数据库</span></span><br><span class="line">String user = <span class="string">"root"</span>;</span><br><span class="line">String password = <span class="string">"1234"</span>;</span><br><span class="line">Connection conn = DriverManager.getConnection(url, user, password);<span class="comment">// SQLException异常</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从1.6开始它会自动读这个文件，不用手动加载驱动<br>在JavaWeb中不支持自动注册，所以以后我们都要自己手动写上</p><h2 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h2><p>用Statement接口执行静态SQL语句对象</p><p>把SQL语句发送到数据库中去执行，并返回执行的结果</p><ul><li>对于DQL返回查询的结果集</li><li>对于DML返回受影响的行数</li><li>对于DDL返回0</li></ul><p>执行sql后需要释放资源<br>Connection连接就相当于Java和到Mysql之间建立管道<br>Statement就相当于从数据库又接了一个管道连接MySQL的执行程序<br><img src="/2020/02/01/jdbc-note-1/4.png" alt="释放资源"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3306/jdbc_db"</span>;</span><br><span class="line">String user = <span class="string">"root"</span>;</span><br><span class="line">String password = <span class="string">"1234"</span>;</span><br><span class="line"></span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement st = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">conn = DriverManager.getConnection(url, user, password);</span><br><span class="line">st = conn.createStatement();</span><br><span class="line"></span><br><span class="line">String sql = <span class="string">"create table jdbc_stu(id int,name varchar(30),age int)"</span>;</span><br><span class="line"><span class="keyword">int</span> row = st.executeUpdate(sql);</span><br><span class="line">System.out.println(row);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (st != <span class="keyword">null</span>) &#123;</span><br><span class="line">st.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行DML和执行DDL步骤相同，只有sql语句发生了改变</p><h2 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h2><p>常用方法</p><ul><li>boolean  next():判断是否有下一行数据,若有,则向下移动一行指针</li><li>getXxx(int columnIndex):获取当前行中,第几列.(从1开始)不推荐</li><li>getXxx(String columnName):获取当前行中的,指定列名的列的值.columnName是列名/列的别名</li><li>若列的类型是VARCHAR/CHAR/TEXT,都使用getString来获取列的值</li><li>若列的类型是int/integer/–&gt;getInt来获取列的值<br><img src="/2020/02/01/jdbc-note-1/5.png" alt="MySQL与Java数据类型对照表"></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3306/jdbc_db"</span>;</span><br><span class="line">String user = <span class="string">"root"</span>;</span><br><span class="line">String password = <span class="string">"1234"</span>;</span><br><span class="line"></span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement st = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 1.executeQuery(Sql)会得到一个结果集ResultSet，最后也需要释放</span></span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">conn = DriverManager.getConnection(url, user, password);</span><br><span class="line">st = conn.createStatement();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.executeQuery执行DQL返回一个结果集</span></span><br><span class="line">String sql = <span class="string">"select * from emp where ename = '李白' "</span>;<span class="comment">//需要有建emp表，否则会报错</span></span><br><span class="line">rs = st.executeQuery(sql);</span><br><span class="line"><span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">String ename = rs.getString(<span class="string">"ename"</span>);</span><br><span class="line"><span class="keyword">int</span> salary = rs.getInt(<span class="string">"salary"</span>);</span><br><span class="line">System.out.println(<span class="string">"姓名："</span>+ename+<span class="string">" 薪水："</span>+salary);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (st != <span class="keyword">null</span>) &#123;</span><br><span class="line">st.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.结果集也要释放</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">rs.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DAO设计"><a href="#DAO设计" class="headerlink" title="DAO设计"></a>DAO设计</h2><p>Data Access Object（数据存取对象）<br>位于业务逻辑和持久化数据之间，实现对持久化数据的访问<br>解决问题：多个地方都要都同时做CRUD操作时，重复的代码就会很多<br><img src="/2020/02/01/jdbc-note-1/6.png" alt="DAO示例图"></p><h2 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h2><p>Object Relational Mapping（对象关系映射）<br>将关系数据库中表中的记录映射成为对象，以对象的形式展现<br>方便开发人员以面向对象的思想来实现对数据库的操作<br><img src="/2020/02/01/jdbc-note-1/7.png" alt="对应关系"><br><img src="/2020/02/01/jdbc-note-1/8.png" alt="ORM示例图"></p><h2 id="domain"><a href="#domain" class="headerlink" title="domain"></a>domain</h2><p>符合JavaBean规范的类<br>JavaBean：一个类当中有字段和该字段的getter与Setter方法<br>作用：是用户与数据库交互的核心中转站</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://study.163.com/course/introduction/1005977005.htm" target="_blank" rel="noopener">Java零基础到高级JDBC连接数据库</a></p>]]></content:encoded>
      
      <comments>https://aaronlinv.github.io/2020/02/01/jdbc-note-1/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
